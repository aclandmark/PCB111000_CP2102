
CP2102_miniOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803c00  00803c00  00002758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000026e4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00803c00  00803c00  00002758  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002758  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000027b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000027f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002442  00000000  00000000  00002894  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001758  00000000  00000000  00004cd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011f3  00000000  00000000  0000642e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000268  00000000  00000000  00007624  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000106d  00000000  00000000  0000788c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012be  00000000  00000000  000088f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00009bb7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8b 01 	jmp	0x316	; 0x316 <__ctors_end>
       4:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
       8:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
       c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      10:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      14:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      18:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      1c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      20:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      24:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      28:	0c 94 57 0c 	jmp	0x18ae	; 0x18ae <__vector_10>
      2c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      30:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      34:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__vector_13>
      38:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      3c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      40:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      44:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      48:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      4c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      50:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      54:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      58:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      5c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      60:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      64:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      68:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      6c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      70:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      74:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      78:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      7c:	f0 02       	muls	r31, r16
      7e:	f0 02       	muls	r31, r16
      80:	1d 03       	fmul	r17, r21
      82:	50 03       	mulsu	r21, r16
      84:	8b 03       	fmulsu	r16, r19
      86:	b6 03       	fmuls	r19, r22
      88:	b6 03       	fmuls	r19, r22
      8a:	b6 03       	fmuls	r19, r22
      8c:	b6 03       	fmuls	r19, r22
      8e:	b6 03       	fmuls	r19, r22
      90:	b6 03       	fmuls	r19, r22
      92:	b6 03       	fmuls	r19, r22
      94:	b6 03       	fmuls	r19, r22
      96:	b6 03       	fmuls	r19, r22
      98:	b6 03       	fmuls	r19, r22
      9a:	b6 03       	fmuls	r19, r22
      9c:	b6 03       	fmuls	r19, r22
      9e:	b6 03       	fmuls	r19, r22
      a0:	b6 03       	fmuls	r19, r22
      a2:	b6 03       	fmuls	r19, r22
      a4:	b6 03       	fmuls	r19, r22
      a6:	b6 03       	fmuls	r19, r22
      a8:	b6 03       	fmuls	r19, r22
      aa:	b6 03       	fmuls	r19, r22
      ac:	b6 03       	fmuls	r19, r22
      ae:	b6 03       	fmuls	r19, r22
      b0:	b6 03       	fmuls	r19, r22
      b2:	b6 03       	fmuls	r19, r22
      b4:	b6 03       	fmuls	r19, r22
      b6:	b6 03       	fmuls	r19, r22
      b8:	b6 03       	fmuls	r19, r22
      ba:	b6 03       	fmuls	r19, r22
      bc:	9d 02       	muls	r25, r29
      be:	c6 02       	muls	r28, r22
      c0:	ce 06       	cpc	r12, r30
      c2:	d3 06       	cpc	r13, r19
      c4:	da 06       	cpc	r13, r26
      c6:	e1 06       	cpc	r14, r17
      c8:	e8 06       	cpc	r14, r24
      ca:	ef 06       	cpc	r14, r31
      cc:	f6 06       	cpc	r15, r22
      ce:	fb 06       	cpc	r15, r27
      d0:	fb 06       	cpc	r15, r27
      d2:	fb 06       	cpc	r15, r27
      d4:	fb 06       	cpc	r15, r27
      d6:	fb 06       	cpc	r15, r27
      d8:	fb 06       	cpc	r15, r27
      da:	fb 06       	cpc	r15, r27
      dc:	fb 06       	cpc	r15, r27
      de:	fb 06       	cpc	r15, r27
      e0:	fb 06       	cpc	r15, r27
      e2:	fb 06       	cpc	r15, r27
      e4:	fb 06       	cpc	r15, r27
      e6:	fb 06       	cpc	r15, r27
      e8:	fb 06       	cpc	r15, r27
      ea:	fb 06       	cpc	r15, r27
      ec:	fb 06       	cpc	r15, r27
      ee:	fb 06       	cpc	r15, r27
      f0:	fb 06       	cpc	r15, r27
      f2:	fb 06       	cpc	r15, r27
      f4:	fb 06       	cpc	r15, r27
      f6:	fb 06       	cpc	r15, r27
      f8:	fb 06       	cpc	r15, r27
      fa:	fb 06       	cpc	r15, r27
      fc:	fb 06       	cpc	r15, r27
      fe:	fb 06       	cpc	r15, r27
     100:	ce 06       	cpc	r12, r30
     102:	d3 06       	cpc	r13, r19
     104:	da 06       	cpc	r13, r26
     106:	e1 06       	cpc	r14, r17
     108:	e8 06       	cpc	r14, r24
     10a:	ef 06       	cpc	r14, r31
     10c:	f6 06       	cpc	r15, r22
     10e:	cf 09       	sbc	r28, r15
     110:	84 0a       	sbc	r8, r20
     112:	84 0a       	sbc	r8, r20
     114:	6b 09       	sbc	r22, r11
     116:	76 09       	sbc	r23, r6
     118:	7c 09       	sbc	r23, r12
     11a:	87 09       	sbc	r24, r7
     11c:	92 09       	sbc	r25, r2
     11e:	9d 09       	sbc	r25, r13
     120:	a8 09       	sbc	r26, r8
     122:	b3 09       	sbc	r27, r3
     124:	b9 09       	sbc	r27, r9
     126:	c4 09       	sbc	r28, r4
     128:	84 0a       	sbc	r8, r20
     12a:	84 0a       	sbc	r8, r20
     12c:	84 0a       	sbc	r8, r20
     12e:	84 0a       	sbc	r8, r20
     130:	84 0a       	sbc	r8, r20
     132:	84 0a       	sbc	r8, r20
     134:	84 0a       	sbc	r8, r20
     136:	84 0a       	sbc	r8, r20
     138:	84 0a       	sbc	r8, r20
     13a:	84 0a       	sbc	r8, r20
     13c:	84 0a       	sbc	r8, r20
     13e:	d5 09       	sbc	r29, r5
     140:	84 0a       	sbc	r8, r20
     142:	84 0a       	sbc	r8, r20
     144:	84 0a       	sbc	r8, r20
     146:	84 0a       	sbc	r8, r20
     148:	84 0a       	sbc	r8, r20
     14a:	84 0a       	sbc	r8, r20
     14c:	84 0a       	sbc	r8, r20
     14e:	84 0a       	sbc	r8, r20
     150:	84 0a       	sbc	r8, r20
     152:	84 0a       	sbc	r8, r20
     154:	84 0a       	sbc	r8, r20
     156:	84 0a       	sbc	r8, r20
     158:	84 0a       	sbc	r8, r20
     15a:	84 0a       	sbc	r8, r20
     15c:	84 0a       	sbc	r8, r20
     15e:	84 0a       	sbc	r8, r20
     160:	84 0a       	sbc	r8, r20
     162:	84 0a       	sbc	r8, r20
     164:	84 0a       	sbc	r8, r20
     166:	84 0a       	sbc	r8, r20
     168:	84 0a       	sbc	r8, r20
     16a:	84 0a       	sbc	r8, r20
     16c:	84 0a       	sbc	r8, r20
     16e:	84 0a       	sbc	r8, r20
     170:	84 0a       	sbc	r8, r20
     172:	84 0a       	sbc	r8, r20
     174:	84 0a       	sbc	r8, r20
     176:	84 0a       	sbc	r8, r20
     178:	84 0a       	sbc	r8, r20
     17a:	84 0a       	sbc	r8, r20
     17c:	84 0a       	sbc	r8, r20
     17e:	d5 09       	sbc	r29, r5
     180:	84 0a       	sbc	r8, r20
     182:	84 0a       	sbc	r8, r20
     184:	84 0a       	sbc	r8, r20
     186:	84 0a       	sbc	r8, r20
     188:	84 0a       	sbc	r8, r20
     18a:	84 0a       	sbc	r8, r20
     18c:	84 0a       	sbc	r8, r20
     18e:	84 0a       	sbc	r8, r20
     190:	84 0a       	sbc	r8, r20
     192:	84 0a       	sbc	r8, r20
     194:	84 0a       	sbc	r8, r20
     196:	84 0a       	sbc	r8, r20
     198:	84 0a       	sbc	r8, r20
     19a:	84 0a       	sbc	r8, r20
     19c:	84 0a       	sbc	r8, r20
     19e:	84 0a       	sbc	r8, r20
     1a0:	84 0a       	sbc	r8, r20
     1a2:	84 0a       	sbc	r8, r20
     1a4:	84 0a       	sbc	r8, r20
     1a6:	84 0a       	sbc	r8, r20
     1a8:	84 0a       	sbc	r8, r20
     1aa:	84 0a       	sbc	r8, r20
     1ac:	84 0a       	sbc	r8, r20
     1ae:	84 0a       	sbc	r8, r20
     1b0:	84 0a       	sbc	r8, r20
     1b2:	84 0a       	sbc	r8, r20
     1b4:	84 0a       	sbc	r8, r20
     1b6:	84 0a       	sbc	r8, r20
     1b8:	84 0a       	sbc	r8, r20
     1ba:	84 0a       	sbc	r8, r20
     1bc:	84 0a       	sbc	r8, r20
     1be:	84 0a       	sbc	r8, r20
     1c0:	84 0a       	sbc	r8, r20
     1c2:	84 0a       	sbc	r8, r20
     1c4:	84 0a       	sbc	r8, r20
     1c6:	84 0a       	sbc	r8, r20
     1c8:	84 0a       	sbc	r8, r20
     1ca:	84 0a       	sbc	r8, r20
     1cc:	84 0a       	sbc	r8, r20
     1ce:	84 0a       	sbc	r8, r20
     1d0:	84 0a       	sbc	r8, r20
     1d2:	84 0a       	sbc	r8, r20
     1d4:	84 0a       	sbc	r8, r20
     1d6:	84 0a       	sbc	r8, r20
     1d8:	84 0a       	sbc	r8, r20
     1da:	84 0a       	sbc	r8, r20
     1dc:	84 0a       	sbc	r8, r20
     1de:	84 0a       	sbc	r8, r20
     1e0:	84 0a       	sbc	r8, r20
     1e2:	84 0a       	sbc	r8, r20
     1e4:	84 0a       	sbc	r8, r20
     1e6:	84 0a       	sbc	r8, r20
     1e8:	84 0a       	sbc	r8, r20
     1ea:	84 0a       	sbc	r8, r20
     1ec:	84 0a       	sbc	r8, r20
     1ee:	84 0a       	sbc	r8, r20
     1f0:	84 0a       	sbc	r8, r20
     1f2:	84 0a       	sbc	r8, r20
     1f4:	84 0a       	sbc	r8, r20
     1f6:	84 0a       	sbc	r8, r20
     1f8:	84 0a       	sbc	r8, r20
     1fa:	84 0a       	sbc	r8, r20
     1fc:	84 0a       	sbc	r8, r20
     1fe:	84 0a       	sbc	r8, r20
     200:	84 0a       	sbc	r8, r20
     202:	84 0a       	sbc	r8, r20
     204:	84 0a       	sbc	r8, r20
     206:	84 0a       	sbc	r8, r20
     208:	84 0a       	sbc	r8, r20
     20a:	84 0a       	sbc	r8, r20
     20c:	84 0a       	sbc	r8, r20
     20e:	7a 0a       	sbc	r7, r26
     210:	84 0a       	sbc	r8, r20
     212:	84 0a       	sbc	r8, r20
     214:	e0 09       	sbc	r30, r0
     216:	f1 09       	sbc	r31, r1
     218:	fa 09       	sbc	r31, r10
     21a:	0b 0a       	sbc	r0, r27
     21c:	1c 0a       	sbc	r1, r28
     21e:	2d 0a       	sbc	r2, r29
     220:	3e 0a       	sbc	r3, r30
     222:	4f 0a       	sbc	r4, r31
     224:	58 0a       	sbc	r5, r24
     226:	69 0a       	sbc	r6, r25
     228:	90 0a       	sbc	r9, r16
     22a:	9e 0a       	sbc	r9, r30
     22c:	92 0a       	sbc	r9, r18
     22e:	94 0a       	sbc	r9, r20
     230:	96 0a       	sbc	r9, r22
     232:	98 0a       	sbc	r9, r24
     234:	9a 0a       	sbc	r9, r26
     236:	9c 0a       	sbc	r9, r28
     238:	fa 0a       	sbc	r15, r26
     23a:	00 0b       	sbc	r16, r16
     23c:	06 0b       	sbc	r16, r22
     23e:	0c 0b       	sbc	r16, r28
     240:	12 0b       	sbc	r17, r18
     242:	18 0b       	sbc	r17, r24
     244:	1e 0b       	sbc	r17, r30
     246:	24 0b       	sbc	r18, r20
     248:	45 0b       	sbc	r20, r21
     24a:	66 0b       	sbc	r22, r22
     24c:	87 0b       	sbc	r24, r23
     24e:	a8 0b       	sbc	r26, r24
     250:	ca 0b       	sbc	r28, r26
     252:	eb 0b       	sbc	r30, r27
     254:	0c 0c       	add	r0, r12
     256:	2d 0c       	add	r2, r13
     258:	07 63       	ori	r16, 0x37	; 55
     25a:	42 36       	cpi	r20, 0x62	; 98
     25c:	b7 9b       	sbis	0x16, 7	; 22
     25e:	d8 a7       	std	Y+40, r29	; 0x28
     260:	1a 39       	cpi	r17, 0x9A	; 154
     262:	68 56       	subi	r22, 0x68	; 104
     264:	18 ae       	std	Y+56, r1	; 0x38
     266:	ba ab       	std	Y+50, r27	; 0x32
     268:	55 8c       	ldd	r5, Z+29	; 0x1d
     26a:	1d 3c       	cpi	r17, 0xCD	; 205
     26c:	b7 cc       	rjmp	.-1682   	; 0xfffffbdc <__eeprom_end+0xff7efbdc>
     26e:	57 63       	ori	r21, 0x37	; 55
     270:	bd 6d       	ori	r27, 0xDD	; 221
     272:	ed fd       	.word	0xfded	; ????
     274:	75 3e       	cpi	r23, 0xE5	; 229
     276:	f6 17       	cp	r31, r22
     278:	72 31       	cpi	r23, 0x12	; 18
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	08 00       	.word	0x0008	; ????
     282:	00 00       	nop
     284:	be 92       	st	-X, r11
     286:	24 49       	sbci	r18, 0x94	; 148
     288:	12 3e       	cpi	r17, 0xE2	; 226
     28a:	ab aa       	std	Y+51, r10	; 0x33
     28c:	aa 2a       	or	r10, r26
     28e:	be cd       	rjmp	.-1156   	; 0xfffffe0c <__eeprom_end+0xff7efe0c>
     290:	cc cc       	rjmp	.-1640   	; 0xfffffc2a <__eeprom_end+0xff7efc2a>
     292:	4c 3e       	cpi	r20, 0xEC	; 236
     294:	00 00       	nop
     296:	00 80       	ld	r0, Z
     298:	be ab       	std	Y+54, r27	; 0x36
     29a:	aa aa       	std	Y+50, r10	; 0x32
     29c:	aa 3e       	cpi	r26, 0xEA	; 234
     29e:	00 00       	nop
     2a0:	00 00       	nop
     2a2:	bf 00       	.word	0x00bf	; ????
     2a4:	00 00       	nop
     2a6:	80 3f       	cpi	r24, 0xF0	; 240
     2a8:	00 00       	nop
     2aa:	00 00       	nop
     2ac:	00 08       	sbc	r0, r0
     2ae:	41 78       	andi	r20, 0x81	; 129
     2b0:	d3 bb       	out	0x13, r29	; 19
     2b2:	43 87       	std	Z+11, r20	; 0x0b
     2b4:	d1 13       	cpse	r29, r17
     2b6:	3d 19       	sub	r19, r13
     2b8:	0e 3c       	cpi	r16, 0xCE	; 206
     2ba:	c3 bd       	out	0x23, r28	; 35
     2bc:	42 82       	std	Z+2, r4	; 0x02
     2be:	ad 2b       	or	r26, r29
     2c0:	3e 68       	ori	r19, 0x8E	; 142
     2c2:	ec 82       	std	Y+4, r14	; 0x04
     2c4:	76 be       	out	0x36, r7	; 54
     2c6:	d9 8f       	std	Y+25, r29	; 0x19
     2c8:	e1 a9       	ldd	r30, Z+49	; 0x31
     2ca:	3e 4c       	sbci	r19, 0xCE	; 206
     2cc:	80 ef       	ldi	r24, 0xF0	; 240
     2ce:	ff be       	out	0x3f, r15	; 63
     2d0:	01 c4       	rjmp	.+2050   	; 0xad4 <ftoaL+0x280>
     2d2:	ff 7f       	andi	r31, 0xFF	; 255
     2d4:	3f 00       	.word	0x003f	; ????
     2d6:	00 00       	nop
	...

000002da <__trampolines_end>:
     2da:	4e 41       	sbci	r20, 0x1E	; 30
     2dc:	4e 49       	Address 0x000002dc is out of bounds.
.word	0xffff	; ????

000002dd <pstr_inity>:
     2dd:	49 4e 49 54 59                                      INITY

000002e2 <pstr_inf>:
     2e2:	49 4e 46                                            INF

000002e5 <pwr_m10>:
     2e5:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     2f5:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000002fd <pwr_p10>:
     2fd:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     30d:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000316 <__ctors_end>:
     316:	11 24       	eor	r1, r1
     318:	1f be       	out	0x3f, r1	; 63
     31a:	cf ef       	ldi	r28, 0xFF	; 255
     31c:	cd bf       	out	0x3d, r28	; 61
     31e:	df e3       	ldi	r29, 0x3F	; 63
     320:	de bf       	out	0x3e, r29	; 62

00000322 <__do_clear_bss>:
     322:	2c e3       	ldi	r18, 0x3C	; 60
     324:	a0 e0       	ldi	r26, 0x00	; 0
     326:	bc e3       	ldi	r27, 0x3C	; 60
     328:	01 c0       	rjmp	.+2      	; 0x32c <.do_clear_bss_start>

0000032a <.do_clear_bss_loop>:
     32a:	1d 92       	st	X+, r1

0000032c <.do_clear_bss_start>:
     32c:	a0 35       	cpi	r26, 0x50	; 80
     32e:	b2 07       	cpc	r27, r18
     330:	e1 f7       	brne	.-8      	; 0x32a <.do_clear_bss_loop>
     332:	0e 94 33 06 	call	0xc66	; 0xc66 <main>
     336:	0c 94 70 13 	jmp	0x26e0	; 0x26e0 <_exit>

0000033a <__bad_interrupt>:
     33a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000033e <Receive_data_byte>:
	float inc = 1;
	for(int m = 0; m < afterpoint; m++){
	inc = inc/10.0;}
	inc = inc*0.55;																	//Attempt to avoid trailing nines
	num = num + inc;
	return num;}
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	eb e0       	ldi	r30, 0x0B	; 11
     344:	fa e0       	ldi	r31, 0x0A	; 10
     346:	80 81       	ld	r24, Z
     348:	84 ff       	sbrs	r24, 4
     34a:	fd cf       	rjmp	.-6      	; 0x346 <Receive_data_byte+0x8>
     34c:	eb e0       	ldi	r30, 0x0B	; 11
     34e:	fa e0       	ldi	r31, 0x0A	; 10
     350:	80 81       	ld	r24, Z
     352:	80 61       	ori	r24, 0x10	; 16
     354:	80 83       	st	Z, r24
     356:	e0 e4       	ldi	r30, 0x40	; 64
     358:	f4 e0       	ldi	r31, 0x04	; 4
     35a:	80 81       	ld	r24, Z
     35c:	87 7f       	andi	r24, 0xF7	; 247
     35e:	80 83       	st	Z, r24
     360:	e8 e2       	ldi	r30, 0x28	; 40
     362:	fa e0       	ldi	r31, 0x0A	; 10
     364:	80 81       	ld	r24, Z
     366:	91 81       	ldd	r25, Z+1	; 0x01
     368:	88 53       	subi	r24, 0x38	; 56
     36a:	9f 4f       	sbci	r25, 0xFF	; 255
     36c:	80 83       	st	Z, r24
     36e:	91 83       	std	Z+1, r25	; 0x01
     370:	eb e0       	ldi	r30, 0x0B	; 11
     372:	fa e0       	ldi	r31, 0x0A	; 10
     374:	80 81       	ld	r24, Z
     376:	84 ff       	sbrs	r24, 4
     378:	fd cf       	rjmp	.-6      	; 0x374 <Receive_data_byte+0x36>
     37a:	eb e0       	ldi	r30, 0x0B	; 11
     37c:	fa e0       	ldi	r31, 0x0A	; 10
     37e:	80 81       	ld	r24, Z
     380:	80 61       	ori	r24, 0x10	; 16
     382:	80 83       	st	Z, r24
     384:	48 e0       	ldi	r20, 0x08	; 8
     386:	50 e0       	ldi	r21, 0x00	; 0
     388:	80 e0       	ldi	r24, 0x00	; 0
     38a:	a8 e2       	ldi	r26, 0x28	; 40
     38c:	ba e0       	ldi	r27, 0x0A	; 10
     38e:	c8 e4       	ldi	r28, 0x48	; 72
     390:	d4 e0       	ldi	r29, 0x04	; 4
     392:	2d 91       	ld	r18, X+
     394:	3c 91       	ld	r19, X
     396:	11 97       	sbiw	r26, 0x01	; 1
     398:	28 53       	subi	r18, 0x38	; 56
     39a:	3f 4f       	sbci	r19, 0xFF	; 255
     39c:	2d 93       	st	X+, r18
     39e:	3c 93       	st	X, r19
     3a0:	11 97       	sbiw	r26, 0x01	; 1
     3a2:	90 81       	ld	r25, Z
     3a4:	94 ff       	sbrs	r25, 4
     3a6:	fd cf       	rjmp	.-6      	; 0x3a2 <Receive_data_byte+0x64>
     3a8:	90 81       	ld	r25, Z
     3aa:	90 61       	ori	r25, 0x10	; 16
     3ac:	90 83       	st	Z, r25
     3ae:	88 0f       	add	r24, r24
     3b0:	98 81       	ld	r25, Y
     3b2:	93 fd       	sbrc	r25, 3
     3b4:	81 60       	ori	r24, 0x01	; 1
     3b6:	41 50       	subi	r20, 0x01	; 1
     3b8:	51 09       	sbc	r21, r1
     3ba:	59 f7       	brne	.-42     	; 0x392 <Receive_data_byte+0x54>
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	08 95       	ret

000003c2 <Transmit_data_byte>:
     3c2:	cf 93       	push	r28
     3c4:	df 93       	push	r29
     3c6:	27 e0       	ldi	r18, 0x07	; 7
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	eb e0       	ldi	r30, 0x0B	; 11
     3cc:	fa e0       	ldi	r31, 0x0A	; 10
     3ce:	48 2f       	mov	r20, r24
     3d0:	50 e0       	ldi	r21, 0x00	; 0
     3d2:	c0 e4       	ldi	r28, 0x40	; 64
     3d4:	d4 e0       	ldi	r29, 0x04	; 4
     3d6:	a8 e2       	ldi	r26, 0x28	; 40
     3d8:	ba e0       	ldi	r27, 0x0A	; 10
     3da:	80 81       	ld	r24, Z
     3dc:	84 ff       	sbrs	r24, 4
     3de:	fd cf       	rjmp	.-6      	; 0x3da <Transmit_data_byte+0x18>
     3e0:	80 81       	ld	r24, Z
     3e2:	80 61       	ori	r24, 0x10	; 16
     3e4:	80 83       	st	Z, r24
     3e6:	ca 01       	movw	r24, r20
     3e8:	02 2e       	mov	r0, r18
     3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <Transmit_data_byte+0x2e>
     3ec:	95 95       	asr	r25
     3ee:	87 95       	ror	r24
     3f0:	0a 94       	dec	r0
     3f2:	e2 f7       	brpl	.-8      	; 0x3ec <Transmit_data_byte+0x2a>
     3f4:	80 ff       	sbrs	r24, 0
     3f6:	04 c0       	rjmp	.+8      	; 0x400 <__LOCK_REGION_LENGTH__>
     3f8:	88 81       	ld	r24, Y
     3fa:	87 7f       	andi	r24, 0xF7	; 247
     3fc:	88 83       	st	Y, r24
     3fe:	03 c0       	rjmp	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     400:	88 81       	ld	r24, Y
     402:	88 60       	ori	r24, 0x08	; 8
     404:	88 83       	st	Y, r24
     406:	8d 91       	ld	r24, X+
     408:	9c 91       	ld	r25, X
     40a:	11 97       	sbiw	r26, 0x01	; 1
     40c:	88 53       	subi	r24, 0x38	; 56
     40e:	9f 4f       	sbci	r25, 0xFF	; 255
     410:	8d 93       	st	X+, r24
     412:	9c 93       	st	X, r25
     414:	11 97       	sbiw	r26, 0x01	; 1
     416:	21 50       	subi	r18, 0x01	; 1
     418:	31 09       	sbc	r19, r1
     41a:	f8 f6       	brcc	.-66     	; 0x3da <Transmit_data_byte+0x18>
     41c:	eb e0       	ldi	r30, 0x0B	; 11
     41e:	fa e0       	ldi	r31, 0x0A	; 10
     420:	80 81       	ld	r24, Z
     422:	84 ff       	sbrs	r24, 4
     424:	fd cf       	rjmp	.-6      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     426:	eb e0       	ldi	r30, 0x0B	; 11
     428:	fa e0       	ldi	r31, 0x0A	; 10
     42a:	80 81       	ld	r24, Z
     42c:	80 61       	ori	r24, 0x10	; 16
     42e:	80 83       	st	Z, r24
     430:	e0 e4       	ldi	r30, 0x40	; 64
     432:	f4 e0       	ldi	r31, 0x04	; 4
     434:	80 81       	ld	r24, Z
     436:	87 7f       	andi	r24, 0xF7	; 247
     438:	80 83       	st	Z, r24
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	08 95       	ret

00000440 <comms_transaction>:
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
     448:	81 11       	cpse	r24, r1
     44a:	68 c0       	rjmp	.+208    	; 0x51c <comms_transaction+0xdc>
     44c:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     450:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     454:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     458:	8f 3f       	cpi	r24, 0xFF	; 255
     45a:	09 f4       	brne	.+2      	; 0x45e <comms_transaction+0x1e>
     45c:	87 c1       	rjmp	.+782    	; 0x76c <comms_transaction+0x32c>
     45e:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     462:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     466:	89 2b       	or	r24, r25
     468:	09 f0       	breq	.+2      	; 0x46c <comms_transaction+0x2c>
     46a:	58 c0       	rjmp	.+176    	; 0x51c <comms_transaction+0xdc>
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     474:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     478:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     47c:	80 93 07 3c 	sts	0x3C07, r24	; 0x803c07 <transaction_type>
     480:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
     484:	87 34       	cpi	r24, 0x47	; 71
     486:	71 f1       	breq	.+92     	; 0x4e4 <comms_transaction+0xa4>
     488:	83 36       	cpi	r24, 0x63	; 99
     48a:	21 f0       	breq	.+8      	; 0x494 <comms_transaction+0x54>
     48c:	86 34       	cpi	r24, 0x46	; 70
     48e:	09 f0       	breq	.+2      	; 0x492 <comms_transaction+0x52>
     490:	6d c1       	rjmp	.+730    	; 0x76c <comms_transaction+0x32c>
     492:	22 c0       	rjmp	.+68     	; 0x4d8 <comms_transaction+0x98>
     494:	e0 e0       	ldi	r30, 0x00	; 0
     496:	f4 e0       	ldi	r31, 0x04	; 4
     498:	84 81       	ldd	r24, Z+4	; 0x04
     49a:	81 70       	andi	r24, 0x01	; 1
     49c:	84 83       	std	Z+4, r24	; 0x04
     49e:	e0 e2       	ldi	r30, 0x20	; 32
     4a0:	f4 e0       	ldi	r31, 0x04	; 4
     4a2:	84 81       	ldd	r24, Z+4	; 0x04
     4a4:	8e 7f       	andi	r24, 0xFE	; 254
     4a6:	84 83       	std	Z+4, r24	; 0x04
     4a8:	84 81       	ldd	r24, Z+4	; 0x04
     4aa:	8e 63       	ori	r24, 0x3E	; 62
     4ac:	84 83       	std	Z+4, r24	; 0x04
     4ae:	e0 e4       	ldi	r30, 0x40	; 64
     4b0:	f4 e0       	ldi	r31, 0x04	; 4
     4b2:	84 81       	ldd	r24, Z+4	; 0x04
     4b4:	87 60       	ori	r24, 0x07	; 7
     4b6:	84 83       	std	Z+4, r24	; 0x04
     4b8:	ea e1       	ldi	r30, 0x1A	; 26
     4ba:	fc e3       	ldi	r31, 0x3C	; 60
     4bc:	89 e2       	ldi	r24, 0x29	; 41
     4be:	9c e3       	ldi	r25, 0x3C	; 60
     4c0:	11 92       	st	Z+, r1
     4c2:	8e 17       	cp	r24, r30
     4c4:	9f 07       	cpc	r25, r31
     4c6:	e1 f7       	brne	.-8      	; 0x4c0 <comms_transaction+0x80>
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     4ce:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     4d2:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     4d6:	4a c1       	rjmp	.+660    	; 0x76c <comms_transaction+0x32c>
     4d8:	88 ed       	ldi	r24, 0xD8	; 216
     4da:	84 bf       	out	0x34, r24	; 52
     4dc:	83 e0       	ldi	r24, 0x03	; 3
     4de:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     4e2:	ff cf       	rjmp	.-2      	; 0x4e2 <comms_transaction+0xa2>
     4e4:	80 91 17 3c 	lds	r24, 0x3C17	; 0x803c17 <brightness_control>
     4e8:	90 91 18 3c 	lds	r25, 0x3C18	; 0x803c18 <brightness_control+0x1>
     4ec:	86 3d       	cpi	r24, 0xD6	; 214
     4ee:	96 40       	sbci	r25, 0x06	; 6
     4f0:	39 f4       	brne	.+14     	; 0x500 <comms_transaction+0xc0>
     4f2:	8a ef       	ldi	r24, 0xFA	; 250
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	80 93 17 3c 	sts	0x3C17, r24	; 0x803c17 <brightness_control>
     4fa:	90 93 18 3c 	sts	0x3C18, r25	; 0x803c18 <brightness_control+0x1>
     4fe:	06 c0       	rjmp	.+12     	; 0x50c <comms_transaction+0xcc>
     500:	86 ed       	ldi	r24, 0xD6	; 214
     502:	96 e0       	ldi	r25, 0x06	; 6
     504:	80 93 17 3c 	sts	0x3C17, r24	; 0x803c17 <brightness_control>
     508:	90 93 18 3c 	sts	0x3C18, r25	; 0x803c18 <brightness_control+0x1>
     50c:	81 e0       	ldi	r24, 0x01	; 1
     50e:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     512:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     516:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     51a:	28 c1       	rjmp	.+592    	; 0x76c <comms_transaction+0x32c>
     51c:	e0 91 07 3c 	lds	r30, 0x3C07	; 0x803c07 <transaction_type>
     520:	8e 2f       	mov	r24, r30
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	fc 01       	movw	r30, r24
     526:	e1 54       	subi	r30, 0x41	; 65
     528:	f1 09       	sbc	r31, r1
     52a:	e2 32       	cpi	r30, 0x22	; 34
     52c:	f1 05       	cpc	r31, r1
     52e:	08 f0       	brcs	.+2      	; 0x532 <comms_transaction+0xf2>
     530:	1d c1       	rjmp	.+570    	; 0x76c <comms_transaction+0x32c>
     532:	e2 5c       	subi	r30, 0xC2	; 194
     534:	ff 4f       	sbci	r31, 0xFF	; 255
     536:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__tablejump2__>
     53a:	c0 91 04 3c 	lds	r28, 0x3C04	; 0x803c04 <byte_counter>
     53e:	d0 91 05 3c 	lds	r29, 0x3C05	; 0x803c05 <byte_counter+0x1>
     542:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     546:	c7 5e       	subi	r28, 0xE7	; 231
     548:	d3 4c       	sbci	r29, 0xC3	; 195
     54a:	88 83       	st	Y, r24
     54c:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     550:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     554:	01 96       	adiw	r24, 0x01	; 1
     556:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     55a:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     55e:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     562:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     566:	05 97       	sbiw	r24, 0x05	; 5
     568:	09 f0       	breq	.+2      	; 0x56c <comms_transaction+0x12c>
     56a:	00 c1       	rjmp	.+512    	; 0x76c <comms_transaction+0x32c>
     56c:	ee e1       	ldi	r30, 0x1E	; 30
     56e:	fc e3       	ldi	r31, 0x3C	; 60
     570:	89 e2       	ldi	r24, 0x29	; 41
     572:	9c e3       	ldi	r25, 0x3C	; 60
     574:	11 92       	st	Z+, r1
     576:	e8 17       	cp	r30, r24
     578:	f9 07       	cpc	r31, r25
     57a:	e1 f7       	brne	.-8      	; 0x574 <comms_transaction+0x134>
     57c:	81 e0       	ldi	r24, 0x01	; 1
     57e:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     582:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     586:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     58a:	f0 c0       	rjmp	.+480    	; 0x76c <comms_transaction+0x32c>
     58c:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     590:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     594:	81 30       	cpi	r24, 0x01	; 1
     596:	91 05       	cpc	r25, r1
     598:	19 f0       	breq	.+6      	; 0x5a0 <comms_transaction+0x160>
     59a:	02 97       	sbiw	r24, 0x02	; 2
     59c:	91 f0       	breq	.+36     	; 0x5c2 <comms_transaction+0x182>
     59e:	e6 c0       	rjmp	.+460    	; 0x76c <comms_transaction+0x32c>
     5a0:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     5aa:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     5ae:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     5b2:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     5b6:	01 96       	adiw	r24, 0x01	; 1
     5b8:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     5bc:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     5c0:	d5 c0       	rjmp	.+426    	; 0x76c <comms_transaction+0x32c>
     5c2:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	80 93 4c 3c 	sts	0x3C4C, r24	; 0x803c4c <digit_num>
     5cc:	90 93 4d 3c 	sts	0x3C4D, r25	; 0x803c4d <digit_num+0x1>
     5d0:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     5d4:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     5d8:	81 e0       	ldi	r24, 0x01	; 1
     5da:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     5de:	c6 c0       	rjmp	.+396    	; 0x76c <comms_transaction+0x32c>
     5e0:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     5e4:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     5e8:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     5ec:	81 30       	cpi	r24, 0x01	; 1
     5ee:	21 f4       	brne	.+8      	; 0x5f8 <comms_transaction+0x1b8>
     5f0:	10 92 3b 3c 	sts	0x3C3B, r1	; 0x803c3b <Rx_symbol>
     5f4:	80 93 03 3c 	sts	0x3C03, r24	; 0x803c03 <cr_keypress>
     5f8:	e0 91 04 3c 	lds	r30, 0x3C04	; 0x803c04 <byte_counter>
     5fc:	f0 91 05 3c 	lds	r31, 0x3C05	; 0x803c05 <byte_counter+0x1>
     600:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     604:	e7 5e       	subi	r30, 0xE7	; 231
     606:	f3 4c       	sbci	r31, 0xC3	; 195
     608:	80 83       	st	Z, r24
     60a:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     60e:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     612:	01 96       	adiw	r24, 0x01	; 1
     614:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     618:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     61c:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     620:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     624:	0a 97       	sbiw	r24, 0x0a	; 10
     626:	09 f0       	breq	.+2      	; 0x62a <comms_transaction+0x1ea>
     628:	a1 c0       	rjmp	.+322    	; 0x76c <comms_transaction+0x32c>
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     630:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     634:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     638:	99 c0       	rjmp	.+306    	; 0x76c <comms_transaction+0x32c>
     63a:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     63e:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     642:	20 91 3b 3c 	lds	r18, 0x3C3B	; 0x803c3b <Rx_symbol>
     646:	80 91 2e 3c 	lds	r24, 0x3C2E	; 0x803c2e <Long_Num_from_UNO>
     64a:	90 91 2f 3c 	lds	r25, 0x3C2F	; 0x803c2f <Long_Num_from_UNO+0x1>
     64e:	a0 91 30 3c 	lds	r26, 0x3C30	; 0x803c30 <Long_Num_from_UNO+0x2>
     652:	b0 91 31 3c 	lds	r27, 0x3C31	; 0x803c31 <Long_Num_from_UNO+0x3>
     656:	ba 2f       	mov	r27, r26
     658:	a9 2f       	mov	r26, r25
     65a:	98 2f       	mov	r25, r24
     65c:	88 27       	eor	r24, r24
     65e:	82 2b       	or	r24, r18
     660:	80 93 2e 3c 	sts	0x3C2E, r24	; 0x803c2e <Long_Num_from_UNO>
     664:	90 93 2f 3c 	sts	0x3C2F, r25	; 0x803c2f <Long_Num_from_UNO+0x1>
     668:	a0 93 30 3c 	sts	0x3C30, r26	; 0x803c30 <Long_Num_from_UNO+0x2>
     66c:	b0 93 31 3c 	sts	0x3C31, r27	; 0x803c31 <Long_Num_from_UNO+0x3>
     670:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     674:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     678:	01 96       	adiw	r24, 0x01	; 1
     67a:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     67e:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     682:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     686:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     68a:	05 97       	sbiw	r24, 0x05	; 5
     68c:	09 f0       	breq	.+2      	; 0x690 <comms_transaction+0x250>
     68e:	6e c0       	rjmp	.+220    	; 0x76c <comms_transaction+0x32c>
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     696:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     69a:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     69e:	66 c0       	rjmp	.+204    	; 0x76c <comms_transaction+0x32c>
     6a0:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     6a4:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     6a8:	01 97       	sbiw	r24, 0x01	; 1
     6aa:	51 f4       	brne	.+20     	; 0x6c0 <comms_transaction+0x280>
     6ac:	8f e0       	ldi	r24, 0x0F	; 15
     6ae:	9c e3       	ldi	r25, 0x3C	; 60
     6b0:	80 93 0d 3c 	sts	0x3C0D, r24	; 0x803c0d <float_ptr>
     6b4:	90 93 0e 3c 	sts	0x3C0E, r25	; 0x803c0e <float_ptr+0x1>
     6b8:	80 93 34 3c 	sts	0x3C34, r24	; 0x803c34 <char_ptr>
     6bc:	90 93 35 3c 	sts	0x3C35, r25	; 0x803c35 <char_ptr+0x1>
     6c0:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     6c4:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     6c8:	e0 91 34 3c 	lds	r30, 0x3C34	; 0x803c34 <char_ptr>
     6cc:	f0 91 35 3c 	lds	r31, 0x3C35	; 0x803c35 <char_ptr+0x1>
     6d0:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     6d4:	80 83       	st	Z, r24
     6d6:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     6da:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     6de:	01 96       	adiw	r24, 0x01	; 1
     6e0:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     6e4:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     6e8:	80 91 34 3c 	lds	r24, 0x3C34	; 0x803c34 <char_ptr>
     6ec:	90 91 35 3c 	lds	r25, 0x3C35	; 0x803c35 <char_ptr+0x1>
     6f0:	01 96       	adiw	r24, 0x01	; 1
     6f2:	80 93 34 3c 	sts	0x3C34, r24	; 0x803c34 <char_ptr>
     6f6:	90 93 35 3c 	sts	0x3C35, r25	; 0x803c35 <char_ptr+0x1>
     6fa:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     6fe:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     702:	05 97       	sbiw	r24, 0x05	; 5
     704:	99 f5       	brne	.+102    	; 0x76c <comms_transaction+0x32c>
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     70c:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     710:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     714:	2b c0       	rjmp	.+86     	; 0x76c <comms_transaction+0x32c>
     716:	80 91 01 3c 	lds	r24, 0x3C01	; 0x803c01 <data_byte_ptr>
     71a:	90 91 02 3c 	lds	r25, 0x3C02	; 0x803c02 <data_byte_ptr+0x1>
     71e:	9c 01       	movw	r18, r24
     720:	2f 5f       	subi	r18, 0xFF	; 255
     722:	3f 4f       	sbci	r19, 0xFF	; 255
     724:	20 93 01 3c 	sts	0x3C01, r18	; 0x803c01 <data_byte_ptr>
     728:	30 93 02 3c 	sts	0x3C02, r19	; 0x803c02 <data_byte_ptr+0x1>
     72c:	fc 01       	movw	r30, r24
     72e:	e7 5f       	subi	r30, 0xF7	; 247
     730:	f3 4c       	sbci	r31, 0xC3	; 195
     732:	80 81       	ld	r24, Z
     734:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <Transmit_data_byte>
     738:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     73c:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     740:	01 96       	adiw	r24, 0x01	; 1
     742:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     746:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     74a:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     74e:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     752:	05 97       	sbiw	r24, 0x05	; 5
     754:	59 f4       	brne	.+22     	; 0x76c <comms_transaction+0x32c>
     756:	81 e0       	ldi	r24, 0x01	; 1
     758:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     75c:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     760:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     764:	10 92 01 3c 	sts	0x3C01, r1	; 0x803c01 <data_byte_ptr>
     768:	10 92 02 3c 	sts	0x3C02, r1	; 0x803c02 <data_byte_ptr+0x1>
     76c:	df 91       	pop	r29
     76e:	cf 91       	pop	r28
     770:	08 95       	ret

00000772 <reverse>:
     772:	9b 01       	movw	r18, r22
     774:	21 50       	subi	r18, 0x01	; 1
     776:	31 09       	sbc	r19, r1
     778:	12 16       	cp	r1, r18
     77a:	13 06       	cpc	r1, r19
     77c:	84 f4       	brge	.+32     	; 0x79e <reverse+0x2c>
     77e:	fc 01       	movw	r30, r24
     780:	e6 0f       	add	r30, r22
     782:	f7 1f       	adc	r31, r23
     784:	dc 01       	movw	r26, r24
     786:	80 e0       	ldi	r24, 0x00	; 0
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	4c 91       	ld	r20, X
     78c:	52 91       	ld	r21, -Z
     78e:	5d 93       	st	X+, r21
     790:	40 83       	st	Z, r20
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	21 50       	subi	r18, 0x01	; 1
     796:	31 09       	sbc	r19, r1
     798:	82 17       	cp	r24, r18
     79a:	93 07       	cpc	r25, r19
     79c:	b4 f3       	brlt	.-20     	; 0x78a <reverse+0x18>
     79e:	08 95       	ret

000007a0 <longToStr>:
     7a0:	8f 92       	push	r8
     7a2:	9f 92       	push	r9
     7a4:	af 92       	push	r10
     7a6:	bf 92       	push	r11
     7a8:	cf 92       	push	r12
     7aa:	df 92       	push	r13
     7ac:	ef 92       	push	r14
     7ae:	ff 92       	push	r15
     7b0:	0f 93       	push	r16
     7b2:	1f 93       	push	r17
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	6a 01       	movw	r12, r20
     7ba:	79 01       	movw	r14, r18
     7bc:	61 15       	cp	r22, r1
     7be:	71 05       	cpc	r23, r1
     7c0:	81 05       	cpc	r24, r1
     7c2:	91 05       	cpc	r25, r1
     7c4:	e9 f0       	breq	.+58     	; 0x800 <longToStr+0x60>
     7c6:	8a 01       	movw	r16, r20
     7c8:	c0 e0       	ldi	r28, 0x00	; 0
     7ca:	d0 e0       	ldi	r29, 0x00	; 0
     7cc:	0f 2e       	mov	r0, r31
     7ce:	fa e0       	ldi	r31, 0x0A	; 10
     7d0:	8f 2e       	mov	r8, r31
     7d2:	91 2c       	mov	r9, r1
     7d4:	a1 2c       	mov	r10, r1
     7d6:	b1 2c       	mov	r11, r1
     7d8:	f0 2d       	mov	r31, r0
     7da:	21 96       	adiw	r28, 0x01	; 1
     7dc:	a5 01       	movw	r20, r10
     7de:	94 01       	movw	r18, r8
     7e0:	0e 94 d7 10 	call	0x21ae	; 0x21ae <__divmodsi4>
     7e4:	60 5d       	subi	r22, 0xD0	; 208
     7e6:	f8 01       	movw	r30, r16
     7e8:	61 93       	st	Z+, r22
     7ea:	8f 01       	movw	r16, r30
     7ec:	62 2f       	mov	r22, r18
     7ee:	73 2f       	mov	r23, r19
     7f0:	84 2f       	mov	r24, r20
     7f2:	95 2f       	mov	r25, r21
     7f4:	61 15       	cp	r22, r1
     7f6:	71 05       	cpc	r23, r1
     7f8:	81 05       	cpc	r24, r1
     7fa:	91 05       	cpc	r25, r1
     7fc:	71 f7       	brne	.-36     	; 0x7da <longToStr+0x3a>
     7fe:	02 c0       	rjmp	.+4      	; 0x804 <longToStr+0x64>
     800:	c0 e0       	ldi	r28, 0x00	; 0
     802:	d0 e0       	ldi	r29, 0x00	; 0
     804:	ce 15       	cp	r28, r14
     806:	df 05       	cpc	r29, r15
     808:	5c f4       	brge	.+22     	; 0x820 <longToStr+0x80>
     80a:	cc 0d       	add	r28, r12
     80c:	dd 1d       	adc	r29, r13
     80e:	96 01       	movw	r18, r12
     810:	2e 0d       	add	r18, r14
     812:	3f 1d       	adc	r19, r15
     814:	80 e3       	ldi	r24, 0x30	; 48
     816:	89 93       	st	Y+, r24
     818:	c2 17       	cp	r28, r18
     81a:	d3 07       	cpc	r29, r19
     81c:	e1 f7       	brne	.-8      	; 0x816 <longToStr+0x76>
     81e:	01 c0       	rjmp	.+2      	; 0x822 <longToStr+0x82>
     820:	7e 01       	movw	r14, r28
     822:	b7 01       	movw	r22, r14
     824:	c6 01       	movw	r24, r12
     826:	0e 94 b9 03 	call	0x772	; 0x772 <reverse>
     82a:	f6 01       	movw	r30, r12
     82c:	ee 0d       	add	r30, r14
     82e:	ff 1d       	adc	r31, r15
     830:	10 82       	st	Z, r1
     832:	b7 01       	movw	r22, r14
     834:	ff 0c       	add	r15, r15
     836:	88 0b       	sbc	r24, r24
     838:	99 0b       	sbc	r25, r25
     83a:	df 91       	pop	r29
     83c:	cf 91       	pop	r28
     83e:	1f 91       	pop	r17
     840:	0f 91       	pop	r16
     842:	ff 90       	pop	r15
     844:	ef 90       	pop	r14
     846:	df 90       	pop	r13
     848:	cf 90       	pop	r12
     84a:	bf 90       	pop	r11
     84c:	af 90       	pop	r10
     84e:	9f 90       	pop	r9
     850:	8f 90       	pop	r8
     852:	08 95       	ret

00000854 <ftoaL>:
     854:	4f 92       	push	r4
     856:	5f 92       	push	r5
     858:	6f 92       	push	r6
     85a:	7f 92       	push	r7
     85c:	8f 92       	push	r8
     85e:	9f 92       	push	r9
     860:	af 92       	push	r10
     862:	bf 92       	push	r11
     864:	cf 92       	push	r12
     866:	df 92       	push	r13
     868:	ef 92       	push	r14
     86a:	ff 92       	push	r15
     86c:	0f 93       	push	r16
     86e:	1f 93       	push	r17
     870:	cf 93       	push	r28
     872:	df 93       	push	r29
     874:	cd b7       	in	r28, 0x3d	; 61
     876:	de b7       	in	r29, 0x3e	; 62
     878:	26 97       	sbiw	r28, 0x06	; 6
     87a:	cd bf       	out	0x3d, r28	; 61
     87c:	de bf       	out	0x3e, r29	; 62
     87e:	6b 01       	movw	r12, r22
     880:	7c 01       	movw	r14, r24
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	a9 01       	movw	r20, r18
     888:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
     88c:	88 23       	and	r24, r24
     88e:	24 f0       	brlt	.+8      	; 0x898 <ftoaL+0x44>
     890:	8b e2       	ldi	r24, 0x2B	; 43
     892:	80 93 08 3c 	sts	0x3C08, r24	; 0x803c08 <sign>
     896:	07 c0       	rjmp	.+14     	; 0x8a6 <ftoaL+0x52>
     898:	8d e2       	ldi	r24, 0x2D	; 45
     89a:	80 93 08 3c 	sts	0x3C08, r24	; 0x803c08 <sign>
     89e:	f7 fa       	bst	r15, 7
     8a0:	f0 94       	com	r15
     8a2:	f7 f8       	bld	r15, 7
     8a4:	f0 94       	com	r15
     8a6:	ed e3       	ldi	r30, 0x3D	; 61
     8a8:	fc e3       	ldi	r31, 0x3C	; 60
     8aa:	8c e4       	ldi	r24, 0x4C	; 76
     8ac:	9c e3       	ldi	r25, 0x3C	; 60
     8ae:	11 92       	st	Z+, r1
     8b0:	e8 17       	cp	r30, r24
     8b2:	f9 07       	cpc	r31, r25
     8b4:	e1 f7       	brne	.-8      	; 0x8ae <ftoaL+0x5a>
     8b6:	ea e1       	ldi	r30, 0x1A	; 26
     8b8:	fc e3       	ldi	r31, 0x3C	; 60
     8ba:	89 e2       	ldi	r24, 0x29	; 41
     8bc:	9c e3       	ldi	r25, 0x3C	; 60
     8be:	11 92       	st	Z+, r1
     8c0:	8e 17       	cp	r24, r30
     8c2:	9f 07       	cpc	r25, r31
     8c4:	e1 f7       	brne	.-8      	; 0x8be <ftoaL+0x6a>
     8c6:	c7 01       	movw	r24, r14
     8c8:	b6 01       	movw	r22, r12
     8ca:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__fixsfsi>
     8ce:	6a 30       	cpi	r22, 0x0A	; 10
     8d0:	71 05       	cpc	r23, r1
     8d2:	81 05       	cpc	r24, r1
     8d4:	91 05       	cpc	r25, r1
     8d6:	2c f4       	brge	.+10     	; 0x8e2 <ftoaL+0x8e>
     8d8:	25 e0       	ldi	r18, 0x05	; 5
     8da:	30 e0       	ldi	r19, 0x00	; 0
     8dc:	2d 83       	std	Y+5, r18	; 0x05
     8de:	3e 83       	std	Y+6, r19	; 0x06
     8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <ftoaL+0x92>
     8e2:	1d 82       	std	Y+5, r1	; 0x05
     8e4:	1e 82       	std	Y+6, r1	; 0x06
     8e6:	8b 01       	movw	r16, r22
     8e8:	9c 01       	movw	r18, r24
     8ea:	0a 50       	subi	r16, 0x0A	; 10
     8ec:	11 09       	sbc	r17, r1
     8ee:	21 09       	sbc	r18, r1
     8f0:	31 09       	sbc	r19, r1
     8f2:	0a 35       	cpi	r16, 0x5A	; 90
     8f4:	11 05       	cpc	r17, r1
     8f6:	21 05       	cpc	r18, r1
     8f8:	31 05       	cpc	r19, r1
     8fa:	20 f4       	brcc	.+8      	; 0x904 <ftoaL+0xb0>
     8fc:	24 e0       	ldi	r18, 0x04	; 4
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	2d 83       	std	Y+5, r18	; 0x05
     902:	3e 83       	std	Y+6, r19	; 0x06
     904:	8b 01       	movw	r16, r22
     906:	9c 01       	movw	r18, r24
     908:	04 56       	subi	r16, 0x64	; 100
     90a:	11 09       	sbc	r17, r1
     90c:	21 09       	sbc	r18, r1
     90e:	31 09       	sbc	r19, r1
     910:	04 38       	cpi	r16, 0x84	; 132
     912:	13 40       	sbci	r17, 0x03	; 3
     914:	21 05       	cpc	r18, r1
     916:	31 05       	cpc	r19, r1
     918:	20 f4       	brcc	.+8      	; 0x922 <ftoaL+0xce>
     91a:	23 e0       	ldi	r18, 0x03	; 3
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	2d 83       	std	Y+5, r18	; 0x05
     920:	3e 83       	std	Y+6, r19	; 0x06
     922:	dc 01       	movw	r26, r24
     924:	cb 01       	movw	r24, r22
     926:	88 5e       	subi	r24, 0xE8	; 232
     928:	93 40       	sbci	r25, 0x03	; 3
     92a:	a1 09       	sbc	r26, r1
     92c:	b1 09       	sbc	r27, r1
     92e:	88 32       	cpi	r24, 0x28	; 40
     930:	93 42       	sbci	r25, 0x23	; 35
     932:	a1 05       	cpc	r26, r1
     934:	b1 05       	cpc	r27, r1
     936:	20 f4       	brcc	.+8      	; 0x940 <ftoaL+0xec>
     938:	82 e0       	ldi	r24, 0x02	; 2
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	8d 83       	std	Y+5, r24	; 0x05
     93e:	9e 83       	std	Y+6, r25	; 0x06
     940:	10 92 19 3c 	sts	0x3C19, r1	; 0x803c19 <expt>
     944:	20 e0       	ldi	r18, 0x00	; 0
     946:	30 e4       	ldi	r19, 0x40	; 64
     948:	4c e1       	ldi	r20, 0x1C	; 28
     94a:	56 e4       	ldi	r21, 0x46	; 70
     94c:	c7 01       	movw	r24, r14
     94e:	b6 01       	movw	r22, r12
     950:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__gesf2>
     954:	88 23       	and	r24, r24
     956:	44 f1       	brlt	.+80     	; 0x9a8 <ftoaL+0x154>
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	40 e2       	ldi	r20, 0x20	; 32
     95e:	51 e4       	ldi	r21, 0x41	; 65
     960:	c7 01       	movw	r24, r14
     962:	b6 01       	movw	r22, r12
     964:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__gesf2>
     968:	88 23       	and	r24, r24
     96a:	0c f4       	brge	.+2      	; 0x96e <ftoaL+0x11a>
     96c:	c5 c0       	rjmp	.+394    	; 0xaf8 <ftoaL+0x2a4>
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	99 83       	std	Y+1, r25	; 0x01
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	40 e2       	ldi	r20, 0x20	; 32
     978:	51 e4       	ldi	r21, 0x41	; 65
     97a:	c7 01       	movw	r24, r14
     97c:	b6 01       	movw	r22, r12
     97e:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <__divsf3>
     982:	6b 01       	movw	r12, r22
     984:	7c 01       	movw	r14, r24
     986:	29 81       	ldd	r18, Y+1	; 0x01
     988:	2d 83       	std	Y+5, r18	; 0x05
     98a:	32 2f       	mov	r19, r18
     98c:	3f 5f       	subi	r19, 0xFF	; 255
     98e:	39 83       	std	Y+1, r19	; 0x01
     990:	20 e0       	ldi	r18, 0x00	; 0
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	40 e2       	ldi	r20, 0x20	; 32
     996:	51 e4       	ldi	r21, 0x41	; 65
     998:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__gesf2>
     99c:	88 23       	and	r24, r24
     99e:	4c f7       	brge	.-46     	; 0x972 <ftoaL+0x11e>
     9a0:	4d 81       	ldd	r20, Y+5	; 0x05
     9a2:	40 93 19 3c 	sts	0x3C19, r20	; 0x803c19 <expt>
     9a6:	a8 c0       	rjmp	.+336    	; 0xaf8 <ftoaL+0x2a4>
     9a8:	2a e0       	ldi	r18, 0x0A	; 10
     9aa:	37 ed       	ldi	r19, 0xD7	; 215
     9ac:	43 e2       	ldi	r20, 0x23	; 35
     9ae:	5c e3       	ldi	r21, 0x3C	; 60
     9b0:	c7 01       	movw	r24, r14
     9b2:	b6 01       	movw	r22, r12
     9b4:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
     9b8:	88 23       	and	r24, r24
     9ba:	34 f5       	brge	.+76     	; 0xa08 <ftoaL+0x1b4>
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	40 e8       	ldi	r20, 0x80	; 128
     9c2:	5f e3       	ldi	r21, 0x3F	; 63
     9c4:	c7 01       	movw	r24, r14
     9c6:	b6 01       	movw	r22, r12
     9c8:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
     9cc:	88 23       	and	r24, r24
     9ce:	2c f0       	brlt	.+10     	; 0x9da <ftoaL+0x186>
     9d0:	1b c0       	rjmp	.+54     	; 0xa08 <ftoaL+0x1b4>
     9d2:	85 e0       	ldi	r24, 0x05	; 5
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	8d 83       	std	Y+5, r24	; 0x05
     9d8:	9e 83       	std	Y+6, r25	; 0x06
     9da:	10 91 19 3c 	lds	r17, 0x3C19	; 0x803c19 <expt>
     9de:	20 e0       	ldi	r18, 0x00	; 0
     9e0:	30 e0       	ldi	r19, 0x00	; 0
     9e2:	40 e2       	ldi	r20, 0x20	; 32
     9e4:	51 e4       	ldi	r21, 0x41	; 65
     9e6:	c7 01       	movw	r24, r14
     9e8:	b6 01       	movw	r22, r12
     9ea:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <__mulsf3>
     9ee:	6b 01       	movw	r12, r22
     9f0:	7c 01       	movw	r14, r24
     9f2:	11 50       	subi	r17, 0x01	; 1
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	40 e8       	ldi	r20, 0x80	; 128
     9fa:	5f e3       	ldi	r21, 0x3F	; 63
     9fc:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
     a00:	88 23       	and	r24, r24
     a02:	6c f3       	brlt	.-38     	; 0x9de <ftoaL+0x18a>
     a04:	10 93 19 3c 	sts	0x3C19, r17	; 0x803c19 <expt>
     a08:	0d 81       	ldd	r16, Y+5	; 0x05
     a0a:	1e 81       	ldd	r17, Y+6	; 0x06
     a0c:	11 27       	eor	r17, r17
     a0e:	10 16       	cp	r1, r16
     a10:	11 06       	cpc	r1, r17
     a12:	3c f0       	brlt	.+14     	; 0xa22 <ftoaL+0x1ce>
     a14:	19 c0       	rjmp	.+50     	; 0xa48 <ftoaL+0x1f4>
     a16:	05 e0       	ldi	r16, 0x05	; 5
     a18:	10 e0       	ldi	r17, 0x00	; 0
     a1a:	25 e0       	ldi	r18, 0x05	; 5
     a1c:	30 e0       	ldi	r19, 0x00	; 0
     a1e:	2d 83       	std	Y+5, r18	; 0x05
     a20:	3e 83       	std	Y+6, r19	; 0x06
     a22:	a1 2c       	mov	r10, r1
     a24:	b1 2c       	mov	r11, r1
     a26:	60 e0       	ldi	r22, 0x00	; 0
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	80 e8       	ldi	r24, 0x80	; 128
     a2c:	9f e3       	ldi	r25, 0x3F	; 63
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	30 e0       	ldi	r19, 0x00	; 0
     a32:	40 e2       	ldi	r20, 0x20	; 32
     a34:	51 e4       	ldi	r21, 0x41	; 65
     a36:	0e 94 72 0d 	call	0x1ae4	; 0x1ae4 <__divsf3>
     a3a:	3f ef       	ldi	r19, 0xFF	; 255
     a3c:	a3 1a       	sub	r10, r19
     a3e:	b3 0a       	sbc	r11, r19
     a40:	a0 16       	cp	r10, r16
     a42:	b1 06       	cpc	r11, r17
     a44:	a4 f3       	brlt	.-24     	; 0xa2e <ftoaL+0x1da>
     a46:	04 c0       	rjmp	.+8      	; 0xa50 <ftoaL+0x1fc>
     a48:	60 e0       	ldi	r22, 0x00	; 0
     a4a:	70 e0       	ldi	r23, 0x00	; 0
     a4c:	80 e8       	ldi	r24, 0x80	; 128
     a4e:	9f e3       	ldi	r25, 0x3F	; 63
     a50:	2d ec       	ldi	r18, 0xCD	; 205
     a52:	3c ec       	ldi	r19, 0xCC	; 204
     a54:	4c e0       	ldi	r20, 0x0C	; 12
     a56:	5f e3       	ldi	r21, 0x3F	; 63
     a58:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <__mulsf3>
     a5c:	a7 01       	movw	r20, r14
     a5e:	96 01       	movw	r18, r12
     a60:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__addsf3>
     a64:	4b 01       	movw	r8, r22
     a66:	5c 01       	movw	r10, r24
     a68:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__fixsfsi>
     a6c:	2b 01       	movw	r4, r22
     a6e:	3c 01       	movw	r6, r24
     a70:	20 e0       	ldi	r18, 0x00	; 0
     a72:	30 e0       	ldi	r19, 0x00	; 0
     a74:	4d e3       	ldi	r20, 0x3D	; 61
     a76:	5c e3       	ldi	r21, 0x3C	; 60
     a78:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <longToStr>
     a7c:	6b 01       	movw	r12, r22
     a7e:	7c 01       	movw	r14, r24
     a80:	8d 81       	ldd	r24, Y+5	; 0x05
     a82:	9e 81       	ldd	r25, Y+6	; 0x06
     a84:	89 2b       	or	r24, r25
     a86:	09 f4       	brne	.+2      	; 0xa8a <ftoaL+0x236>
     a88:	54 c0       	rjmp	.+168    	; 0xb32 <ftoaL+0x2de>
     a8a:	f6 01       	movw	r30, r12
     a8c:	e3 5c       	subi	r30, 0xC3	; 195
     a8e:	f3 4c       	sbci	r31, 0xC3	; 195
     a90:	8e e2       	ldi	r24, 0x2E	; 46
     a92:	80 83       	st	Z, r24
     a94:	2d 81       	ldd	r18, Y+5	; 0x05
     a96:	3e 81       	ldd	r19, Y+6	; 0x06
     a98:	b9 01       	movw	r22, r18
     a9a:	33 0f       	add	r19, r19
     a9c:	88 0b       	sbc	r24, r24
     a9e:	99 0b       	sbc	r25, r25
     aa0:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <__floatsisf>
     aa4:	9b 01       	movw	r18, r22
     aa6:	ac 01       	movw	r20, r24
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	80 e2       	ldi	r24, 0x20	; 32
     aae:	91 e4       	ldi	r25, 0x41	; 65
     ab0:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <pow>
     ab4:	69 83       	std	Y+1, r22	; 0x01
     ab6:	7a 83       	std	Y+2, r23	; 0x02
     ab8:	8b 83       	std	Y+3, r24	; 0x03
     aba:	9c 83       	std	Y+4, r25	; 0x04
     abc:	c3 01       	movw	r24, r6
     abe:	b2 01       	movw	r22, r4
     ac0:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <__floatsisf>
     ac4:	9b 01       	movw	r18, r22
     ac6:	ac 01       	movw	r20, r24
     ac8:	c5 01       	movw	r24, r10
     aca:	b4 01       	movw	r22, r8
     acc:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <__subsf3>
     ad0:	96 01       	movw	r18, r12
     ad2:	2f 5f       	subi	r18, 0xFF	; 255
     ad4:	3f 4f       	sbci	r19, 0xFF	; 255
     ad6:	89 01       	movw	r16, r18
     ad8:	03 5c       	subi	r16, 0xC3	; 195
     ada:	13 4c       	sbci	r17, 0xC3	; 195
     adc:	29 81       	ldd	r18, Y+1	; 0x01
     ade:	3a 81       	ldd	r19, Y+2	; 0x02
     ae0:	4b 81       	ldd	r20, Y+3	; 0x03
     ae2:	5c 81       	ldd	r21, Y+4	; 0x04
     ae4:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <__mulsf3>
     ae8:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <__fixsfsi>
     aec:	2d 81       	ldd	r18, Y+5	; 0x05
     aee:	3e 81       	ldd	r19, Y+6	; 0x06
     af0:	a8 01       	movw	r20, r16
     af2:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <longToStr>
     af6:	1d c0       	rjmp	.+58     	; 0xb32 <ftoaL+0x2de>
     af8:	2a e0       	ldi	r18, 0x0A	; 10
     afa:	37 ed       	ldi	r19, 0xD7	; 215
     afc:	43 e2       	ldi	r20, 0x23	; 35
     afe:	5c e3       	ldi	r21, 0x3C	; 60
     b00:	c7 01       	movw	r24, r14
     b02:	b6 01       	movw	r22, r12
     b04:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
     b08:	88 23       	and	r24, r24
     b0a:	0c f0       	brlt	.+2      	; 0xb0e <ftoaL+0x2ba>
     b0c:	84 cf       	rjmp	.-248    	; 0xa16 <ftoaL+0x1c2>
     b0e:	20 e0       	ldi	r18, 0x00	; 0
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	40 e8       	ldi	r20, 0x80	; 128
     b14:	5f e3       	ldi	r21, 0x3F	; 63
     b16:	c7 01       	movw	r24, r14
     b18:	b6 01       	movw	r22, r12
     b1a:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
     b1e:	88 23       	and	r24, r24
     b20:	0c f4       	brge	.+2      	; 0xb24 <ftoaL+0x2d0>
     b22:	57 cf       	rjmp	.-338    	; 0x9d2 <ftoaL+0x17e>
     b24:	05 e0       	ldi	r16, 0x05	; 5
     b26:	10 e0       	ldi	r17, 0x00	; 0
     b28:	85 e0       	ldi	r24, 0x05	; 5
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	8d 83       	std	Y+5, r24	; 0x05
     b2e:	9e 83       	std	Y+6, r25	; 0x06
     b30:	78 cf       	rjmp	.-272    	; 0xa22 <ftoaL+0x1ce>
     b32:	26 96       	adiw	r28, 0x06	; 6
     b34:	cd bf       	out	0x3d, r28	; 61
     b36:	de bf       	out	0x3e, r29	; 62
     b38:	df 91       	pop	r29
     b3a:	cf 91       	pop	r28
     b3c:	1f 91       	pop	r17
     b3e:	0f 91       	pop	r16
     b40:	ff 90       	pop	r15
     b42:	ef 90       	pop	r14
     b44:	df 90       	pop	r13
     b46:	cf 90       	pop	r12
     b48:	bf 90       	pop	r11
     b4a:	af 90       	pop	r10
     b4c:	9f 90       	pop	r9
     b4e:	8f 90       	pop	r8
     b50:	7f 90       	pop	r7
     b52:	6f 90       	pop	r6
     b54:	5f 90       	pop	r5
     b56:	4f 90       	pop	r4
     b58:	08 95       	ret

00000b5a <Add_exponent>:
void Add_exponent (void)
{
	char E_space;
																					//If there is an exponent overwrite the RH display digits
	E_space = 2;																	//with the Exponential notation
	if (expt >= 10) E_space = 3;													//and leave the number at the left hand end of the display
     b5a:	80 91 19 3c 	lds	r24, 0x3C19	; 0x803c19 <expt>
     b5e:	8a 30       	cpi	r24, 0x0A	; 10
     b60:	14 f0       	brlt	.+4      	; 0xb66 <Add_exponent+0xc>
     b62:	93 e0       	ldi	r25, 0x03	; 3
     b64:	01 c0       	rjmp	.+2      	; 0xb68 <Add_exponent+0xe>
/***************************************************************************************************************************************/
void Add_exponent (void)
{
	char E_space;
																					//If there is an exponent overwrite the RH display digits
	E_space = 2;																	//with the Exponential notation
     b66:	92 e0       	ldi	r25, 0x02	; 2
	if (expt >= 10) E_space = 3;													//and leave the number at the left hand end of the display
	if (expt <= -10)E_space = 4;
     b68:	87 3f       	cpi	r24, 0xF7	; 247
     b6a:	0c f4       	brge	.+2      	; 0xb6e <Add_exponent+0x14>
     b6c:	5d c0       	rjmp	.+186    	; 0xc28 <Add_exponent+0xce>
	if ((expt < 0) && (expt > (-10)))E_space = 3;
     b6e:	38 2f       	mov	r19, r24
     b70:	29 e0       	ldi	r18, 0x09	; 9
     b72:	28 0f       	add	r18, r24
     b74:	29 30       	cpi	r18, 0x09	; 9
     b76:	60 f0       	brcs	.+24     	; 0xb90 <Add_exponent+0x36>
	
	
	switch (E_space){
     b78:	93 30       	cpi	r25, 0x03	; 3
     b7a:	51 f0       	breq	.+20     	; 0xb90 <Add_exponent+0x36>
     b7c:	92 30       	cpi	r25, 0x02	; 2
     b7e:	09 f0       	breq	.+2      	; 0xb82 <Add_exponent+0x28>
     b80:	5a c0       	rjmp	.+180    	; 0xc36 <Add_exponent+0xdc>
		case 2:	display_buffer[0] = expt + '0';display_buffer[1] = 'E';break;		//E1 to E9
     b82:	ea e1       	ldi	r30, 0x1A	; 26
     b84:	fc e3       	ldi	r31, 0x3C	; 60
     b86:	80 5d       	subi	r24, 0xD0	; 208
     b88:	80 83       	st	Z, r24
     b8a:	85 e4       	ldi	r24, 0x45	; 69
     b8c:	81 83       	std	Z+1, r24	; 0x01
     b8e:	08 95       	ret
		case 3:	if (expt > 0)														//E10, E11, E12......etc
     b90:	18 16       	cp	r1, r24
     b92:	34 f5       	brge	.+76     	; 0xbe0 <Add_exponent+0x86>
		{display_buffer[0] = (expt%10) + '0';
     b94:	ea e1       	ldi	r30, 0x1A	; 26
     b96:	fc e3       	ldi	r31, 0x3C	; 60
     b98:	27 e6       	ldi	r18, 0x67	; 103
     b9a:	82 02       	muls	r24, r18
     b9c:	91 2d       	mov	r25, r1
     b9e:	11 24       	eor	r1, r1
     ba0:	95 95       	asr	r25
     ba2:	95 95       	asr	r25
     ba4:	87 fd       	sbrc	r24, 7
     ba6:	93 95       	inc	r25
     ba8:	59 2f       	mov	r21, r25
     baa:	55 0f       	add	r21, r21
     bac:	45 2f       	mov	r20, r21
     bae:	44 0f       	add	r20, r20
     bb0:	44 0f       	add	r20, r20
     bb2:	45 0f       	add	r20, r21
     bb4:	58 2f       	mov	r21, r24
     bb6:	54 1b       	sub	r21, r20
     bb8:	45 2f       	mov	r20, r21
     bba:	40 5d       	subi	r20, 0xD0	; 208
     bbc:	40 83       	st	Z, r20
		display_buffer[1] = ((expt/10)%10) + '0';display_buffer[2] = 'E';}
     bbe:	92 02       	muls	r25, r18
     bc0:	21 2d       	mov	r18, r1
     bc2:	11 24       	eor	r1, r1
     bc4:	25 95       	asr	r18
     bc6:	25 95       	asr	r18
     bc8:	97 fd       	sbrc	r25, 7
     bca:	23 95       	inc	r18
     bcc:	22 0f       	add	r18, r18
     bce:	42 2f       	mov	r20, r18
     bd0:	44 0f       	add	r20, r20
     bd2:	44 0f       	add	r20, r20
     bd4:	24 0f       	add	r18, r20
     bd6:	92 1b       	sub	r25, r18
     bd8:	90 5d       	subi	r25, 0xD0	; 208
     bda:	91 83       	std	Z+1, r25	; 0x01
     bdc:	95 e4       	ldi	r25, 0x45	; 69
     bde:	92 83       	std	Z+2, r25	; 0x02
		if (expt < 0)																//E-1 to E-9
     be0:	88 23       	and	r24, r24
     be2:	4c f5       	brge	.+82     	; 0xc36 <Add_exponent+0xdc>
		{display_buffer[0] = expt*(-1) + '0';
     be4:	ea e1       	ldi	r30, 0x1A	; 26
     be6:	fc e3       	ldi	r31, 0x3C	; 60
     be8:	80 e3       	ldi	r24, 0x30	; 48
     bea:	83 1b       	sub	r24, r19
     bec:	80 83       	st	Z, r24
		display_buffer[1] = '-';display_buffer[2] = 'E';}
     bee:	8d e2       	ldi	r24, 0x2D	; 45
     bf0:	81 83       	std	Z+1, r24	; 0x01
     bf2:	85 e4       	ldi	r24, 0x45	; 69
     bf4:	82 83       	std	Z+2, r24	; 0x02
     bf6:	08 95       	ret
		break;
		case 4:	display_buffer[0] = ((expt*(-1))%10) + '0';							//E-10, E-11, E-12....etc
     bf8:	99 27       	eor	r25, r25
     bfa:	81 95       	neg	r24
     bfc:	0c f4       	brge	.+2      	; 0xc00 <Add_exponent+0xa6>
     bfe:	90 95       	com	r25
     c00:	ea e1       	ldi	r30, 0x1A	; 26
     c02:	fc e3       	ldi	r31, 0x3C	; 60
     c04:	2a e0       	ldi	r18, 0x0A	; 10
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	b9 01       	movw	r22, r18
     c0a:	0e 94 c3 10 	call	0x2186	; 0x2186 <__divmodhi4>
     c0e:	80 5d       	subi	r24, 0xD0	; 208
     c10:	80 83       	st	Z, r24
		display_buffer[1] = (((expt*(-1))/10)%10) + '0';
     c12:	cb 01       	movw	r24, r22
     c14:	b9 01       	movw	r22, r18
     c16:	0e 94 c3 10 	call	0x2186	; 0x2186 <__divmodhi4>
     c1a:	80 5d       	subi	r24, 0xD0	; 208
     c1c:	81 83       	std	Z+1, r24	; 0x01
		display_buffer[2] = '-';display_buffer[3] = 'E';
     c1e:	8d e2       	ldi	r24, 0x2D	; 45
     c20:	82 83       	std	Z+2, r24	; 0x02
     c22:	85 e4       	ldi	r24, 0x45	; 69
     c24:	83 83       	std	Z+3, r24	; 0x03
     c26:	08 95       	ret
	char E_space;
																					//If there is an exponent overwrite the RH display digits
	E_space = 2;																	//with the Exponential notation
	if (expt >= 10) E_space = 3;													//and leave the number at the left hand end of the display
	if (expt <= -10)E_space = 4;
	if ((expt < 0) && (expt > (-10)))E_space = 3;
     c28:	38 2f       	mov	r19, r24
     c2a:	99 e0       	ldi	r25, 0x09	; 9
     c2c:	98 0f       	add	r25, r24
     c2e:	99 30       	cpi	r25, 0x09	; 9
     c30:	08 f4       	brcc	.+2      	; 0xc34 <Add_exponent+0xda>
     c32:	ae cf       	rjmp	.-164    	; 0xb90 <Add_exponent+0x36>
     c34:	e1 cf       	rjmp	.-62     	; 0xbf8 <Add_exponent+0x9e>
     c36:	08 95       	ret

00000c38 <Start_TCA0>:



/*****************************************************************************************************************************/
	void Start_TCA0(void){										//Clock that controls display and FW comms port
	display_ptr = 0;
     c38:	10 92 29 3c 	sts	0x3C29, r1	; 0x803c29 <display_ptr>
     c3c:	10 92 2a 3c 	sts	0x3C2A, r1	; 0x803c2a <display_ptr+0x1>
	TCA0_SINGLE_CNT = 0;										//Initialise counter
     c40:	10 92 20 0a 	sts	0x0A20, r1	; 0x800a20 <__TEXT_REGION_LENGTH__+0x700a20>
     c44:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <__TEXT_REGION_LENGTH__+0x700a21>
	TCA0_SINGLE_CMP0 = display_tick;							//2mS period for 2MHz clock
     c48:	80 ed       	ldi	r24, 0xD0	; 208
     c4a:	97 e0       	ldi	r25, 0x07	; 7
     c4c:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x700a28>
     c50:	90 93 29 0a 	sts	0x0A29, r25	; 0x800a29 <__TEXT_REGION_LENGTH__+0x700a29>
	TCA0_SINGLE_CTRLA = TCA_SINGLE_CLKSEL_DIV1_gc | 1;			//Start clock with 2MHz clock
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x700a00>
	TCA0_SINGLE_INTCTRL |= TCA_SINGLE_CMP0EN_bm;}				//Interrupt flag on compare match
     c5a:	ea e0       	ldi	r30, 0x0A	; 10
     c5c:	fa e0       	ldi	r31, 0x0A	; 10
     c5e:	80 81       	ld	r24, Z
     c60:	80 61       	ori	r24, 0x10	; 16
     c62:	80 83       	st	Z, r24
     c64:	08 95       	ret

00000c66 <main>:
	char cal_factor;											//Used to adjust internal oscillator frequency
	char null_bit_counter;										//Counts number of blank display digits
	int array_ptr;												//Points to display digits
	
	
	CPU_CCP = 0xD8;												//Config change protection key
     c66:	98 ed       	ldi	r25, 0xD8	; 216
     c68:	94 bf       	out	0x34, r25	; 52
	CLKCTRL_MCLKCTRLB = CLKCTRL_PDIV_16X_gc | 1;				//Generates 1MHz Peripheral clock
     c6a:	87 e0       	ldi	r24, 0x07	; 7
     c6c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>
	
	cal_factor = CLKCTRL_OSC20MCALIBA - 1;						//Adjust calibration factor if necessary
     c70:	e1 e7       	ldi	r30, 0x71	; 113
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	80 81       	ld	r24, Z
     c76:	81 50       	subi	r24, 0x01	; 1
	CPU_CCP = 0xD8;
     c78:	94 bf       	out	0x34, r25	; 52
	CLKCTRL_OSC20MCALIBA = cal_factor;
     c7a:	80 83       	st	Z, r24
	
	brightness_control = 1450;//1450;//250;100			1500ok	1550 NOk					//Selects low brightness at reset
     c7c:	8a ea       	ldi	r24, 0xAA	; 170
     c7e:	95 e0       	ldi	r25, 0x05	; 5
     c80:	80 93 17 3c 	sts	0x3C17, r24	; 0x803c17 <brightness_control>
     c84:	90 93 18 3c 	sts	0x3C18, r25	; 0x803c18 <brightness_control+0x1>
     c88:	ca e1       	ldi	r28, 0x1A	; 26
     c8a:	dc e3       	ldi	r29, 0x3C	; 60
     c8c:	09 e2       	ldi	r16, 0x29	; 41
     c8e:	1c e3       	ldi	r17, 0x3C	; 60
     c90:	fe 01       	movw	r30, r28
	
	clear_display_buffer;										//Generate test display
     c92:	11 92       	st	Z+, r1
     c94:	0e 17       	cp	r16, r30
     c96:	1f 07       	cpc	r17, r31
     c98:	e1 f7       	brne	.-8      	; 0xc92 <main+0x2c>
	mode = 'A';
     c9a:	81 e4       	ldi	r24, 0x41	; 65
     c9c:	80 93 36 3c 	sts	0x3C36, r24	; 0x803c36 <mode>
     ca0:	ea e1       	ldi	r30, 0x1A	; 26
     ca2:	fc e3       	ldi	r31, 0x3C	; 60
     ca4:	87 e0       	ldi	r24, 0x07	; 7
     ca6:	90 e0       	ldi	r25, 0x00	; 0
	for(int m = 0; m <= 7; m++)									//Display 75311357 on reset:  Confirms that display is working correctly
	display_buffer[m] = mag(7 - (2*m)) + '0';
     ca8:	9c 01       	movw	r18, r24
     caa:	99 23       	and	r25, r25
     cac:	24 f4       	brge	.+8      	; 0xcb6 <main+0x50>
     cae:	22 27       	eor	r18, r18
     cb0:	33 27       	eor	r19, r19
     cb2:	28 1b       	sub	r18, r24
     cb4:	39 0b       	sbc	r19, r25
     cb6:	20 5d       	subi	r18, 0xD0	; 208
     cb8:	21 93       	st	Z+, r18
     cba:	02 97       	sbiw	r24, 0x02	; 2
	
	brightness_control = 1450;//1450;//250;100			1500ok	1550 NOk					//Selects low brightness at reset
	
	clear_display_buffer;										//Generate test display
	mode = 'A';
	for(int m = 0; m <= 7; m++)									//Display 75311357 on reset:  Confirms that display is working correctly
     cbc:	87 3f       	cpi	r24, 0xF7	; 247
     cbe:	2f ef       	ldi	r18, 0xFF	; 255
     cc0:	92 07       	cpc	r25, r18
     cc2:	91 f7       	brne	.-28     	; 0xca8 <main+0x42>
	display_buffer[m] = mag(7 - (2*m)) + '0';
	Set_display_ports;
     cc4:	e0 e0       	ldi	r30, 0x00	; 0
     cc6:	f4 e0       	ldi	r31, 0x04	; 4
     cc8:	80 81       	ld	r24, Z
     cca:	8e 6f       	ori	r24, 0xFE	; 254
     ccc:	80 83       	st	Z, r24
     cce:	e0 e2       	ldi	r30, 0x20	; 32
     cd0:	f4 e0       	ldi	r31, 0x04	; 4
     cd2:	80 81       	ld	r24, Z
     cd4:	8f 63       	ori	r24, 0x3F	; 63
     cd6:	80 83       	st	Z, r24
     cd8:	e0 e4       	ldi	r30, 0x40	; 64
     cda:	f4 e0       	ldi	r31, 0x04	; 4
     cdc:	80 81       	ld	r24, Z
     cde:	87 60       	ori	r24, 0x07	; 7
     ce0:	80 83       	st	Z, r24
	   
   PORTC.DIR &= ~PIN3_bm;										//Configure comm port as input
     ce2:	80 81       	ld	r24, Z
     ce4:	87 7f       	andi	r24, 0xF7	; 247
     ce6:	80 83       	st	Z, r24
   PORTC.OUT &= ~(PIN3_bm);										//I/O pin low when configured as output
     ce8:	84 81       	ldd	r24, Z+4	; 0x04
     cea:	87 7f       	andi	r24, 0xF7	; 247
     cec:	84 83       	std	Z+4, r24	; 0x04
   PORTC.PIN3CTRL |= PORT_PULLUPEN_bm;							//Pull-up enabled
     cee:	83 89       	ldd	r24, Z+19	; 0x13
     cf0:	88 60       	ori	r24, 0x08	; 8
     cf2:	83 8b       	std	Z+19, r24	; 0x13
   	  
   Start_TCA0();												//Display (2mS) tick rate
     cf4:	0e 94 1c 06 	call	0xc38	; 0xc38 <Start_TCA0>
   sei();
     cf8:	78 94       	sei
     cfa:	0f 2e       	mov	r0, r31
     cfc:	fc e4       	ldi	r31, 0x4C	; 76
     cfe:	ef 2e       	mov	r14, r31
     d00:	fc e3       	ldi	r31, 0x3C	; 60
     d02:	ff 2e       	mov	r15, r31
     d04:	f0 2d       	mov	r31, r0
     d06:	0f 2e       	mov	r0, r31
     d08:	f2 e2       	ldi	r31, 0x22	; 34
     d0a:	af 2e       	mov	r10, r31
     d0c:	fc e3       	ldi	r31, 0x3C	; 60
     d0e:	bf 2e       	mov	r11, r31
     d10:	f0 2d       	mov	r31, r0
     d12:	0f 2e       	mov	r0, r31
     d14:	f5 e4       	ldi	r31, 0x45	; 69
     d16:	8f 2e       	mov	r8, r31
     d18:	fc e3       	ldi	r31, 0x3C	; 60
     d1a:	9f 2e       	mov	r9, r31
     d1c:	f0 2d       	mov	r31, r0
	ftoaL(Float_Num_from_UNO);
	Combine_dp;		 
	Insert_sign;
	Remove_lagging_zeros;
	temp2display_buffer;										//Reverse string prior to display
	if (expt){Left_justify_number;
     d1e:	0f 2e       	mov	r0, r31
     d20:	fa e1       	ldi	r31, 0x1A	; 26
     d22:	cf 2e       	mov	r12, r31
     d24:	fc e3       	ldi	r31, 0x3C	; 60
     d26:	df 2e       	mov	r13, r31
     d28:	f0 2d       	mov	r31, r0
	break;
			
	case 'D': 													//Convert float from UNO to string
	Float_Num_from_UNO  = *float_ptr;
	ftoaL(Float_Num_from_UNO);
	Combine_dp;		 
     d2a:	0f 2e       	mov	r0, r31
     d2c:	fc e3       	ldi	r31, 0x3C	; 60
     d2e:	6f 2e       	mov	r6, r31
     d30:	fc e3       	ldi	r31, 0x3C	; 60
     d32:	7f 2e       	mov	r7, r31
     d34:	f0 2d       	mov	r31, r0
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
	
	case 'a': break;											//One_wire_Tx_2_integers()
	case 'b': I2C_Tx_any_segment; break;			
     d36:	44 24       	eor	r4, r4
     d38:	43 94       	inc	r4
     d3a:	51 2c       	mov	r5, r1
     d3c:	68 94       	set
     d3e:	22 24       	eor	r2, r2
     d40:	25 f8       	bld	r2, 5
     d42:	33 24       	eor	r3, r3
     d44:	32 f8       	bld	r3, 2
   	  
   Start_TCA0();												//Display (2mS) tick rate
   sei();
	
	while(1){
		while(!(transaction_complete));							//Wait here for requests from the UNO
     d46:	80 91 06 3c 	lds	r24, 0x3C06	; 0x803c06 <transaction_complete>
     d4a:	88 23       	and	r24, r24
     d4c:	e1 f3       	breq	.-8      	; 0xd46 <main+0xe0>
		transaction_complete = 0;
     d4e:	10 92 06 3c 	sts	0x3C06, r1	; 0x803c06 <transaction_complete>
		busy_flag = 1;											//Do not contact UNO until data processing is complete
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	80 93 00 3c 	sts	0x3C00, r24	; 0x803c00 <_edata>
		
	switch (transaction_type){									//Transaction complete: Process the data
     d58:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
     d5c:	83 34       	cpi	r24, 0x43	; 67
     d5e:	09 f4       	brne	.+2      	; 0xd62 <main+0xfc>
     d60:	8c c1       	rjmp	.+792    	; 0x107a <main+0x414>
     d62:	38 f4       	brcc	.+14     	; 0xd72 <main+0x10c>
     d64:	81 34       	cpi	r24, 0x41	; 65
     d66:	09 f4       	brne	.+2      	; 0xd6a <main+0x104>
     d68:	a0 c0       	rjmp	.+320    	; 0xeaa <main+0x244>
     d6a:	82 34       	cpi	r24, 0x42	; 66
     d6c:	09 f4       	brne	.+2      	; 0xd70 <main+0x10a>
     d6e:	df c0       	rjmp	.+446    	; 0xf2e <main+0x2c8>
     d70:	65 c2       	rjmp	.+1226   	; 0x123c <main+0x5d6>
     d72:	85 34       	cpi	r24, 0x45	; 69
     d74:	09 f4       	brne	.+2      	; 0xd78 <main+0x112>
     d76:	44 c2       	rjmp	.+1160   	; 0x1200 <main+0x59a>
     d78:	08 f4       	brcc	.+2      	; 0xd7c <main+0x116>
     d7a:	ba c1       	rjmp	.+884    	; 0x10f0 <main+0x48a>
     d7c:	82 36       	cpi	r24, 0x62	; 98
     d7e:	09 f0       	breq	.+2      	; 0xd82 <main+0x11c>
     d80:	5d c2       	rjmp	.+1210   	; 0x123c <main+0x5d6>
	
	case 'a': break;											//One_wire_Tx_2_integers()
	case 'b': I2C_Tx_any_segment; break;			
     d82:	e0 91 32 3c 	lds	r30, 0x3C32	; 0x803c32 <letter>
     d86:	f0 91 33 3c 	lds	r31, 0x3C33	; 0x803c33 <letter+0x1>
     d8a:	e1 54       	subi	r30, 0x41	; 65
     d8c:	f1 09       	sbc	r31, r1
     d8e:	e7 32       	cpi	r30, 0x27	; 39
     d90:	f1 05       	cpc	r31, r1
     d92:	88 f5       	brcc	.+98     	; 0xdf6 <main+0x190>
     d94:	e0 5a       	subi	r30, 0xA0	; 160
     d96:	ff 4f       	sbci	r31, 0xFF	; 255
     d98:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__tablejump2__>
     d9c:	10 92 32 3c 	sts	0x3C32, r1	; 0x803c32 <letter>
     da0:	10 92 33 3c 	sts	0x3C33, r1	; 0x803c33 <letter+0x1>
     da4:	58 c2       	rjmp	.+1200   	; 0x1256 <main+0x5f0>
     da6:	83 e0       	ldi	r24, 0x03	; 3
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     dae:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     db2:	51 c2       	rjmp	.+1186   	; 0x1256 <main+0x5f0>
     db4:	84 e0       	ldi	r24, 0x04	; 4
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     dbc:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     dc0:	4a c2       	rjmp	.+1172   	; 0x1256 <main+0x5f0>
     dc2:	82 e0       	ldi	r24, 0x02	; 2
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     dca:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     dce:	43 c2       	rjmp	.+1158   	; 0x1256 <main+0x5f0>
     dd0:	85 e0       	ldi	r24, 0x05	; 5
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     dd8:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     ddc:	3c c2       	rjmp	.+1144   	; 0x1256 <main+0x5f0>
     dde:	a6 e0       	ldi	r26, 0x06	; 6
     de0:	b0 e0       	ldi	r27, 0x00	; 0
     de2:	a0 93 32 3c 	sts	0x3C32, r26	; 0x803c32 <letter>
     de6:	b0 93 33 3c 	sts	0x3C33, r27	; 0x803c33 <letter+0x1>
     dea:	35 c2       	rjmp	.+1130   	; 0x1256 <main+0x5f0>
     dec:	40 92 32 3c 	sts	0x3C32, r4	; 0x803c32 <letter>
     df0:	50 92 33 3c 	sts	0x3C33, r5	; 0x803c33 <letter+0x1>
     df4:	30 c2       	rjmp	.+1120   	; 0x1256 <main+0x5f0>
     df6:	e8 e0       	ldi	r30, 0x08	; 8
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	e0 93 32 3c 	sts	0x3C32, r30	; 0x803c32 <letter>
     dfe:	f0 93 33 3c 	sts	0x3C33, r31	; 0x803c33 <letter+0x1>
     e02:	1c c2       	rjmp	.+1080   	; 0x123c <main+0x5d6>
     e04:	20 91 32 3c 	lds	r18, 0x3C32	; 0x803c32 <letter>
     e08:	30 91 33 3c 	lds	r19, 0x3C33	; 0x803c33 <letter+0x1>
     e0c:	40 91 07 3c 	lds	r20, 0x3C07	; 0x803c07 <transaction_type>
     e10:	43 36       	cpi	r20, 0x63	; 99
     e12:	e9 f4       	brne	.+58     	; 0xe4e <main+0x1e8>
     e14:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <__TEXT_REGION_LENGTH__+0x700404>
     e18:	41 70       	andi	r20, 0x01	; 1
     e1a:	40 93 04 04 	sts	0x0404, r20	; 0x800404 <__TEXT_REGION_LENGTH__+0x700404>
     e1e:	d1 01       	movw	r26, r2
     e20:	14 96       	adiw	r26, 0x04	; 4
     e22:	4c 91       	ld	r20, X
     e24:	14 97       	sbiw	r26, 0x04	; 4
     e26:	4e 7f       	andi	r20, 0xFE	; 254
     e28:	14 96       	adiw	r26, 0x04	; 4
     e2a:	4c 93       	st	X, r20
     e2c:	14 97       	sbiw	r26, 0x04	; 4
     e2e:	14 96       	adiw	r26, 0x04	; 4
     e30:	4c 91       	ld	r20, X
     e32:	14 97       	sbiw	r26, 0x04	; 4
     e34:	4e 63       	ori	r20, 0x3E	; 62
     e36:	14 96       	adiw	r26, 0x04	; 4
     e38:	4c 93       	st	X, r20
     e3a:	40 91 44 04 	lds	r20, 0x0444	; 0x800444 <__TEXT_REGION_LENGTH__+0x700444>
     e3e:	47 60       	ori	r20, 0x07	; 7
     e40:	40 93 44 04 	sts	0x0444, r20	; 0x800444 <__TEXT_REGION_LENGTH__+0x700444>
     e44:	fe 01       	movw	r30, r28
     e46:	11 92       	st	Z+, r1
     e48:	0e 17       	cp	r16, r30
     e4a:	1f 07       	cpc	r17, r31
     e4c:	e1 f7       	brne	.-8      	; 0xe46 <main+0x1e0>
     e4e:	40 91 07 3c 	lds	r20, 0x3C07	; 0x803c07 <transaction_type>
     e52:	42 36       	cpi	r20, 0x62	; 98
     e54:	09 f0       	breq	.+2      	; 0xe58 <main+0x1f2>
     e56:	f2 c1       	rjmp	.+996    	; 0x123c <main+0x5d6>
     e58:	f9 01       	movw	r30, r18
     e5a:	e6 5e       	subi	r30, 0xE6	; 230
     e5c:	f3 4c       	sbci	r31, 0xC3	; 195
     e5e:	40 81       	ld	r20, Z
     e60:	64 2f       	mov	r22, r20
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	08 2e       	mov	r0, r24
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <main+0x206>
     e68:	75 95       	asr	r23
     e6a:	67 95       	ror	r22
     e6c:	0a 94       	dec	r0
     e6e:	e2 f7       	brpl	.-8      	; 0xe68 <main+0x202>
     e70:	60 ff       	sbrs	r22, 0
     e72:	0e c0       	rjmp	.+28     	; 0xe90 <main+0x22a>
     e74:	f9 01       	movw	r30, r18
     e76:	e6 5e       	subi	r30, 0xE6	; 230
     e78:	f3 4c       	sbci	r31, 0xC3	; 195
     e7a:	92 01       	movw	r18, r4
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <main+0x21c>
     e7e:	22 0f       	add	r18, r18
     e80:	33 1f       	adc	r19, r19
     e82:	8a 95       	dec	r24
     e84:	e2 f7       	brpl	.-8      	; 0xe7e <main+0x218>
     e86:	c9 01       	movw	r24, r18
     e88:	80 95       	com	r24
     e8a:	48 23       	and	r20, r24
     e8c:	40 83       	st	Z, r20
     e8e:	d6 c1       	rjmp	.+940    	; 0x123c <main+0x5d6>
     e90:	f9 01       	movw	r30, r18
     e92:	e6 5e       	subi	r30, 0xE6	; 230
     e94:	f3 4c       	sbci	r31, 0xC3	; 195
     e96:	d2 01       	movw	r26, r4
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <main+0x238>
     e9a:	aa 0f       	add	r26, r26
     e9c:	bb 1f       	adc	r27, r27
     e9e:	8a 95       	dec	r24
     ea0:	e2 f7       	brpl	.-8      	; 0xe9a <main+0x234>
     ea2:	cd 01       	movw	r24, r26
     ea4:	84 2b       	or	r24, r20
     ea6:	80 83       	st	Z, r24
     ea8:	c9 c1       	rjmp	.+914    	; 0x123c <main+0x5d6>
		
	case 'A':													//When "cr" detected convert string from UNO to long number
	if(cr_keypress == 1){
     eaa:	80 91 03 3c 	lds	r24, 0x3C03	; 0x803c03 <cr_keypress>
     eae:	81 30       	cpi	r24, 0x01	; 1
     eb0:	09 f0       	breq	.+2      	; 0xeb4 <main+0x24e>
     eb2:	c4 c1       	rjmp	.+904    	; 0x123c <main+0x5d6>
	cr_keypress = 0;
     eb4:	10 92 03 3c 	sts	0x3C03, r1	; 0x803c03 <cr_keypress>
     eb8:	ad e3       	ldi	r26, 0x3D	; 61
     eba:	bc e3       	ldi	r27, 0x3C	; 60
     ebc:	fd 01       	movw	r30, r26
	display_buffer2temp;										//Reverse string prior to conversion to binary
     ebe:	11 92       	st	Z+, r1
     ec0:	ee 16       	cp	r14, r30
     ec2:	ff 06       	cpc	r15, r31
     ec4:	e1 f7       	brne	.-8      	; 0xebe <main+0x258>
     ec6:	f6 01       	movw	r30, r12
     ec8:	86 85       	ldd	r24, Z+14	; 0x0e
     eca:	81 11       	cpse	r24, r1
     ecc:	10 c0       	rjmp	.+32     	; 0xeee <main+0x288>
     ece:	e8 e2       	ldi	r30, 0x28	; 40
     ed0:	fc e3       	ldi	r31, 0x3C	; 60
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	92 91       	ld	r25, -Z
     ed6:	99 23       	and	r25, r25
     ed8:	31 f0       	breq	.+12     	; 0xee6 <main+0x280>
     eda:	2e e0       	ldi	r18, 0x0E	; 14
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	28 1b       	sub	r18, r24
     ee0:	31 09       	sbc	r19, r1
     ee2:	3a f4       	brpl	.+14     	; 0xef2 <main+0x28c>
     ee4:	11 c0       	rjmp	.+34     	; 0xf08 <main+0x2a2>
     ee6:	8f 5f       	subi	r24, 0xFF	; 255
     ee8:	8f 30       	cpi	r24, 0x0F	; 15
     eea:	a1 f7       	brne	.-24     	; 0xed4 <main+0x26e>
     eec:	0d c0       	rjmp	.+26     	; 0xf08 <main+0x2a2>
     eee:	2e e0       	ldi	r18, 0x0E	; 14
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	f9 01       	movw	r30, r18
     ef4:	e5 5e       	subi	r30, 0xE5	; 229
     ef6:	f3 4c       	sbci	r31, 0xC3	; 195
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	42 91       	ld	r20, -Z
     efe:	4d 93       	st	X+, r20
     f00:	01 96       	adiw	r24, 0x01	; 1
     f02:	28 17       	cp	r18, r24
     f04:	39 07       	cpc	r19, r25
     f06:	d4 f7       	brge	.-12     	; 0xefc <main+0x296>
	Long_Num_to_UNO = atol(temp_buffer);	
     f08:	8d e3       	ldi	r24, 0x3D	; 61
     f0a:	9c e3       	ldi	r25, 0x3C	; 60
     f0c:	0e 94 36 11 	call	0x226c	; 0x226c <atol>
     f10:	60 93 37 3c 	sts	0x3C37, r22	; 0x803c37 <Long_Num_to_UNO>
     f14:	70 93 38 3c 	sts	0x3C38, r23	; 0x803c38 <Long_Num_to_UNO+0x1>
     f18:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <Long_Num_to_UNO+0x2>
     f1c:	90 93 3a 3c 	sts	0x3C3A, r25	; 0x803c3a <Long_Num_to_UNO+0x3>
	for(int m = 0; m <= 3; m++)
	data_byte[m] = Long_Num_to_UNO >> (8*(3-m));}				//Split long number into 4 bytes for re-transmission
     f20:	e9 e0       	ldi	r30, 0x09	; 9
     f22:	fc e3       	ldi	r31, 0x3C	; 60
     f24:	90 83       	st	Z, r25
     f26:	81 83       	std	Z+1, r24	; 0x01
     f28:	72 83       	std	Z+2, r23	; 0x02
     f2a:	63 83       	std	Z+3, r22	; 0x03
     f2c:	87 c1       	rjmp	.+782    	; 0x123c <main+0x5d6>
	break;
		
	case 'B':													//When "cr" detected convert string from UNO to float
	if(cr_keypress == 1){
     f2e:	80 91 03 3c 	lds	r24, 0x3C03	; 0x803c03 <cr_keypress>
     f32:	81 30       	cpi	r24, 0x01	; 1
     f34:	09 f0       	breq	.+2      	; 0xf38 <main+0x2d2>
     f36:	82 c1       	rjmp	.+772    	; 0x123c <main+0x5d6>
	cr_keypress = 0;
     f38:	10 92 03 3c 	sts	0x3C03, r1	; 0x803c03 <cr_keypress>
	check_for_dp;
     f3c:	d6 01       	movw	r26, r12
     f3e:	1e 96       	adiw	r26, 0x0e	; 14
     f40:	8c 91       	ld	r24, X
     f42:	88 23       	and	r24, r24
     f44:	64 f1       	brlt	.+88     	; 0xf9e <main+0x338>
     f46:	a8 e2       	ldi	r26, 0x28	; 40
     f48:	bc e3       	ldi	r27, 0x3C	; 60
     f4a:	2b e1       	ldi	r18, 0x1B	; 27
     f4c:	3c e3       	ldi	r19, 0x3C	; 60
     f4e:	fd 01       	movw	r30, r26
     f50:	03 c0       	rjmp	.+6      	; 0xf58 <main+0x2f2>
     f52:	e2 17       	cp	r30, r18
     f54:	f3 07       	cpc	r31, r19
     f56:	21 f0       	breq	.+8      	; 0xf60 <main+0x2fa>
     f58:	82 91       	ld	r24, -Z
     f5a:	88 23       	and	r24, r24
     f5c:	d4 f7       	brge	.-12     	; 0xf52 <main+0x2ec>
     f5e:	1f c0       	rjmp	.+62     	; 0xf9e <main+0x338>
     f60:	fe 01       	movw	r30, r28
     f62:	80 e0       	ldi	r24, 0x00	; 0
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	40 e0       	ldi	r20, 0x00	; 0
     f68:	50 e0       	ldi	r21, 0x00	; 0
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
     f6a:	61 91       	ld	r22, Z+
     f6c:	6f 7d       	andi	r22, 0xDF	; 223
     f6e:	65 34       	cpi	r22, 0x45	; 69
     f70:	09 f4       	brne	.+2      	; 0xf74 <main+0x30e>
     f72:	ac 01       	movw	r20, r24
     f74:	01 96       	adiw	r24, 0x01	; 1
     f76:	8f 30       	cpi	r24, 0x0F	; 15
     f78:	91 05       	cpc	r25, r1
     f7a:	b9 f7       	brne	.-18     	; 0xf6a <main+0x304>
     f7c:	41 15       	cp	r20, r1
     f7e:	51 05       	cpc	r21, r1
     f80:	59 f0       	breq	.+22     	; 0xf98 <main+0x332>
     f82:	fa 01       	movw	r30, r20
     f84:	e5 5e       	subi	r30, 0xE5	; 229
     f86:	f3 4c       	sbci	r31, 0xC3	; 195
     f88:	80 81       	ld	r24, Z
     f8a:	80 68       	ori	r24, 0x80	; 128
     f8c:	80 83       	st	Z, r24
     f8e:	07 c0       	rjmp	.+14     	; 0xf9e <main+0x338>
     f90:	2a 17       	cp	r18, r26
     f92:	3b 07       	cpc	r19, r27
     f94:	09 f4       	brne	.+2      	; 0xf98 <main+0x332>
     f96:	67 c1       	rjmp	.+718    	; 0x1266 <main+0x600>
     f98:	8e 91       	ld	r24, -X
     f9a:	88 23       	and	r24, r24
     f9c:	cc f7       	brge	.-14     	; 0xf90 <main+0x32a>
     f9e:	ad e3       	ldi	r26, 0x3D	; 61
     fa0:	bc e3       	ldi	r27, 0x3C	; 60
     fa2:	fd 01       	movw	r30, r26
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
     fa4:	11 92       	st	Z+, r1
     fa6:	ee 16       	cp	r14, r30
     fa8:	ff 06       	cpc	r15, r31
     faa:	e1 f7       	brne	.-8      	; 0xfa4 <main+0x33e>
     fac:	61 c1       	rjmp	.+706    	; 0x1270 <main+0x60a>
     fae:	92 91       	ld	r25, -Z
     fb0:	99 23       	and	r25, r25
     fb2:	31 f0       	breq	.+12     	; 0xfc0 <main+0x35a>
     fb4:	2e e0       	ldi	r18, 0x0E	; 14
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	28 1b       	sub	r18, r24
     fba:	31 09       	sbc	r19, r1
     fbc:	3a f4       	brpl	.+14     	; 0xfcc <main+0x366>
     fbe:	60 c1       	rjmp	.+704    	; 0x1280 <main+0x61a>
     fc0:	8f 5f       	subi	r24, 0xFF	; 255
     fc2:	8f 30       	cpi	r24, 0x0F	; 15
     fc4:	a1 f7       	brne	.-24     	; 0xfae <main+0x348>
     fc6:	5c c1       	rjmp	.+696    	; 0x1280 <main+0x61a>
     fc8:	2e e0       	ldi	r18, 0x0E	; 14
     fca:	30 e0       	ldi	r19, 0x00	; 0
     fcc:	f9 01       	movw	r30, r18
     fce:	e5 5e       	subi	r30, 0xE5	; 229
     fd0:	f3 4c       	sbci	r31, 0xC3	; 195
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	42 91       	ld	r20, -Z
     fd8:	4d 93       	st	X+, r20
     fda:	01 96       	adiw	r24, 0x01	; 1
     fdc:	28 17       	cp	r18, r24
     fde:	39 07       	cpc	r19, r25
     fe0:	d4 f7       	brge	.-12     	; 0xfd6 <main+0x370>
     fe2:	4e c1       	rjmp	.+668    	; 0x1280 <main+0x61a>
	extract_dp;													//Display merges the dp with a digit  											
     fe4:	81 91       	ld	r24, Z+
     fe6:	88 23       	and	r24, r24
     fe8:	54 f0       	brlt	.+20     	; 0xffe <main+0x398>
     fea:	4f 5f       	subi	r20, 0xFF	; 255
     fec:	5f 4f       	sbci	r21, 0xFF	; 255
     fee:	4f 30       	cpi	r20, 0x0F	; 15
     ff0:	51 05       	cpc	r21, r1
     ff2:	c1 f7       	brne	.-16     	; 0xfe4 <main+0x37e>
     ff4:	22 e0       	ldi	r18, 0x02	; 2
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	40 e0       	ldi	r20, 0x00	; 0
     ffa:	50 e0       	ldi	r21, 0x00	; 0
     ffc:	0b c0       	rjmp	.+22     	; 0x1014 <main+0x3ae>
     ffe:	fa 01       	movw	r30, r20
    1000:	e3 5c       	subi	r30, 0xC3	; 195
    1002:	f3 4c       	sbci	r31, 0xC3	; 195
    1004:	8f 77       	andi	r24, 0x7F	; 127
    1006:	80 83       	st	Z, r24
    1008:	9a 01       	movw	r18, r20
    100a:	2e 5f       	subi	r18, 0xFE	; 254
    100c:	3f 4f       	sbci	r19, 0xFF	; 255
    100e:	2f 30       	cpi	r18, 0x0F	; 15
    1010:	31 05       	cpc	r19, r1
    1012:	54 f4       	brge	.+20     	; 0x1028 <main+0x3c2>
    1014:	eb e4       	ldi	r30, 0x4B	; 75
    1016:	fc e3       	ldi	r31, 0x3C	; 60
    1018:	8e e0       	ldi	r24, 0x0E	; 14
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	01 97       	sbiw	r24, 0x01	; 1
    101e:	62 91       	ld	r22, -Z
    1020:	61 83       	std	Z+1, r22	; 0x01
    1022:	82 17       	cp	r24, r18
    1024:	93 07       	cpc	r25, r19
    1026:	d4 f7       	brge	.-12     	; 0x101c <main+0x3b6>
    1028:	fa 01       	movw	r30, r20
    102a:	e3 5c       	subi	r30, 0xC3	; 195
    102c:	f3 4c       	sbci	r31, 0xC3	; 195
    102e:	8e e2       	ldi	r24, 0x2E	; 46
    1030:	81 83       	std	Z+1, r24	; 0x01
	Float_Num_to_UNO = atof(temp_buffer);
    1032:	8d e3       	ldi	r24, 0x3D	; 61
    1034:	9c e3       	ldi	r25, 0x3C	; 60
    1036:	0e 94 32 11 	call	0x2264	; 0x2264 <atof>
    103a:	60 93 13 3c 	sts	0x3C13, r22	; 0x803c13 <Float_Num_to_UNO>
    103e:	70 93 14 3c 	sts	0x3C14, r23	; 0x803c14 <Float_Num_to_UNO+0x1>
    1042:	80 93 15 3c 	sts	0x3C15, r24	; 0x803c15 <Float_Num_to_UNO+0x2>
    1046:	90 93 16 3c 	sts	0x3C16, r25	; 0x803c16 <Float_Num_to_UNO+0x3>
	char_ptr = (char*)&Float_Num_to_UNO;						//Split the number into bytes ready for return to the UNO
    104a:	83 e1       	ldi	r24, 0x13	; 19
    104c:	9c e3       	ldi	r25, 0x3C	; 60
    104e:	80 93 34 3c 	sts	0x3C34, r24	; 0x803c34 <char_ptr>
    1052:	90 93 35 3c 	sts	0x3C35, r25	; 0x803c35 <char_ptr+0x1>
    1056:	a9 e0       	ldi	r26, 0x09	; 9
    1058:	bc e3       	ldi	r27, 0x3C	; 60
    105a:	2d e0       	ldi	r18, 0x0D	; 13
    105c:	3c e3       	ldi	r19, 0x3C	; 60
	for (int m = 0; m <= 3; m++)
	{data_byte[m] = *char_ptr;
    105e:	e0 91 34 3c 	lds	r30, 0x3C34	; 0x803c34 <char_ptr>
    1062:	f0 91 35 3c 	lds	r31, 0x3C35	; 0x803c35 <char_ptr+0x1>
    1066:	81 91       	ld	r24, Z+
    1068:	8d 93       	st	X+, r24
	char_ptr += 1;}
    106a:	e0 93 34 3c 	sts	0x3C34, r30	; 0x803c34 <char_ptr>
    106e:	f0 93 35 3c 	sts	0x3C35, r31	; 0x803c35 <char_ptr+0x1>
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
	extract_dp;													//Display merges the dp with a digit  											
	Float_Num_to_UNO = atof(temp_buffer);
	char_ptr = (char*)&Float_Num_to_UNO;						//Split the number into bytes ready for return to the UNO
	for (int m = 0; m <= 3; m++)
    1072:	a2 17       	cp	r26, r18
    1074:	b3 07       	cpc	r27, r19
    1076:	99 f7       	brne	.-26     	; 0x105e <main+0x3f8>
    1078:	e1 c0       	rjmp	.+450    	; 0x123c <main+0x5d6>
	while(1){
		while(!(transaction_complete));							//Wait here for requests from the UNO
		transaction_complete = 0;
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
    107a:	fe 01       	movw	r30, r28
	char_ptr += 1;}
	}break;
		
		
	case 'C':													//Convert long from UNO to string
	clear_display_buffer;
    107c:	11 92       	st	Z+, r1
    107e:	0e 17       	cp	r16, r30
    1080:	1f 07       	cpc	r17, r31
    1082:	e1 f7       	brne	.-8      	; 0x107c <main+0x416>
    1084:	ed e3       	ldi	r30, 0x3D	; 61
    1086:	fc e3       	ldi	r31, 0x3C	; 60
	clear_temp_buffer;
    1088:	11 92       	st	Z+, r1
    108a:	ee 15       	cp	r30, r14
    108c:	ff 05       	cpc	r31, r15
    108e:	e1 f7       	brne	.-8      	; 0x1088 <main+0x422>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
    1090:	60 91 2e 3c 	lds	r22, 0x3C2E	; 0x803c2e <Long_Num_from_UNO>
    1094:	70 91 2f 3c 	lds	r23, 0x3C2F	; 0x803c2f <Long_Num_from_UNO+0x1>
    1098:	80 91 30 3c 	lds	r24, 0x3C30	; 0x803c30 <Long_Num_from_UNO+0x2>
    109c:	90 91 31 3c 	lds	r25, 0x3C31	; 0x803c31 <Long_Num_from_UNO+0x3>
    10a0:	2a e0       	ldi	r18, 0x0A	; 10
    10a2:	4d e3       	ldi	r20, 0x3D	; 61
    10a4:	5c e3       	ldi	r21, 0x3C	; 60
    10a6:	0e 94 5d 11 	call	0x22ba	; 0x22ba <__ltoa_ncheck>
	ltoa(Long_Num_from_UNO, temp_buffer, 10);
	temp2display_buffer;										//Reverse string prior to display	
    10aa:	80 91 4b 3c 	lds	r24, 0x3C4B	; 0x803c4b <temp_buffer+0xe>
    10ae:	81 11       	cpse	r24, r1
    10b0:	10 c0       	rjmp	.+32     	; 0x10d2 <main+0x46c>
    10b2:	eb e4       	ldi	r30, 0x4B	; 75
    10b4:	fc e3       	ldi	r31, 0x3C	; 60
    10b6:	81 e0       	ldi	r24, 0x01	; 1
    10b8:	92 91       	ld	r25, -Z
    10ba:	99 23       	and	r25, r25
    10bc:	31 f0       	breq	.+12     	; 0x10ca <main+0x464>
    10be:	2e e0       	ldi	r18, 0x0E	; 14
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	28 1b       	sub	r18, r24
    10c4:	31 09       	sbc	r19, r1
    10c6:	3a f4       	brpl	.+14     	; 0x10d6 <main+0x470>
    10c8:	b9 c0       	rjmp	.+370    	; 0x123c <main+0x5d6>
    10ca:	8f 5f       	subi	r24, 0xFF	; 255
    10cc:	8f 30       	cpi	r24, 0x0F	; 15
    10ce:	a1 f7       	brne	.-24     	; 0x10b8 <main+0x452>
    10d0:	b5 c0       	rjmp	.+362    	; 0x123c <main+0x5d6>
    10d2:	2e e0       	ldi	r18, 0x0E	; 14
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	d9 01       	movw	r26, r18
    10d8:	a2 5c       	subi	r26, 0xC2	; 194
    10da:	b3 4c       	sbci	r27, 0xC3	; 195
    10dc:	fe 01       	movw	r30, r28
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	4e 91       	ld	r20, -X
    10e4:	41 93       	st	Z+, r20
    10e6:	01 96       	adiw	r24, 0x01	; 1
    10e8:	28 17       	cp	r18, r24
    10ea:	39 07       	cpc	r19, r25
    10ec:	d4 f7       	brge	.-12     	; 0x10e2 <main+0x47c>
    10ee:	a6 c0       	rjmp	.+332    	; 0x123c <main+0x5d6>
	break;
			
	case 'D': 													//Convert float from UNO to string
	Float_Num_from_UNO  = *float_ptr;
    10f0:	e0 91 0d 3c 	lds	r30, 0x3C0D	; 0x803c0d <float_ptr>
    10f4:	f0 91 0e 3c 	lds	r31, 0x3C0E	; 0x803c0e <float_ptr+0x1>
    10f8:	60 81       	ld	r22, Z
    10fa:	71 81       	ldd	r23, Z+1	; 0x01
    10fc:	82 81       	ldd	r24, Z+2	; 0x02
    10fe:	93 81       	ldd	r25, Z+3	; 0x03
    1100:	60 93 0f 3c 	sts	0x3C0F, r22	; 0x803c0f <Float_Num_from_UNO>
    1104:	70 93 10 3c 	sts	0x3C10, r23	; 0x803c10 <Float_Num_from_UNO+0x1>
    1108:	80 93 11 3c 	sts	0x3C11, r24	; 0x803c11 <Float_Num_from_UNO+0x2>
    110c:	90 93 12 3c 	sts	0x3C12, r25	; 0x803c12 <Float_Num_from_UNO+0x3>
	ftoaL(Float_Num_from_UNO);
    1110:	0e 94 2a 04 	call	0x854	; 0x854 <ftoaL>
	Combine_dp;		 
    1114:	80 91 3d 3c 	lds	r24, 0x3C3D	; 0x803c3d <temp_buffer>
    1118:	8e 32       	cpi	r24, 0x2E	; 46
    111a:	21 f4       	brne	.+8      	; 0x1124 <main+0x4be>
    111c:	80 eb       	ldi	r24, 0xB0	; 176
    111e:	80 93 3d 3c 	sts	0x3C3D, r24	; 0x803c3d <temp_buffer>
    1122:	1e c0       	rjmp	.+60     	; 0x1160 <main+0x4fa>
    1124:	ee e3       	ldi	r30, 0x3E	; 62
    1126:	fc e3       	ldi	r31, 0x3C	; 60
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	21 91       	ld	r18, Z+
    112e:	2e 32       	cpi	r18, 0x2E	; 46
    1130:	29 f0       	breq	.+10     	; 0x113c <main+0x4d6>
    1132:	01 96       	adiw	r24, 0x01	; 1
    1134:	8f 30       	cpi	r24, 0x0F	; 15
    1136:	91 05       	cpc	r25, r1
    1138:	c9 f7       	brne	.-14     	; 0x112c <main+0x4c6>
    113a:	ab c0       	rjmp	.+342    	; 0x1292 <main+0x62c>
    113c:	fc 01       	movw	r30, r24
    113e:	e4 5c       	subi	r30, 0xC4	; 196
    1140:	f3 4c       	sbci	r31, 0xC3	; 195
    1142:	20 81       	ld	r18, Z
    1144:	20 68       	ori	r18, 0x80	; 128
    1146:	20 83       	st	Z, r18
    1148:	8e 30       	cpi	r24, 0x0E	; 14
    114a:	91 05       	cpc	r25, r1
    114c:	4c f4       	brge	.+18     	; 0x1160 <main+0x4fa>
    114e:	fc 01       	movw	r30, r24
    1150:	e3 5c       	subi	r30, 0xC3	; 195
    1152:	f3 4c       	sbci	r31, 0xC3	; 195
    1154:	01 96       	adiw	r24, 0x01	; 1
    1156:	21 81       	ldd	r18, Z+1	; 0x01
    1158:	21 93       	st	Z+, r18
    115a:	8e 30       	cpi	r24, 0x0E	; 14
    115c:	91 05       	cpc	r25, r1
    115e:	d4 f3       	brlt	.-12     	; 0x1154 <main+0x4ee>
	Insert_sign;
    1160:	80 91 08 3c 	lds	r24, 0x3C08	; 0x803c08 <sign>
    1164:	8d 32       	cpi	r24, 0x2D	; 45
    1166:	61 f4       	brne	.+24     	; 0x1180 <main+0x51a>
    1168:	eb e4       	ldi	r30, 0x4B	; 75
    116a:	fc e3       	ldi	r31, 0x3C	; 60
    116c:	2d e3       	ldi	r18, 0x3D	; 61
    116e:	3c e3       	ldi	r19, 0x3C	; 60
    1170:	82 91       	ld	r24, -Z
    1172:	81 83       	std	Z+1, r24	; 0x01
    1174:	e2 17       	cp	r30, r18
    1176:	f3 07       	cpc	r31, r19
    1178:	d9 f7       	brne	.-10     	; 0x1170 <main+0x50a>
    117a:	8d e2       	ldi	r24, 0x2D	; 45
    117c:	80 93 3d 3c 	sts	0x3C3D, r24	; 0x803c3d <temp_buffer>
    1180:	ec e4       	ldi	r30, 0x4C	; 76
    1182:	fc e3       	ldi	r31, 0x3C	; 60
    1184:	01 c0       	rjmp	.+2      	; 0x1188 <main+0x522>
	Remove_lagging_zeros;
    1186:	1c 92       	st	X, r1
    1188:	31 97       	sbiw	r30, 0x01	; 1
    118a:	df 01       	movw	r26, r30
    118c:	80 81       	ld	r24, Z
    118e:	88 23       	and	r24, r24
    1190:	d1 f3       	breq	.-12     	; 0x1186 <main+0x520>
    1192:	80 33       	cpi	r24, 0x30	; 48
    1194:	c1 f3       	breq	.-16     	; 0x1186 <main+0x520>
	temp2display_buffer;										//Reverse string prior to display
    1196:	80 91 4b 3c 	lds	r24, 0x3C4B	; 0x803c4b <temp_buffer+0xe>
    119a:	81 11       	cpse	r24, r1
    119c:	10 c0       	rjmp	.+32     	; 0x11be <main+0x558>
    119e:	eb e4       	ldi	r30, 0x4B	; 75
    11a0:	fc e3       	ldi	r31, 0x3C	; 60
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	92 91       	ld	r25, -Z
    11a6:	99 23       	and	r25, r25
    11a8:	31 f0       	breq	.+12     	; 0x11b6 <main+0x550>
    11aa:	2e e0       	ldi	r18, 0x0E	; 14
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	28 1b       	sub	r18, r24
    11b0:	31 09       	sbc	r19, r1
    11b2:	3a f4       	brpl	.+14     	; 0x11c2 <main+0x55c>
    11b4:	12 c0       	rjmp	.+36     	; 0x11da <main+0x574>
    11b6:	8f 5f       	subi	r24, 0xFF	; 255
    11b8:	8f 30       	cpi	r24, 0x0F	; 15
    11ba:	a1 f7       	brne	.-24     	; 0x11a4 <main+0x53e>
    11bc:	0e c0       	rjmp	.+28     	; 0x11da <main+0x574>
    11be:	2e e0       	ldi	r18, 0x0E	; 14
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	d9 01       	movw	r26, r18
    11c4:	a2 5c       	subi	r26, 0xC2	; 194
    11c6:	b3 4c       	sbci	r27, 0xC3	; 195
    11c8:	fe 01       	movw	r30, r28
    11ca:	80 e0       	ldi	r24, 0x00	; 0
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	4e 91       	ld	r20, -X
    11d0:	41 93       	st	Z+, r20
    11d2:	01 96       	adiw	r24, 0x01	; 1
    11d4:	28 17       	cp	r18, r24
    11d6:	39 07       	cpc	r19, r25
    11d8:	d4 f7       	brge	.-12     	; 0x11ce <main+0x568>
	if (expt){Left_justify_number;
    11da:	80 91 19 3c 	lds	r24, 0x3C19	; 0x803c19 <expt>
    11de:	88 23       	and	r24, r24
    11e0:	69 f1       	breq	.+90     	; 0x123c <main+0x5d6>
    11e2:	e8 e2       	ldi	r30, 0x28	; 40
    11e4:	fc e3       	ldi	r31, 0x3C	; 60
    11e6:	82 91       	ld	r24, -Z
    11e8:	81 83       	std	Z+1, r24	; 0x01
    11ea:	ec 17       	cp	r30, r28
    11ec:	fd 07       	cpc	r31, r29
    11ee:	d9 f7       	brne	.-10     	; 0x11e6 <main+0x580>
    11f0:	f6 01       	movw	r30, r12
    11f2:	10 82       	st	Z, r1
    11f4:	87 81       	ldd	r24, Z+7	; 0x07
    11f6:	88 23       	and	r24, r24
    11f8:	a1 f3       	breq	.-24     	; 0x11e2 <main+0x57c>
	Add_exponent ();}
    11fa:	0e 94 ad 05 	call	0xb5a	; 0xb5a <Add_exponent>
    11fe:	1e c0       	rjmp	.+60     	; 0x123c <main+0x5d6>
    1200:	ad e3       	ldi	r26, 0x3D	; 61
    1202:	bc e3       	ldi	r27, 0x3C	; 60
	while(1){
		while(!(transaction_complete));							//Wait here for requests from the UNO
		transaction_complete = 0;
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
    1204:	cd 01       	movw	r24, r26
    1206:	fe 01       	movw	r30, r28
    1208:	ad 01       	movw	r20, r26
	Add_exponent ();}
	break;
		
	case 'E':													//Return binary number (long or float) to UNO
	for(int m = 0; m <= 7; m++)
	temp_buffer[m] = display_buffer[m];							//Flash display
    120a:	21 91       	ld	r18, Z+
    120c:	dc 01       	movw	r26, r24
    120e:	2d 93       	st	X+, r18
    1210:	cd 01       	movw	r24, r26
	if (expt){Left_justify_number;
	Add_exponent ();}
	break;
		
	case 'E':													//Return binary number (long or float) to UNO
	for(int m = 0; m <= 7; m++)
    1212:	ae 16       	cp	r10, r30
    1214:	bf 06       	cpc	r11, r31
    1216:	c9 f7       	brne	.-14     	; 0x120a <main+0x5a4>
    1218:	da 01       	movw	r26, r20
    121a:	fe 01       	movw	r30, r28
	temp_buffer[m] = display_buffer[m];							//Flash display
	clear_display_buffer;
    121c:	11 92       	st	Z+, r1
    121e:	0e 17       	cp	r16, r30
    1220:	1f 07       	cpc	r17, r31
    1222:	e1 f7       	brne	.-8      	; 0x121c <main+0x5b6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1224:	e7 ea       	ldi	r30, 0xA7	; 167
    1226:	f1 e6       	ldi	r31, 0x61	; 97
    1228:	31 97       	sbiw	r30, 0x01	; 1
    122a:	f1 f7       	brne	.-4      	; 0x1228 <main+0x5c2>
    122c:	00 c0       	rjmp	.+0      	; 0x122e <main+0x5c8>
    122e:	00 00       	nop
    1230:	fe 01       	movw	r30, r28
	_delay_ms(100);
	for(int m = 0; m <= 7; m++)
	display_buffer[m] = temp_buffer[m];
    1232:	8d 91       	ld	r24, X+
    1234:	81 93       	st	Z+, r24
	case 'E':													//Return binary number (long or float) to UNO
	for(int m = 0; m <= 7; m++)
	temp_buffer[m] = display_buffer[m];							//Flash display
	clear_display_buffer;
	_delay_ms(100);
	for(int m = 0; m <= 7; m++)
    1236:	a8 15       	cp	r26, r8
    1238:	b9 05       	cpc	r27, r9
    123a:	d9 f7       	brne	.-10     	; 0x1232 <main+0x5cc>
	case 'G': break;											//Toggles brightness
	
	
	
	}
	if(transaction_type != 'G')mode = transaction_type;	
    123c:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
    1240:	87 34       	cpi	r24, 0x47	; 71
    1242:	21 f0       	breq	.+8      	; 0x124c <main+0x5e6>
    1244:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
    1248:	80 93 36 3c 	sts	0x3C36, r24	; 0x803c36 <mode>
	transaction_type = 0;
    124c:	10 92 07 3c 	sts	0x3C07, r1	; 0x803c07 <transaction_type>
	busy_flag = 0;
    1250:	10 92 00 3c 	sts	0x3C00, r1	; 0x803c00 <_edata>
	}}
    1254:	78 cd       	rjmp	.-1296   	; 0xd46 <main+0xe0>
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
	
	case 'a': break;											//One_wire_Tx_2_integers()
	case 'b': I2C_Tx_any_segment; break;			
    1256:	80 91 4c 3c 	lds	r24, 0x3C4C	; 0x803c4c <digit_num>
    125a:	90 91 4d 3c 	lds	r25, 0x3C4D	; 0x803c4d <digit_num+0x1>
    125e:	88 30       	cpi	r24, 0x08	; 8
    1260:	91 05       	cpc	r25, r1
    1262:	60 f7       	brcc	.-40     	; 0x123c <main+0x5d6>
    1264:	cf cd       	rjmp	.-1122   	; 0xe04 <main+0x19e>
		
	case 'B':													//When "cr" detected convert string from UNO to float
	if(cr_keypress == 1){
	cr_keypress = 0;
	check_for_dp;
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
    1266:	d6 01       	movw	r26, r12
    1268:	8c 91       	ld	r24, X
    126a:	80 68       	ori	r24, 0x80	; 128
    126c:	8c 93       	st	X, r24
    126e:	97 ce       	rjmp	.-722    	; 0xf9e <main+0x338>
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
    1270:	f6 01       	movw	r30, r12
    1272:	86 85       	ldd	r24, Z+14	; 0x0e
    1274:	81 11       	cpse	r24, r1
    1276:	a8 ce       	rjmp	.-688    	; 0xfc8 <main+0x362>
    1278:	e8 e2       	ldi	r30, 0x28	; 40
    127a:	fc e3       	ldi	r31, 0x3C	; 60
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	97 ce       	rjmp	.-722    	; 0xfae <main+0x348>
	extract_dp;													//Display merges the dp with a digit  											
    1280:	80 91 3d 3c 	lds	r24, 0x3C3D	; 0x803c3d <temp_buffer>
    1284:	88 23       	and	r24, r24
    1286:	64 f0       	brlt	.+24     	; 0x12a0 <main+0x63a>
    1288:	ee e3       	ldi	r30, 0x3E	; 62
    128a:	fc e3       	ldi	r31, 0x3C	; 60
    128c:	41 e0       	ldi	r20, 0x01	; 1
    128e:	50 e0       	ldi	r21, 0x00	; 0
    1290:	a9 ce       	rjmp	.-686    	; 0xfe4 <main+0x37e>
	break;
			
	case 'D': 													//Convert float from UNO to string
	Float_Num_from_UNO  = *float_ptr;
	ftoaL(Float_Num_from_UNO);
	Combine_dp;		 
    1292:	d3 01       	movw	r26, r6
    1294:	8c 91       	ld	r24, X
    1296:	80 68       	ori	r24, 0x80	; 128
    1298:	8c 93       	st	X, r24
    129a:	80 e0       	ldi	r24, 0x00	; 0
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	57 cf       	rjmp	.-338    	; 0x114e <main+0x4e8>
	if(cr_keypress == 1){
	cr_keypress = 0;
	check_for_dp;
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
	extract_dp;													//Display merges the dp with a digit  											
    12a0:	8f 77       	andi	r24, 0x7F	; 127
    12a2:	80 93 3d 3c 	sts	0x3C3D, r24	; 0x803c3d <temp_buffer>
    12a6:	22 e0       	ldi	r18, 0x02	; 2
    12a8:	30 e0       	ldi	r19, 0x00	; 0
    12aa:	40 e0       	ldi	r20, 0x00	; 0
    12ac:	50 e0       	ldi	r21, 0x00	; 0
    12ae:	b2 ce       	rjmp	.-668    	; 0x1014 <main+0x3ae>

000012b0 <Char_definition>:
		
		
		
	/*****************************************************************************************************************************/
	void Char_definition()
	{switch (display_buffer[display_ptr]){
    12b0:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    12b4:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    12b8:	e6 5e       	subi	r30, 0xE6	; 230
    12ba:	f3 4c       	sbci	r31, 0xC3	; 195
    12bc:	e0 81       	ld	r30, Z
    12be:	8e 2f       	mov	r24, r30
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	fc 01       	movw	r30, r24
    12c4:	bd 97       	sbiw	r30, 0x2d	; 45
    12c6:	ed 38       	cpi	r30, 0x8D	; 141
    12c8:	f1 05       	cpc	r31, r1
    12ca:	08 f0       	brcs	.+2      	; 0x12ce <Char_definition+0x1e>
    12cc:	1d c1       	rjmp	.+570    	; 0x1508 <Char_definition+0x258>
    12ce:	e9 57       	subi	r30, 0x79	; 121
    12d0:	ff 4f       	sbci	r31, 0xFF	; 255
    12d2:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__tablejump2__>
	case '0': zero; break;
    12d6:	e0 e2       	ldi	r30, 0x20	; 32
    12d8:	f4 e0       	ldi	r31, 0x04	; 4
    12da:	84 81       	ldd	r24, Z+4	; 0x04
    12dc:	85 7c       	andi	r24, 0xC5	; 197
    12de:	84 83       	std	Z+4, r24	; 0x04
    12e0:	e0 e4       	ldi	r30, 0x40	; 64
    12e2:	f4 e0       	ldi	r31, 0x04	; 4
    12e4:	84 81       	ldd	r24, Z+4	; 0x04
    12e6:	89 7f       	andi	r24, 0xF9	; 249
    12e8:	84 83       	std	Z+4, r24	; 0x04
    12ea:	08 95       	ret
	case '1': one; break;
    12ec:	e0 e2       	ldi	r30, 0x20	; 32
    12ee:	f4 e0       	ldi	r31, 0x04	; 4
    12f0:	84 81       	ldd	r24, Z+4	; 0x04
    12f2:	8d 7e       	andi	r24, 0xED	; 237
    12f4:	84 83       	std	Z+4, r24	; 0x04
    12f6:	08 95       	ret
	case '2': two; break;
    12f8:	e0 e2       	ldi	r30, 0x20	; 32
    12fa:	f4 e0       	ldi	r31, 0x04	; 4
    12fc:	84 81       	ldd	r24, Z+4	; 0x04
    12fe:	87 7c       	andi	r24, 0xC7	; 199
    1300:	84 83       	std	Z+4, r24	; 0x04
    1302:	e0 e4       	ldi	r30, 0x40	; 64
    1304:	f4 e0       	ldi	r31, 0x04	; 4
    1306:	84 81       	ldd	r24, Z+4	; 0x04
    1308:	8a 7f       	andi	r24, 0xFA	; 250
    130a:	84 83       	std	Z+4, r24	; 0x04
    130c:	08 95       	ret
	case '3': three; break;
    130e:	e0 e2       	ldi	r30, 0x20	; 32
    1310:	f4 e0       	ldi	r31, 0x04	; 4
    1312:	84 81       	ldd	r24, Z+4	; 0x04
    1314:	85 7c       	andi	r24, 0xC5	; 197
    1316:	84 83       	std	Z+4, r24	; 0x04
    1318:	e0 e4       	ldi	r30, 0x40	; 64
    131a:	f4 e0       	ldi	r31, 0x04	; 4
    131c:	84 81       	ldd	r24, Z+4	; 0x04
    131e:	8e 7f       	andi	r24, 0xFE	; 254
    1320:	84 83       	std	Z+4, r24	; 0x04
    1322:	08 95       	ret
	case '4': four; break;
    1324:	e0 e2       	ldi	r30, 0x20	; 32
    1326:	f4 e0       	ldi	r31, 0x04	; 4
    1328:	84 81       	ldd	r24, Z+4	; 0x04
    132a:	8d 7e       	andi	r24, 0xED	; 237
    132c:	84 83       	std	Z+4, r24	; 0x04
    132e:	e0 e4       	ldi	r30, 0x40	; 64
    1330:	f4 e0       	ldi	r31, 0x04	; 4
    1332:	84 81       	ldd	r24, Z+4	; 0x04
    1334:	8c 7f       	andi	r24, 0xFC	; 252
    1336:	84 83       	std	Z+4, r24	; 0x04
    1338:	08 95       	ret
	case '5': five; break;
    133a:	e0 e2       	ldi	r30, 0x20	; 32
    133c:	f4 e0       	ldi	r31, 0x04	; 4
    133e:	84 81       	ldd	r24, Z+4	; 0x04
    1340:	85 7d       	andi	r24, 0xD5	; 213
    1342:	84 83       	std	Z+4, r24	; 0x04
    1344:	e0 e4       	ldi	r30, 0x40	; 64
    1346:	f4 e0       	ldi	r31, 0x04	; 4
    1348:	84 81       	ldd	r24, Z+4	; 0x04
    134a:	8c 7f       	andi	r24, 0xFC	; 252
    134c:	84 83       	std	Z+4, r24	; 0x04
    134e:	08 95       	ret
	case '6': six; break;
    1350:	e0 e2       	ldi	r30, 0x20	; 32
    1352:	f4 e0       	ldi	r31, 0x04	; 4
    1354:	84 81       	ldd	r24, Z+4	; 0x04
    1356:	85 7f       	andi	r24, 0xF5	; 245
    1358:	84 83       	std	Z+4, r24	; 0x04
    135a:	e0 e4       	ldi	r30, 0x40	; 64
    135c:	f4 e0       	ldi	r31, 0x04	; 4
    135e:	84 81       	ldd	r24, Z+4	; 0x04
    1360:	88 7f       	andi	r24, 0xF8	; 248
    1362:	84 83       	std	Z+4, r24	; 0x04
    1364:	08 95       	ret
	case '7': seven; break;
    1366:	e0 e2       	ldi	r30, 0x20	; 32
    1368:	f4 e0       	ldi	r31, 0x04	; 4
    136a:	84 81       	ldd	r24, Z+4	; 0x04
    136c:	8d 7c       	andi	r24, 0xCD	; 205
    136e:	84 83       	std	Z+4, r24	; 0x04
    1370:	08 95       	ret
	case '8': eight; break;
    1372:	e0 e2       	ldi	r30, 0x20	; 32
    1374:	f4 e0       	ldi	r31, 0x04	; 4
    1376:	84 81       	ldd	r24, Z+4	; 0x04
    1378:	85 7c       	andi	r24, 0xC5	; 197
    137a:	84 83       	std	Z+4, r24	; 0x04
    137c:	e0 e4       	ldi	r30, 0x40	; 64
    137e:	f4 e0       	ldi	r31, 0x04	; 4
    1380:	84 81       	ldd	r24, Z+4	; 0x04
    1382:	88 7f       	andi	r24, 0xF8	; 248
    1384:	84 83       	std	Z+4, r24	; 0x04
    1386:	08 95       	ret
	case '9': nine; break;
    1388:	e0 e2       	ldi	r30, 0x20	; 32
    138a:	f4 e0       	ldi	r31, 0x04	; 4
    138c:	84 81       	ldd	r24, Z+4	; 0x04
    138e:	8d 7c       	andi	r24, 0xCD	; 205
    1390:	84 83       	std	Z+4, r24	; 0x04
    1392:	e0 e4       	ldi	r30, 0x40	; 64
    1394:	f4 e0       	ldi	r31, 0x04	; 4
    1396:	84 81       	ldd	r24, Z+4	; 0x04
    1398:	8c 7f       	andi	r24, 0xFC	; 252
    139a:	84 83       	std	Z+4, r24	; 0x04
    139c:	08 95       	ret
	case '-': minus; break;
    139e:	e0 e4       	ldi	r30, 0x40	; 64
    13a0:	f4 e0       	ldi	r31, 0x04	; 4
    13a2:	84 81       	ldd	r24, Z+4	; 0x04
    13a4:	8e 7f       	andi	r24, 0xFE	; 254
    13a6:	84 83       	std	Z+4, r24	; 0x04
    13a8:	08 95       	ret
			
	case 'E': case 'e': exponent; break;
    13aa:	e0 e2       	ldi	r30, 0x20	; 32
    13ac:	f4 e0       	ldi	r31, 0x04	; 4
    13ae:	84 81       	ldd	r24, Z+4	; 0x04
    13b0:	87 7d       	andi	r24, 0xD7	; 215
    13b2:	84 83       	std	Z+4, r24	; 0x04
    13b4:	e0 e4       	ldi	r30, 0x40	; 64
    13b6:	f4 e0       	ldi	r31, 0x04	; 4
    13b8:	84 81       	ldd	r24, Z+4	; 0x04
    13ba:	88 7f       	andi	r24, 0xF8	; 248
    13bc:	84 83       	std	Z+4, r24	; 0x04
    13be:	08 95       	ret
	case ('0' | 0x80): zero_point; break;
    13c0:	e0 e2       	ldi	r30, 0x20	; 32
    13c2:	f4 e0       	ldi	r31, 0x04	; 4
    13c4:	84 81       	ldd	r24, Z+4	; 0x04
    13c6:	85 7c       	andi	r24, 0xC5	; 197
    13c8:	84 83       	std	Z+4, r24	; 0x04
    13ca:	a0 e4       	ldi	r26, 0x40	; 64
    13cc:	b4 e0       	ldi	r27, 0x04	; 4
    13ce:	14 96       	adiw	r26, 0x04	; 4
    13d0:	8c 91       	ld	r24, X
    13d2:	14 97       	sbiw	r26, 0x04	; 4
    13d4:	89 7f       	andi	r24, 0xF9	; 249
    13d6:	14 96       	adiw	r26, 0x04	; 4
    13d8:	8c 93       	st	X, r24
    13da:	84 81       	ldd	r24, Z+4	; 0x04
    13dc:	8b 7f       	andi	r24, 0xFB	; 251
    13de:	84 83       	std	Z+4, r24	; 0x04
    13e0:	08 95       	ret
	case ('1' | 0x80): one_point; break;
    13e2:	e0 e2       	ldi	r30, 0x20	; 32
    13e4:	f4 e0       	ldi	r31, 0x04	; 4
    13e6:	84 81       	ldd	r24, Z+4	; 0x04
    13e8:	8d 7e       	andi	r24, 0xED	; 237
    13ea:	84 83       	std	Z+4, r24	; 0x04
    13ec:	84 81       	ldd	r24, Z+4	; 0x04
    13ee:	8b 7f       	andi	r24, 0xFB	; 251
    13f0:	84 83       	std	Z+4, r24	; 0x04
    13f2:	08 95       	ret
	case ('2' | 0x80): two_point; break;
    13f4:	e0 e2       	ldi	r30, 0x20	; 32
    13f6:	f4 e0       	ldi	r31, 0x04	; 4
    13f8:	84 81       	ldd	r24, Z+4	; 0x04
    13fa:	87 7c       	andi	r24, 0xC7	; 199
    13fc:	84 83       	std	Z+4, r24	; 0x04
    13fe:	a0 e4       	ldi	r26, 0x40	; 64
    1400:	b4 e0       	ldi	r27, 0x04	; 4
    1402:	14 96       	adiw	r26, 0x04	; 4
    1404:	8c 91       	ld	r24, X
    1406:	14 97       	sbiw	r26, 0x04	; 4
    1408:	8a 7f       	andi	r24, 0xFA	; 250
    140a:	14 96       	adiw	r26, 0x04	; 4
    140c:	8c 93       	st	X, r24
    140e:	84 81       	ldd	r24, Z+4	; 0x04
    1410:	8b 7f       	andi	r24, 0xFB	; 251
    1412:	84 83       	std	Z+4, r24	; 0x04
    1414:	08 95       	ret
	case ('3' | 0x80): three_point; break;
    1416:	e0 e2       	ldi	r30, 0x20	; 32
    1418:	f4 e0       	ldi	r31, 0x04	; 4
    141a:	84 81       	ldd	r24, Z+4	; 0x04
    141c:	85 7c       	andi	r24, 0xC5	; 197
    141e:	84 83       	std	Z+4, r24	; 0x04
    1420:	a0 e4       	ldi	r26, 0x40	; 64
    1422:	b4 e0       	ldi	r27, 0x04	; 4
    1424:	14 96       	adiw	r26, 0x04	; 4
    1426:	8c 91       	ld	r24, X
    1428:	14 97       	sbiw	r26, 0x04	; 4
    142a:	8e 7f       	andi	r24, 0xFE	; 254
    142c:	14 96       	adiw	r26, 0x04	; 4
    142e:	8c 93       	st	X, r24
    1430:	84 81       	ldd	r24, Z+4	; 0x04
    1432:	8b 7f       	andi	r24, 0xFB	; 251
    1434:	84 83       	std	Z+4, r24	; 0x04
    1436:	08 95       	ret
	case ('4' | 0x80): four_point; break;
    1438:	e0 e2       	ldi	r30, 0x20	; 32
    143a:	f4 e0       	ldi	r31, 0x04	; 4
    143c:	84 81       	ldd	r24, Z+4	; 0x04
    143e:	8d 7e       	andi	r24, 0xED	; 237
    1440:	84 83       	std	Z+4, r24	; 0x04
    1442:	a0 e4       	ldi	r26, 0x40	; 64
    1444:	b4 e0       	ldi	r27, 0x04	; 4
    1446:	14 96       	adiw	r26, 0x04	; 4
    1448:	8c 91       	ld	r24, X
    144a:	14 97       	sbiw	r26, 0x04	; 4
    144c:	8c 7f       	andi	r24, 0xFC	; 252
    144e:	14 96       	adiw	r26, 0x04	; 4
    1450:	8c 93       	st	X, r24
    1452:	84 81       	ldd	r24, Z+4	; 0x04
    1454:	8b 7f       	andi	r24, 0xFB	; 251
    1456:	84 83       	std	Z+4, r24	; 0x04
    1458:	08 95       	ret
	case ('5' | 0x80): five_point; break;
    145a:	e0 e2       	ldi	r30, 0x20	; 32
    145c:	f4 e0       	ldi	r31, 0x04	; 4
    145e:	84 81       	ldd	r24, Z+4	; 0x04
    1460:	85 7d       	andi	r24, 0xD5	; 213
    1462:	84 83       	std	Z+4, r24	; 0x04
    1464:	a0 e4       	ldi	r26, 0x40	; 64
    1466:	b4 e0       	ldi	r27, 0x04	; 4
    1468:	14 96       	adiw	r26, 0x04	; 4
    146a:	8c 91       	ld	r24, X
    146c:	14 97       	sbiw	r26, 0x04	; 4
    146e:	8c 7f       	andi	r24, 0xFC	; 252
    1470:	14 96       	adiw	r26, 0x04	; 4
    1472:	8c 93       	st	X, r24
    1474:	84 81       	ldd	r24, Z+4	; 0x04
    1476:	8b 7f       	andi	r24, 0xFB	; 251
    1478:	84 83       	std	Z+4, r24	; 0x04
    147a:	08 95       	ret
	case ('6' | 0x80): six_point; break;
    147c:	e0 e2       	ldi	r30, 0x20	; 32
    147e:	f4 e0       	ldi	r31, 0x04	; 4
    1480:	84 81       	ldd	r24, Z+4	; 0x04
    1482:	85 7f       	andi	r24, 0xF5	; 245
    1484:	84 83       	std	Z+4, r24	; 0x04
    1486:	a0 e4       	ldi	r26, 0x40	; 64
    1488:	b4 e0       	ldi	r27, 0x04	; 4
    148a:	14 96       	adiw	r26, 0x04	; 4
    148c:	8c 91       	ld	r24, X
    148e:	14 97       	sbiw	r26, 0x04	; 4
    1490:	88 7f       	andi	r24, 0xF8	; 248
    1492:	14 96       	adiw	r26, 0x04	; 4
    1494:	8c 93       	st	X, r24
    1496:	84 81       	ldd	r24, Z+4	; 0x04
    1498:	8b 7f       	andi	r24, 0xFB	; 251
    149a:	84 83       	std	Z+4, r24	; 0x04
    149c:	08 95       	ret
	case ('7' | 0x80): seven_point; break;
    149e:	e0 e2       	ldi	r30, 0x20	; 32
    14a0:	f4 e0       	ldi	r31, 0x04	; 4
    14a2:	84 81       	ldd	r24, Z+4	; 0x04
    14a4:	8d 7c       	andi	r24, 0xCD	; 205
    14a6:	84 83       	std	Z+4, r24	; 0x04
    14a8:	84 81       	ldd	r24, Z+4	; 0x04
    14aa:	8b 7f       	andi	r24, 0xFB	; 251
    14ac:	84 83       	std	Z+4, r24	; 0x04
    14ae:	08 95       	ret
	case ('8' | 0x80): eight_point; break;
    14b0:	e0 e2       	ldi	r30, 0x20	; 32
    14b2:	f4 e0       	ldi	r31, 0x04	; 4
    14b4:	84 81       	ldd	r24, Z+4	; 0x04
    14b6:	85 7c       	andi	r24, 0xC5	; 197
    14b8:	84 83       	std	Z+4, r24	; 0x04
    14ba:	a0 e4       	ldi	r26, 0x40	; 64
    14bc:	b4 e0       	ldi	r27, 0x04	; 4
    14be:	14 96       	adiw	r26, 0x04	; 4
    14c0:	8c 91       	ld	r24, X
    14c2:	14 97       	sbiw	r26, 0x04	; 4
    14c4:	88 7f       	andi	r24, 0xF8	; 248
    14c6:	14 96       	adiw	r26, 0x04	; 4
    14c8:	8c 93       	st	X, r24
    14ca:	84 81       	ldd	r24, Z+4	; 0x04
    14cc:	8b 7f       	andi	r24, 0xFB	; 251
    14ce:	84 83       	std	Z+4, r24	; 0x04
    14d0:	08 95       	ret
	case ('9' | 0x80): nine_point; break;
    14d2:	e0 e2       	ldi	r30, 0x20	; 32
    14d4:	f4 e0       	ldi	r31, 0x04	; 4
    14d6:	84 81       	ldd	r24, Z+4	; 0x04
    14d8:	8d 7c       	andi	r24, 0xCD	; 205
    14da:	84 83       	std	Z+4, r24	; 0x04
    14dc:	a0 e4       	ldi	r26, 0x40	; 64
    14de:	b4 e0       	ldi	r27, 0x04	; 4
    14e0:	14 96       	adiw	r26, 0x04	; 4
    14e2:	8c 91       	ld	r24, X
    14e4:	14 97       	sbiw	r26, 0x04	; 4
    14e6:	8c 7f       	andi	r24, 0xFC	; 252
    14e8:	14 96       	adiw	r26, 0x04	; 4
    14ea:	8c 93       	st	X, r24
    14ec:	84 81       	ldd	r24, Z+4	; 0x04
    14ee:	8b 7f       	andi	r24, 0xFB	; 251
    14f0:	84 83       	std	Z+4, r24	; 0x04
    14f2:	08 95       	ret
	case ('-' | 0x80): minus_point; break;}}
    14f4:	e0 e4       	ldi	r30, 0x40	; 64
    14f6:	f4 e0       	ldi	r31, 0x04	; 4
    14f8:	84 81       	ldd	r24, Z+4	; 0x04
    14fa:	8e 7f       	andi	r24, 0xFE	; 254
    14fc:	84 83       	std	Z+4, r24	; 0x04
    14fe:	e0 e2       	ldi	r30, 0x20	; 32
    1500:	f4 e0       	ldi	r31, 0x04	; 4
    1502:	84 81       	ldd	r24, Z+4	; 0x04
    1504:	8b 7f       	andi	r24, 0xFB	; 251
    1506:	84 83       	std	Z+4, r24	; 0x04
    1508:	08 95       	ret

0000150a <Seg_definitions>:
	

/*****************************************************************************************/
void Seg_definitions(){ char m=0;
	switch(display_ptr){
    150a:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    150e:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    1512:	e8 30       	cpi	r30, 0x08	; 8
    1514:	f1 05       	cpc	r31, r1
    1516:	e8 f4       	brcc	.+58     	; 0x1552 <Seg_definitions+0x48>
    1518:	ec 5e       	subi	r30, 0xEC	; 236
    151a:	fe 4f       	sbci	r31, 0xFE	; 254
    151c:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__tablejump2__>
		case 0: m = 0x01; break;
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	0d c0       	rjmp	.+26     	; 0x153e <Seg_definitions+0x34>
		case 1: m = 0x02; break;
		case 2: m = 0x04; break;
    1524:	84 e0       	ldi	r24, 0x04	; 4
    1526:	0b c0       	rjmp	.+22     	; 0x153e <Seg_definitions+0x34>
		case 3: m = 0x08; break;
    1528:	88 e0       	ldi	r24, 0x08	; 8
    152a:	09 c0       	rjmp	.+18     	; 0x153e <Seg_definitions+0x34>
		case 4: m = 0x10; break;
    152c:	80 e1       	ldi	r24, 0x10	; 16
    152e:	07 c0       	rjmp	.+14     	; 0x153e <Seg_definitions+0x34>
		case 5: m = 0x20; break;
    1530:	80 e2       	ldi	r24, 0x20	; 32
    1532:	05 c0       	rjmp	.+10     	; 0x153e <Seg_definitions+0x34>
		case 6: m = 0x40; break;
    1534:	80 e4       	ldi	r24, 0x40	; 64
    1536:	03 c0       	rjmp	.+6      	; 0x153e <Seg_definitions+0x34>
		case 7: m = 0x80; break;}
    1538:	80 e8       	ldi	r24, 0x80	; 128
    153a:	01 c0       	rjmp	.+2      	; 0x153e <Seg_definitions+0x34>

/*****************************************************************************************/
void Seg_definitions(){ char m=0;
	switch(display_ptr){
		case 0: m = 0x01; break;
		case 1: m = 0x02; break;
    153c:	82 e0       	ldi	r24, 0x02	; 2
		case 3: m = 0x08; break;
		case 4: m = 0x10; break;
		case 5: m = 0x20; break;
		case 6: m = 0x40; break;
		case 7: m = 0x80; break;}
	if (display_buffer[0] & m) PORTB.OUT &= (~(seg_a));
    153e:	90 91 1a 3c 	lds	r25, 0x3C1A	; 0x803c1a <display_buffer>
    1542:	98 23       	and	r25, r24
    1544:	39 f0       	breq	.+14     	; 0x1554 <Seg_definitions+0x4a>
    1546:	e0 e2       	ldi	r30, 0x20	; 32
    1548:	f4 e0       	ldi	r31, 0x04	; 4
    154a:	94 81       	ldd	r25, Z+4	; 0x04
    154c:	9f 7d       	andi	r25, 0xDF	; 223
    154e:	94 83       	std	Z+4, r25	; 0x04
    1550:	01 c0       	rjmp	.+2      	; 0x1554 <Seg_definitions+0x4a>
	case ('9' | 0x80): nine_point; break;
	case ('-' | 0x80): minus_point; break;}}
	

/*****************************************************************************************/
void Seg_definitions(){ char m=0;
    1552:	80 e0       	ldi	r24, 0x00	; 0
		case 4: m = 0x10; break;
		case 5: m = 0x20; break;
		case 6: m = 0x40; break;
		case 7: m = 0x80; break;}
	if (display_buffer[0] & m) PORTB.OUT &= (~(seg_a));
	if (display_buffer[1] & m) PORTC.OUT &= (~(seg_g));
    1554:	90 91 1b 3c 	lds	r25, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    1558:	98 23       	and	r25, r24
    155a:	29 f0       	breq	.+10     	; 0x1566 <Seg_definitions+0x5c>
    155c:	e0 e4       	ldi	r30, 0x40	; 64
    155e:	f4 e0       	ldi	r31, 0x04	; 4
    1560:	94 81       	ldd	r25, Z+4	; 0x04
    1562:	9e 7f       	andi	r25, 0xFE	; 254
    1564:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[2] & m) PORTB.OUT &= (~(seg_d));
    1566:	90 91 1c 3c 	lds	r25, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    156a:	98 23       	and	r25, r24
    156c:	29 f0       	breq	.+10     	; 0x1578 <Seg_definitions+0x6e>
    156e:	e0 e2       	ldi	r30, 0x20	; 32
    1570:	f4 e0       	ldi	r31, 0x04	; 4
    1572:	94 81       	ldd	r25, Z+4	; 0x04
    1574:	97 7f       	andi	r25, 0xF7	; 247
    1576:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[3] & m) PORTB.OUT &= (~(seg_b));
    1578:	90 91 1d 3c 	lds	r25, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    157c:	98 23       	and	r25, r24
    157e:	29 f0       	breq	.+10     	; 0x158a <Seg_definitions+0x80>
    1580:	e0 e2       	ldi	r30, 0x20	; 32
    1582:	f4 e0       	ldi	r31, 0x04	; 4
    1584:	94 81       	ldd	r25, Z+4	; 0x04
    1586:	9f 7e       	andi	r25, 0xEF	; 239
    1588:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[4] & m) PORTB.OUT &= (~(seg_c));
    158a:	90 91 1e 3c 	lds	r25, 0x3C1E	; 0x803c1e <display_buffer+0x4>
    158e:	98 23       	and	r25, r24
    1590:	29 f0       	breq	.+10     	; 0x159c <Seg_definitions+0x92>
    1592:	e0 e2       	ldi	r30, 0x20	; 32
    1594:	f4 e0       	ldi	r31, 0x04	; 4
    1596:	94 81       	ldd	r25, Z+4	; 0x04
    1598:	9d 7f       	andi	r25, 0xFD	; 253
    159a:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[5] & m) PORTC.OUT &= (~(seg_e));
    159c:	90 91 1f 3c 	lds	r25, 0x3C1F	; 0x803c1f <display_buffer+0x5>
    15a0:	98 23       	and	r25, r24
    15a2:	29 f0       	breq	.+10     	; 0x15ae <Seg_definitions+0xa4>
    15a4:	e0 e4       	ldi	r30, 0x40	; 64
    15a6:	f4 e0       	ldi	r31, 0x04	; 4
    15a8:	94 81       	ldd	r25, Z+4	; 0x04
    15aa:	9b 7f       	andi	r25, 0xFB	; 251
    15ac:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[6] & m) PORTC.OUT &= (~(seg_f));}
    15ae:	90 91 20 3c 	lds	r25, 0x3C20	; 0x803c20 <display_buffer+0x6>
    15b2:	89 23       	and	r24, r25
    15b4:	29 f0       	breq	.+10     	; 0x15c0 <Seg_definitions+0xb6>
    15b6:	e0 e4       	ldi	r30, 0x40	; 64
    15b8:	f4 e0       	ldi	r31, 0x04	; 4
    15ba:	84 81       	ldd	r24, Z+4	; 0x04
    15bc:	8d 7f       	andi	r24, 0xFD	; 253
    15be:	84 83       	std	Z+4, r24	; 0x04
    15c0:	08 95       	ret

000015c2 <Start_TCB0>:



	/*****************************************************************************************************************************/
	void Start_TCB0(int BC){						//Controls the display intensity
	TCB0_CNT = 0;									//Initialise counter
    15c2:	10 92 4a 0a 	sts	0x0A4A, r1	; 0x800a4a <__TEXT_REGION_LENGTH__+0x700a4a>
    15c6:	10 92 4b 0a 	sts	0x0A4B, r1	; 0x800a4b <__TEXT_REGION_LENGTH__+0x700a4b>
	TCB0_CCMP = BC;									//1.75mS for full brightness 0.25ms for low brightness
    15ca:	80 93 4c 0a 	sts	0x0A4C, r24	; 0x800a4c <__TEXT_REGION_LENGTH__+0x700a4c>
    15ce:	90 93 4d 0a 	sts	0x0A4D, r25	; 0x800a4d <__TEXT_REGION_LENGTH__+0x700a4d>
	TCB0_CTRLA = 1;									//Start the clock
    15d2:	81 e0       	ldi	r24, 0x01	; 1
    15d4:	80 93 40 0a 	sts	0x0A40, r24	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
	TCB0_INTCTRL = 1;}								//Interrupt flag on compare match
    15d8:	80 93 45 0a 	sts	0x0A45, r24	; 0x800a45 <__TEXT_REGION_LENGTH__+0x700a45>
    15dc:	08 95       	ret

000015de <Display_driver>:
		
		
	/*****************************************************************************************************************************/
	void Display_driver(void){//busy_flag = 1;
		
		switch(display_ptr){
    15de:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    15e2:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    15e6:	e8 30       	cpi	r30, 0x08	; 8
    15e8:	f1 05       	cpc	r31, r1
    15ea:	98 f5       	brcc	.+102    	; 0x1652 <Display_driver+0x74>
    15ec:	e4 5e       	subi	r30, 0xE4	; 228
    15ee:	fe 4f       	sbci	r31, 0xFE	; 254
    15f0:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__tablejump2__>
			case 0: digit_0; break;
    15f4:	e0 e0       	ldi	r30, 0x00	; 0
    15f6:	f4 e0       	ldi	r31, 0x04	; 4
    15f8:	84 81       	ldd	r24, Z+4	; 0x04
    15fa:	80 68       	ori	r24, 0x80	; 128
    15fc:	84 83       	std	Z+4, r24	; 0x04
    15fe:	29 c0       	rjmp	.+82     	; 0x1652 <Display_driver+0x74>
			case 1: digit_1; break;
    1600:	e0 e0       	ldi	r30, 0x00	; 0
    1602:	f4 e0       	ldi	r31, 0x04	; 4
    1604:	84 81       	ldd	r24, Z+4	; 0x04
    1606:	80 64       	ori	r24, 0x40	; 64
    1608:	84 83       	std	Z+4, r24	; 0x04
    160a:	23 c0       	rjmp	.+70     	; 0x1652 <Display_driver+0x74>
			case 2: digit_2; break;
    160c:	e0 e0       	ldi	r30, 0x00	; 0
    160e:	f4 e0       	ldi	r31, 0x04	; 4
    1610:	84 81       	ldd	r24, Z+4	; 0x04
    1612:	80 62       	ori	r24, 0x20	; 32
    1614:	84 83       	std	Z+4, r24	; 0x04
    1616:	1d c0       	rjmp	.+58     	; 0x1652 <Display_driver+0x74>
			case 3: digit_3; break;
    1618:	e0 e0       	ldi	r30, 0x00	; 0
    161a:	f4 e0       	ldi	r31, 0x04	; 4
    161c:	84 81       	ldd	r24, Z+4	; 0x04
    161e:	80 61       	ori	r24, 0x10	; 16
    1620:	84 83       	std	Z+4, r24	; 0x04
    1622:	17 c0       	rjmp	.+46     	; 0x1652 <Display_driver+0x74>
			case 4: digit_4; break;
    1624:	e0 e2       	ldi	r30, 0x20	; 32
    1626:	f4 e0       	ldi	r31, 0x04	; 4
    1628:	84 81       	ldd	r24, Z+4	; 0x04
    162a:	81 60       	ori	r24, 0x01	; 1
    162c:	84 83       	std	Z+4, r24	; 0x04
    162e:	11 c0       	rjmp	.+34     	; 0x1652 <Display_driver+0x74>
			case 5: digit_5; break;
    1630:	e0 e0       	ldi	r30, 0x00	; 0
    1632:	f4 e0       	ldi	r31, 0x04	; 4
    1634:	84 81       	ldd	r24, Z+4	; 0x04
    1636:	88 60       	ori	r24, 0x08	; 8
    1638:	84 83       	std	Z+4, r24	; 0x04
    163a:	0b c0       	rjmp	.+22     	; 0x1652 <Display_driver+0x74>
			case 6: digit_6; break;
    163c:	e0 e0       	ldi	r30, 0x00	; 0
    163e:	f4 e0       	ldi	r31, 0x04	; 4
    1640:	84 81       	ldd	r24, Z+4	; 0x04
    1642:	84 60       	ori	r24, 0x04	; 4
    1644:	84 83       	std	Z+4, r24	; 0x04
    1646:	05 c0       	rjmp	.+10     	; 0x1652 <Display_driver+0x74>
			case 7: digit_7; break;}
    1648:	e0 e0       	ldi	r30, 0x00	; 0
    164a:	f4 e0       	ldi	r31, 0x04	; 4
    164c:	84 81       	ldd	r24, Z+4	; 0x04
    164e:	82 60       	ori	r24, 0x02	; 2
    1650:	84 83       	std	Z+4, r24	; 0x04
		
		
		switch(mode){
    1652:	80 91 36 3c 	lds	r24, 0x3C36	; 0x803c36 <mode>
    1656:	81 36       	cpi	r24, 0x61	; 97
    1658:	61 f0       	breq	.+24     	; 0x1672 <Display_driver+0x94>
    165a:	20 f4       	brcc	.+8      	; 0x1664 <Display_driver+0x86>
    165c:	81 54       	subi	r24, 0x41	; 65
    165e:	85 30       	cpi	r24, 0x05	; 5
    1660:	28 f0       	brcs	.+10     	; 0x166c <Display_driver+0x8e>
    1662:	1e c1       	rjmp	.+572    	; 0x18a0 <Display_driver+0x2c2>
    1664:	82 36       	cpi	r24, 0x62	; 98
    1666:	09 f4       	brne	.+2      	; 0x166a <Display_driver+0x8c>
    1668:	19 c1       	rjmp	.+562    	; 0x189c <Display_driver+0x2be>
    166a:	1a c1       	rjmp	.+564    	; 0x18a0 <Display_driver+0x2c2>
		case 'A': case'B': case 'C': case 'D': case 'E':
		Char_definition(); break;
    166c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <Char_definition>
    1670:	17 c1       	rjmp	.+558    	; 0x18a0 <Display_driver+0x2c2>
		
		case 'a':
		
		switch (display_ptr){
    1672:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    1676:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    167a:	e8 30       	cpi	r30, 0x08	; 8
    167c:	f1 05       	cpc	r31, r1
    167e:	08 f0       	brcs	.+2      	; 0x1682 <Display_driver+0xa4>
    1680:	0f c1       	rjmp	.+542    	; 0x18a0 <Display_driver+0x2c2>
    1682:	ec 5d       	subi	r30, 0xDC	; 220
    1684:	fe 4f       	sbci	r31, 0xFE	; 254
    1686:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__tablejump2__>
			
			case 0: if(display_buffer[0] & 0x01) one_U; if(display_buffer[0] & 0x02) ONE_U;
    168a:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    168e:	80 ff       	sbrs	r24, 0
    1690:	05 c0       	rjmp	.+10     	; 0x169c <Display_driver+0xbe>
    1692:	e0 e2       	ldi	r30, 0x20	; 32
    1694:	f4 e0       	ldi	r31, 0x04	; 4
    1696:	94 81       	ldd	r25, Z+4	; 0x04
    1698:	9f 7e       	andi	r25, 0xEF	; 239
    169a:	94 83       	std	Z+4, r25	; 0x04
    169c:	81 ff       	sbrs	r24, 1
    169e:	05 c0       	rjmp	.+10     	; 0x16aa <Display_driver+0xcc>
    16a0:	e0 e4       	ldi	r30, 0x40	; 64
    16a2:	f4 e0       	ldi	r31, 0x04	; 4
    16a4:	84 81       	ldd	r24, Z+4	; 0x04
    16a6:	8d 7f       	andi	r24, 0xFD	; 253
    16a8:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x01) one_L; if(display_buffer[1] & 0x02) ONE_L;
    16aa:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    16ae:	80 ff       	sbrs	r24, 0
    16b0:	05 c0       	rjmp	.+10     	; 0x16bc <Display_driver+0xde>
    16b2:	e0 e2       	ldi	r30, 0x20	; 32
    16b4:	f4 e0       	ldi	r31, 0x04	; 4
    16b6:	94 81       	ldd	r25, Z+4	; 0x04
    16b8:	9d 7f       	andi	r25, 0xFD	; 253
    16ba:	94 83       	std	Z+4, r25	; 0x04
    16bc:	81 ff       	sbrs	r24, 1
    16be:	f0 c0       	rjmp	.+480    	; 0x18a0 <Display_driver+0x2c2>
    16c0:	e0 e4       	ldi	r30, 0x40	; 64
    16c2:	f4 e0       	ldi	r31, 0x04	; 4
    16c4:	84 81       	ldd	r24, Z+4	; 0x04
    16c6:	8b 7f       	andi	r24, 0xFB	; 251
    16c8:	84 83       	std	Z+4, r24	; 0x04
    16ca:	ea c0       	rjmp	.+468    	; 0x18a0 <Display_driver+0x2c2>
					 break;
			
			case 1: if(display_buffer[0] & 0x04) one_U;  if(display_buffer[0] & 0x08) ONE_U;
    16cc:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    16d0:	82 ff       	sbrs	r24, 2
    16d2:	05 c0       	rjmp	.+10     	; 0x16de <Display_driver+0x100>
    16d4:	e0 e2       	ldi	r30, 0x20	; 32
    16d6:	f4 e0       	ldi	r31, 0x04	; 4
    16d8:	94 81       	ldd	r25, Z+4	; 0x04
    16da:	9f 7e       	andi	r25, 0xEF	; 239
    16dc:	94 83       	std	Z+4, r25	; 0x04
    16de:	83 ff       	sbrs	r24, 3
    16e0:	05 c0       	rjmp	.+10     	; 0x16ec <Display_driver+0x10e>
    16e2:	e0 e4       	ldi	r30, 0x40	; 64
    16e4:	f4 e0       	ldi	r31, 0x04	; 4
    16e6:	84 81       	ldd	r24, Z+4	; 0x04
    16e8:	8d 7f       	andi	r24, 0xFD	; 253
    16ea:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x04) one_L;  if(display_buffer[1] & 0x08) ONE_L; 
    16ec:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    16f0:	82 ff       	sbrs	r24, 2
    16f2:	05 c0       	rjmp	.+10     	; 0x16fe <Display_driver+0x120>
    16f4:	e0 e2       	ldi	r30, 0x20	; 32
    16f6:	f4 e0       	ldi	r31, 0x04	; 4
    16f8:	94 81       	ldd	r25, Z+4	; 0x04
    16fa:	9d 7f       	andi	r25, 0xFD	; 253
    16fc:	94 83       	std	Z+4, r25	; 0x04
    16fe:	83 ff       	sbrs	r24, 3
    1700:	cf c0       	rjmp	.+414    	; 0x18a0 <Display_driver+0x2c2>
    1702:	e0 e4       	ldi	r30, 0x40	; 64
    1704:	f4 e0       	ldi	r31, 0x04	; 4
    1706:	84 81       	ldd	r24, Z+4	; 0x04
    1708:	8b 7f       	andi	r24, 0xFB	; 251
    170a:	84 83       	std	Z+4, r24	; 0x04
    170c:	c9 c0       	rjmp	.+402    	; 0x18a0 <Display_driver+0x2c2>
					break;
					
			case 2: if(display_buffer[0] & 0x10) one_U; if(display_buffer[0] & 0x20) ONE_U;
    170e:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    1712:	84 ff       	sbrs	r24, 4
    1714:	05 c0       	rjmp	.+10     	; 0x1720 <Display_driver+0x142>
    1716:	e0 e2       	ldi	r30, 0x20	; 32
    1718:	f4 e0       	ldi	r31, 0x04	; 4
    171a:	94 81       	ldd	r25, Z+4	; 0x04
    171c:	9f 7e       	andi	r25, 0xEF	; 239
    171e:	94 83       	std	Z+4, r25	; 0x04
    1720:	85 ff       	sbrs	r24, 5
    1722:	05 c0       	rjmp	.+10     	; 0x172e <Display_driver+0x150>
    1724:	e0 e4       	ldi	r30, 0x40	; 64
    1726:	f4 e0       	ldi	r31, 0x04	; 4
    1728:	84 81       	ldd	r24, Z+4	; 0x04
    172a:	8d 7f       	andi	r24, 0xFD	; 253
    172c:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x10) one_L; if(display_buffer[1] & 0x20) ONE_L;
    172e:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    1732:	84 ff       	sbrs	r24, 4
    1734:	05 c0       	rjmp	.+10     	; 0x1740 <Display_driver+0x162>
    1736:	e0 e2       	ldi	r30, 0x20	; 32
    1738:	f4 e0       	ldi	r31, 0x04	; 4
    173a:	94 81       	ldd	r25, Z+4	; 0x04
    173c:	9d 7f       	andi	r25, 0xFD	; 253
    173e:	94 83       	std	Z+4, r25	; 0x04
    1740:	85 ff       	sbrs	r24, 5
    1742:	ae c0       	rjmp	.+348    	; 0x18a0 <Display_driver+0x2c2>
    1744:	e0 e4       	ldi	r30, 0x40	; 64
    1746:	f4 e0       	ldi	r31, 0x04	; 4
    1748:	84 81       	ldd	r24, Z+4	; 0x04
    174a:	8b 7f       	andi	r24, 0xFB	; 251
    174c:	84 83       	std	Z+4, r24	; 0x04
    174e:	a8 c0       	rjmp	.+336    	; 0x18a0 <Display_driver+0x2c2>
					break;
					
			case 3: if(display_buffer[0] & 0x40) one_U;  if(display_buffer[0] & 0x80) ONE_U;
    1750:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    1754:	86 ff       	sbrs	r24, 6
    1756:	05 c0       	rjmp	.+10     	; 0x1762 <Display_driver+0x184>
    1758:	e0 e2       	ldi	r30, 0x20	; 32
    175a:	f4 e0       	ldi	r31, 0x04	; 4
    175c:	94 81       	ldd	r25, Z+4	; 0x04
    175e:	9f 7e       	andi	r25, 0xEF	; 239
    1760:	94 83       	std	Z+4, r25	; 0x04
    1762:	88 23       	and	r24, r24
    1764:	2c f4       	brge	.+10     	; 0x1770 <Display_driver+0x192>
    1766:	e0 e4       	ldi	r30, 0x40	; 64
    1768:	f4 e0       	ldi	r31, 0x04	; 4
    176a:	84 81       	ldd	r24, Z+4	; 0x04
    176c:	8d 7f       	andi	r24, 0xFD	; 253
    176e:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x40) one_L;  if(display_buffer[1] & 0x80) ONE_L;
    1770:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    1774:	86 ff       	sbrs	r24, 6
    1776:	05 c0       	rjmp	.+10     	; 0x1782 <Display_driver+0x1a4>
    1778:	e0 e2       	ldi	r30, 0x20	; 32
    177a:	f4 e0       	ldi	r31, 0x04	; 4
    177c:	94 81       	ldd	r25, Z+4	; 0x04
    177e:	9d 7f       	andi	r25, 0xFD	; 253
    1780:	94 83       	std	Z+4, r25	; 0x04
    1782:	88 23       	and	r24, r24
    1784:	0c f0       	brlt	.+2      	; 0x1788 <Display_driver+0x1aa>
    1786:	8c c0       	rjmp	.+280    	; 0x18a0 <Display_driver+0x2c2>
    1788:	e0 e4       	ldi	r30, 0x40	; 64
    178a:	f4 e0       	ldi	r31, 0x04	; 4
    178c:	84 81       	ldd	r24, Z+4	; 0x04
    178e:	8b 7f       	andi	r24, 0xFB	; 251
    1790:	84 83       	std	Z+4, r24	; 0x04
    1792:	86 c0       	rjmp	.+268    	; 0x18a0 <Display_driver+0x2c2>
					break;
					
					
			case 4: if(display_buffer[2] & 0x01) one_U; if(display_buffer[2] & 0x02) ONE_U;
    1794:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    1798:	80 ff       	sbrs	r24, 0
    179a:	05 c0       	rjmp	.+10     	; 0x17a6 <Display_driver+0x1c8>
    179c:	e0 e2       	ldi	r30, 0x20	; 32
    179e:	f4 e0       	ldi	r31, 0x04	; 4
    17a0:	94 81       	ldd	r25, Z+4	; 0x04
    17a2:	9f 7e       	andi	r25, 0xEF	; 239
    17a4:	94 83       	std	Z+4, r25	; 0x04
    17a6:	81 ff       	sbrs	r24, 1
    17a8:	05 c0       	rjmp	.+10     	; 0x17b4 <Display_driver+0x1d6>
    17aa:	e0 e4       	ldi	r30, 0x40	; 64
    17ac:	f4 e0       	ldi	r31, 0x04	; 4
    17ae:	84 81       	ldd	r24, Z+4	; 0x04
    17b0:	8d 7f       	andi	r24, 0xFD	; 253
    17b2:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x01) one_L; if(display_buffer[3] & 0x02) ONE_L;
    17b4:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    17b8:	80 ff       	sbrs	r24, 0
    17ba:	05 c0       	rjmp	.+10     	; 0x17c6 <Display_driver+0x1e8>
    17bc:	e0 e2       	ldi	r30, 0x20	; 32
    17be:	f4 e0       	ldi	r31, 0x04	; 4
    17c0:	94 81       	ldd	r25, Z+4	; 0x04
    17c2:	9d 7f       	andi	r25, 0xFD	; 253
    17c4:	94 83       	std	Z+4, r25	; 0x04
    17c6:	81 ff       	sbrs	r24, 1
    17c8:	6b c0       	rjmp	.+214    	; 0x18a0 <Display_driver+0x2c2>
    17ca:	e0 e4       	ldi	r30, 0x40	; 64
    17cc:	f4 e0       	ldi	r31, 0x04	; 4
    17ce:	84 81       	ldd	r24, Z+4	; 0x04
    17d0:	8b 7f       	andi	r24, 0xFB	; 251
    17d2:	84 83       	std	Z+4, r24	; 0x04
    17d4:	65 c0       	rjmp	.+202    	; 0x18a0 <Display_driver+0x2c2>
					break;
			
			case 5: if(display_buffer[2] & 0x04) one_U;  if(display_buffer[2] & 0x08) ONE_U;
    17d6:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    17da:	82 ff       	sbrs	r24, 2
    17dc:	05 c0       	rjmp	.+10     	; 0x17e8 <Display_driver+0x20a>
    17de:	e0 e2       	ldi	r30, 0x20	; 32
    17e0:	f4 e0       	ldi	r31, 0x04	; 4
    17e2:	94 81       	ldd	r25, Z+4	; 0x04
    17e4:	9f 7e       	andi	r25, 0xEF	; 239
    17e6:	94 83       	std	Z+4, r25	; 0x04
    17e8:	83 ff       	sbrs	r24, 3
    17ea:	05 c0       	rjmp	.+10     	; 0x17f6 <Display_driver+0x218>
    17ec:	e0 e4       	ldi	r30, 0x40	; 64
    17ee:	f4 e0       	ldi	r31, 0x04	; 4
    17f0:	84 81       	ldd	r24, Z+4	; 0x04
    17f2:	8d 7f       	andi	r24, 0xFD	; 253
    17f4:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x04) one_L;  if(display_buffer[3] & 0x08) ONE_L;
    17f6:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    17fa:	82 ff       	sbrs	r24, 2
    17fc:	05 c0       	rjmp	.+10     	; 0x1808 <Display_driver+0x22a>
    17fe:	e0 e2       	ldi	r30, 0x20	; 32
    1800:	f4 e0       	ldi	r31, 0x04	; 4
    1802:	94 81       	ldd	r25, Z+4	; 0x04
    1804:	9d 7f       	andi	r25, 0xFD	; 253
    1806:	94 83       	std	Z+4, r25	; 0x04
    1808:	83 ff       	sbrs	r24, 3
    180a:	4a c0       	rjmp	.+148    	; 0x18a0 <Display_driver+0x2c2>
    180c:	e0 e4       	ldi	r30, 0x40	; 64
    180e:	f4 e0       	ldi	r31, 0x04	; 4
    1810:	84 81       	ldd	r24, Z+4	; 0x04
    1812:	8b 7f       	andi	r24, 0xFB	; 251
    1814:	84 83       	std	Z+4, r24	; 0x04
    1816:	44 c0       	rjmp	.+136    	; 0x18a0 <Display_driver+0x2c2>
					break;
			
			case 6: if(display_buffer[2] & 0x10) one_U; if(display_buffer[2] & 0x20) ONE_U;
    1818:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    181c:	84 ff       	sbrs	r24, 4
    181e:	05 c0       	rjmp	.+10     	; 0x182a <Display_driver+0x24c>
    1820:	e0 e2       	ldi	r30, 0x20	; 32
    1822:	f4 e0       	ldi	r31, 0x04	; 4
    1824:	94 81       	ldd	r25, Z+4	; 0x04
    1826:	9f 7e       	andi	r25, 0xEF	; 239
    1828:	94 83       	std	Z+4, r25	; 0x04
    182a:	85 ff       	sbrs	r24, 5
    182c:	05 c0       	rjmp	.+10     	; 0x1838 <Display_driver+0x25a>
    182e:	e0 e4       	ldi	r30, 0x40	; 64
    1830:	f4 e0       	ldi	r31, 0x04	; 4
    1832:	84 81       	ldd	r24, Z+4	; 0x04
    1834:	8d 7f       	andi	r24, 0xFD	; 253
    1836:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x10) one_L; if(display_buffer[3] & 0x20) ONE_L;
    1838:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    183c:	84 ff       	sbrs	r24, 4
    183e:	05 c0       	rjmp	.+10     	; 0x184a <Display_driver+0x26c>
    1840:	e0 e2       	ldi	r30, 0x20	; 32
    1842:	f4 e0       	ldi	r31, 0x04	; 4
    1844:	94 81       	ldd	r25, Z+4	; 0x04
    1846:	9d 7f       	andi	r25, 0xFD	; 253
    1848:	94 83       	std	Z+4, r25	; 0x04
    184a:	85 ff       	sbrs	r24, 5
    184c:	29 c0       	rjmp	.+82     	; 0x18a0 <Display_driver+0x2c2>
    184e:	e0 e4       	ldi	r30, 0x40	; 64
    1850:	f4 e0       	ldi	r31, 0x04	; 4
    1852:	84 81       	ldd	r24, Z+4	; 0x04
    1854:	8b 7f       	andi	r24, 0xFB	; 251
    1856:	84 83       	std	Z+4, r24	; 0x04
    1858:	23 c0       	rjmp	.+70     	; 0x18a0 <Display_driver+0x2c2>
					break;
			
			case 7: if(display_buffer[2] & 0x40) one_U;  if(display_buffer[2] & 0x80) ONE_U;
    185a:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    185e:	86 ff       	sbrs	r24, 6
    1860:	05 c0       	rjmp	.+10     	; 0x186c <Display_driver+0x28e>
    1862:	e0 e2       	ldi	r30, 0x20	; 32
    1864:	f4 e0       	ldi	r31, 0x04	; 4
    1866:	94 81       	ldd	r25, Z+4	; 0x04
    1868:	9f 7e       	andi	r25, 0xEF	; 239
    186a:	94 83       	std	Z+4, r25	; 0x04
    186c:	88 23       	and	r24, r24
    186e:	2c f4       	brge	.+10     	; 0x187a <Display_driver+0x29c>
    1870:	e0 e4       	ldi	r30, 0x40	; 64
    1872:	f4 e0       	ldi	r31, 0x04	; 4
    1874:	84 81       	ldd	r24, Z+4	; 0x04
    1876:	8d 7f       	andi	r24, 0xFD	; 253
    1878:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x40) one_L;  if(display_buffer[3] & 0x80) ONE_L;
    187a:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    187e:	86 ff       	sbrs	r24, 6
    1880:	05 c0       	rjmp	.+10     	; 0x188c <Display_driver+0x2ae>
    1882:	e0 e2       	ldi	r30, 0x20	; 32
    1884:	f4 e0       	ldi	r31, 0x04	; 4
    1886:	94 81       	ldd	r25, Z+4	; 0x04
    1888:	9d 7f       	andi	r25, 0xFD	; 253
    188a:	94 83       	std	Z+4, r25	; 0x04
    188c:	88 23       	and	r24, r24
    188e:	44 f4       	brge	.+16     	; 0x18a0 <Display_driver+0x2c2>
    1890:	e0 e4       	ldi	r30, 0x40	; 64
    1892:	f4 e0       	ldi	r31, 0x04	; 4
    1894:	84 81       	ldd	r24, Z+4	; 0x04
    1896:	8b 7f       	andi	r24, 0xFB	; 251
    1898:	84 83       	std	Z+4, r24	; 0x04
    189a:	02 c0       	rjmp	.+4      	; 0x18a0 <Display_driver+0x2c2>
					break;
					}break;
		
		case 'b': Seg_definitions(); break;									//I2C_Tx_any_segment(
    189c:	0e 94 85 0a 	call	0x150a	; 0x150a <Seg_definitions>
		}
		Start_TCB0(brightness_control);//busy_flag = 0;
    18a0:	80 91 17 3c 	lds	r24, 0x3C17	; 0x803c17 <brightness_control>
    18a4:	90 91 18 3c 	lds	r25, 0x3C18	; 0x803c18 <brightness_control+0x1>
    18a8:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <Start_TCB0>
    18ac:	08 95       	ret

000018ae <__vector_10>:




/*****************************************************************************************************************************/
	ISR (TCA0_CMP0_vect){										//ISR which responds to clock ticks
    18ae:	1f 92       	push	r1
    18b0:	0f 92       	push	r0
    18b2:	0f b6       	in	r0, 0x3f	; 63
    18b4:	0f 92       	push	r0
    18b6:	11 24       	eor	r1, r1
    18b8:	2f 93       	push	r18
    18ba:	3f 93       	push	r19
    18bc:	4f 93       	push	r20
    18be:	5f 93       	push	r21
    18c0:	6f 93       	push	r22
    18c2:	7f 93       	push	r23
    18c4:	8f 93       	push	r24
    18c6:	9f 93       	push	r25
    18c8:	af 93       	push	r26
    18ca:	bf 93       	push	r27
    18cc:	ef 93       	push	r30
    18ce:	ff 93       	push	r31
	TCA0_SINGLE_INTFLAGS |= TCA_SINGLE_CMP0EN_bm;				//Clear the interrupt flag
    18d0:	eb e0       	ldi	r30, 0x0B	; 11
    18d2:	fa e0       	ldi	r31, 0x0A	; 10
    18d4:	80 81       	ld	r24, Z
    18d6:	80 61       	ori	r24, 0x10	; 16
    18d8:	80 83       	st	Z, r24
	if(display_ptr <= 7)										//Drive the 8 display digits
    18da:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    18de:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    18e2:	08 97       	sbiw	r24, 0x08	; 8
    18e4:	1c f5       	brge	.+70     	; 0x192c <__vector_10+0x7e>
	{Display_driver();
    18e6:	0e 94 ef 0a 	call	0x15de	; 0x15de <Display_driver>
	if(display_ptr < 7){inc_display_clock;}						//Setup 2mS clock tick for first 7 digits
    18ea:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    18ee:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    18f2:	07 97       	sbiw	r24, 0x07	; 7
    18f4:	4c f4       	brge	.+18     	; 0x1908 <__vector_10+0x5a>
    18f6:	e8 e2       	ldi	r30, 0x28	; 40
    18f8:	fa e0       	ldi	r31, 0x0A	; 10
    18fa:	80 81       	ld	r24, Z
    18fc:	91 81       	ldd	r25, Z+1	; 0x01
    18fe:	80 53       	subi	r24, 0x30	; 48
    1900:	98 4f       	sbci	r25, 0xF8	; 248
    1902:	80 83       	st	Z, r24
    1904:	91 83       	std	Z+1, r25	; 0x01
    1906:	08 c0       	rjmp	.+16     	; 0x1918 <__vector_10+0x6a>
	else TCA0_SINGLE_CMP0 += 1800;								//setup 0.9mS clock tick for last digit
    1908:	e8 e2       	ldi	r30, 0x28	; 40
    190a:	fa e0       	ldi	r31, 0x0A	; 10
    190c:	80 81       	ld	r24, Z
    190e:	91 81       	ldd	r25, Z+1	; 0x01
    1910:	88 5f       	subi	r24, 0xF8	; 248
    1912:	98 4f       	sbci	r25, 0xF8	; 248
    1914:	80 83       	st	Z, r24
    1916:	91 83       	std	Z+1, r25	; 0x01
	display_ptr += 1;
    1918:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    191c:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	80 93 29 3c 	sts	0x3C29, r24	; 0x803c29 <display_ptr>
    1926:	90 93 2a 3c 	sts	0x3C2A, r25	; 0x803c2a <display_ptr+0x1>
	return;}
    192a:	32 c0       	rjmp	.+100    	; 0x1990 <__vector_10+0xe2>
			
	display_ptr += 1;
    192c:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    1930:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    1934:	01 96       	adiw	r24, 0x01	; 1
    1936:	80 93 29 3c 	sts	0x3C29, r24	; 0x803c29 <display_ptr>
    193a:	90 93 2a 3c 	sts	0x3C2A, r25	; 0x803c2a <display_ptr+0x1>
			
	cmp0_bkp = TCA0_SINGLE_CMP0 + 2200;							//Save 1.1mS clock tick for first digit
    193e:	80 91 28 0a 	lds	r24, 0x0A28	; 0x800a28 <__TEXT_REGION_LENGTH__+0x700a28>
    1942:	90 91 29 0a 	lds	r25, 0x0A29	; 0x800a29 <__TEXT_REGION_LENGTH__+0x700a29>
    1946:	88 56       	subi	r24, 0x68	; 104
    1948:	97 4f       	sbci	r25, 0xF7	; 247
    194a:	80 93 2c 3c 	sts	0x3C2C, r24	; 0x803c2c <cmp0_bkp>
    194e:	90 93 2d 3c 	sts	0x3C2D, r25	; 0x803c2d <cmp0_bkp+0x1>
	if (!(busy_flag))
    1952:	80 91 00 3c 	lds	r24, 0x3C00	; 0x803c00 <_edata>
    1956:	81 11       	cpse	r24, r1
    1958:	0f c0       	rjmp	.+30     	; 0x1978 <__vector_10+0xca>
	{inc_comms_clock;											//only poll UNO if no transactions are ongoing
    195a:	e8 e2       	ldi	r30, 0x28	; 40
    195c:	fa e0       	ldi	r31, 0x0A	; 10
    195e:	80 81       	ld	r24, Z
    1960:	91 81       	ldd	r25, Z+1	; 0x01
    1962:	88 53       	subi	r24, 0x38	; 56
    1964:	9f 4f       	sbci	r25, 0xFF	; 255
    1966:	80 83       	st	Z, r24
    1968:	91 83       	std	Z+1, r25	; 0x01
	PORTC.DIR |= PIN3_bm;										//initiate start pulse
    196a:	e0 e4       	ldi	r30, 0x40	; 64
    196c:	f4 e0       	ldi	r31, 0x04	; 4
    196e:	80 81       	ld	r24, Z
    1970:	88 60       	ori	r24, 0x08	; 8
    1972:	80 83       	st	Z, r24
	comms_transaction();}										//Poll the UNO
    1974:	0e 94 20 02 	call	0x440	; 0x440 <comms_transaction>
	TCA0_SINGLE_CMP0 = cmp0_bkp;								//Reinstate the 1.1ms clock tick
    1978:	80 91 2c 3c 	lds	r24, 0x3C2C	; 0x803c2c <cmp0_bkp>
    197c:	90 91 2d 3c 	lds	r25, 0x3C2D	; 0x803c2d <cmp0_bkp+0x1>
    1980:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x700a28>
    1984:	90 93 29 0a 	sts	0x0A29, r25	; 0x800a29 <__TEXT_REGION_LENGTH__+0x700a29>
	display_ptr = 0;}											//Set display_pointer to the first digit
    1988:	10 92 29 3c 	sts	0x3C29, r1	; 0x803c29 <display_ptr>
    198c:	10 92 2a 3c 	sts	0x3C2A, r1	; 0x803c2a <display_ptr+0x1>
    1990:	ff 91       	pop	r31
    1992:	ef 91       	pop	r30
    1994:	bf 91       	pop	r27
    1996:	af 91       	pop	r26
    1998:	9f 91       	pop	r25
    199a:	8f 91       	pop	r24
    199c:	7f 91       	pop	r23
    199e:	6f 91       	pop	r22
    19a0:	5f 91       	pop	r21
    19a2:	4f 91       	pop	r20
    19a4:	3f 91       	pop	r19
    19a6:	2f 91       	pop	r18
    19a8:	0f 90       	pop	r0
    19aa:	0f be       	out	0x3f, r0	; 63
    19ac:	0f 90       	pop	r0
    19ae:	1f 90       	pop	r1
    19b0:	18 95       	reti

000019b2 <__vector_13>:
	TCB0_CCMP = BC;									//1.75mS for full brightness 0.25ms for low brightness
	TCB0_CTRLA = 1;									//Start the clock
	TCB0_INTCTRL = 1;}								//Interrupt flag on compare match

		
	ISR (TCB0_INT_vect){							//Clear display
    19b2:	1f 92       	push	r1
    19b4:	0f 92       	push	r0
    19b6:	0f b6       	in	r0, 0x3f	; 63
    19b8:	0f 92       	push	r0
    19ba:	11 24       	eor	r1, r1
    19bc:	8f 93       	push	r24
    19be:	ef 93       	push	r30
    19c0:	ff 93       	push	r31
	TCB0_INTFLAGS = 1;								//Clear interrupt flag
    19c2:	81 e0       	ldi	r24, 0x01	; 1
    19c4:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <__TEXT_REGION_LENGTH__+0x700a46>
	TCB0_CTRLA = 0;									//Stop the clock	
    19c8:	10 92 40 0a 	sts	0x0A40, r1	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
	clear_digits; clear_display;}	
    19cc:	e0 e0       	ldi	r30, 0x00	; 0
    19ce:	f4 e0       	ldi	r31, 0x04	; 4
    19d0:	84 81       	ldd	r24, Z+4	; 0x04
    19d2:	81 70       	andi	r24, 0x01	; 1
    19d4:	84 83       	std	Z+4, r24	; 0x04
    19d6:	e0 e2       	ldi	r30, 0x20	; 32
    19d8:	f4 e0       	ldi	r31, 0x04	; 4
    19da:	84 81       	ldd	r24, Z+4	; 0x04
    19dc:	8e 7f       	andi	r24, 0xFE	; 254
    19de:	84 83       	std	Z+4, r24	; 0x04
    19e0:	84 81       	ldd	r24, Z+4	; 0x04
    19e2:	8e 63       	ori	r24, 0x3E	; 62
    19e4:	84 83       	std	Z+4, r24	; 0x04
    19e6:	e0 e4       	ldi	r30, 0x40	; 64
    19e8:	f4 e0       	ldi	r31, 0x04	; 4
    19ea:	84 81       	ldd	r24, Z+4	; 0x04
    19ec:	87 60       	ori	r24, 0x07	; 7
    19ee:	84 83       	std	Z+4, r24	; 0x04
    19f0:	ff 91       	pop	r31
    19f2:	ef 91       	pop	r30
    19f4:	8f 91       	pop	r24
    19f6:	0f 90       	pop	r0
    19f8:	0f be       	out	0x3f, r0	; 63
    19fa:	0f 90       	pop	r0
    19fc:	1f 90       	pop	r1
    19fe:	18 95       	reti

00001a00 <__subsf3>:
    1a00:	50 58       	subi	r21, 0x80	; 128

00001a02 <__addsf3>:
    1a02:	bb 27       	eor	r27, r27
    1a04:	aa 27       	eor	r26, r26
    1a06:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <__addsf3x>
    1a0a:	0c 94 92 0e 	jmp	0x1d24	; 0x1d24 <__fp_round>
    1a0e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fp_pscA>
    1a12:	38 f0       	brcs	.+14     	; 0x1a22 <__addsf3+0x20>
    1a14:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscB>
    1a18:	20 f0       	brcs	.+8      	; 0x1a22 <__addsf3+0x20>
    1a1a:	39 f4       	brne	.+14     	; 0x1a2a <__addsf3+0x28>
    1a1c:	9f 3f       	cpi	r25, 0xFF	; 255
    1a1e:	19 f4       	brne	.+6      	; 0x1a26 <__addsf3+0x24>
    1a20:	26 f4       	brtc	.+8      	; 0x1a2a <__addsf3+0x28>
    1a22:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_nan>
    1a26:	0e f4       	brtc	.+2      	; 0x1a2a <__addsf3+0x28>
    1a28:	e0 95       	com	r30
    1a2a:	e7 fb       	bst	r30, 7
    1a2c:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>

00001a30 <__addsf3x>:
    1a30:	e9 2f       	mov	r30, r25
    1a32:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__fp_split3>
    1a36:	58 f3       	brcs	.-42     	; 0x1a0e <__addsf3+0xc>
    1a38:	ba 17       	cp	r27, r26
    1a3a:	62 07       	cpc	r22, r18
    1a3c:	73 07       	cpc	r23, r19
    1a3e:	84 07       	cpc	r24, r20
    1a40:	95 07       	cpc	r25, r21
    1a42:	20 f0       	brcs	.+8      	; 0x1a4c <__addsf3x+0x1c>
    1a44:	79 f4       	brne	.+30     	; 0x1a64 <__addsf3x+0x34>
    1a46:	a6 f5       	brtc	.+104    	; 0x1ab0 <__addsf3x+0x80>
    1a48:	0c 94 c5 0e 	jmp	0x1d8a	; 0x1d8a <__fp_zero>
    1a4c:	0e f4       	brtc	.+2      	; 0x1a50 <__addsf3x+0x20>
    1a4e:	e0 95       	com	r30
    1a50:	0b 2e       	mov	r0, r27
    1a52:	ba 2f       	mov	r27, r26
    1a54:	a0 2d       	mov	r26, r0
    1a56:	0b 01       	movw	r0, r22
    1a58:	b9 01       	movw	r22, r18
    1a5a:	90 01       	movw	r18, r0
    1a5c:	0c 01       	movw	r0, r24
    1a5e:	ca 01       	movw	r24, r20
    1a60:	a0 01       	movw	r20, r0
    1a62:	11 24       	eor	r1, r1
    1a64:	ff 27       	eor	r31, r31
    1a66:	59 1b       	sub	r21, r25
    1a68:	99 f0       	breq	.+38     	; 0x1a90 <__addsf3x+0x60>
    1a6a:	59 3f       	cpi	r21, 0xF9	; 249
    1a6c:	50 f4       	brcc	.+20     	; 0x1a82 <__addsf3x+0x52>
    1a6e:	50 3e       	cpi	r21, 0xE0	; 224
    1a70:	68 f1       	brcs	.+90     	; 0x1acc <__addsf3x+0x9c>
    1a72:	1a 16       	cp	r1, r26
    1a74:	f0 40       	sbci	r31, 0x00	; 0
    1a76:	a2 2f       	mov	r26, r18
    1a78:	23 2f       	mov	r18, r19
    1a7a:	34 2f       	mov	r19, r20
    1a7c:	44 27       	eor	r20, r20
    1a7e:	58 5f       	subi	r21, 0xF8	; 248
    1a80:	f3 cf       	rjmp	.-26     	; 0x1a68 <__addsf3x+0x38>
    1a82:	46 95       	lsr	r20
    1a84:	37 95       	ror	r19
    1a86:	27 95       	ror	r18
    1a88:	a7 95       	ror	r26
    1a8a:	f0 40       	sbci	r31, 0x00	; 0
    1a8c:	53 95       	inc	r21
    1a8e:	c9 f7       	brne	.-14     	; 0x1a82 <__addsf3x+0x52>
    1a90:	7e f4       	brtc	.+30     	; 0x1ab0 <__addsf3x+0x80>
    1a92:	1f 16       	cp	r1, r31
    1a94:	ba 0b       	sbc	r27, r26
    1a96:	62 0b       	sbc	r22, r18
    1a98:	73 0b       	sbc	r23, r19
    1a9a:	84 0b       	sbc	r24, r20
    1a9c:	ba f0       	brmi	.+46     	; 0x1acc <__addsf3x+0x9c>
    1a9e:	91 50       	subi	r25, 0x01	; 1
    1aa0:	a1 f0       	breq	.+40     	; 0x1aca <__addsf3x+0x9a>
    1aa2:	ff 0f       	add	r31, r31
    1aa4:	bb 1f       	adc	r27, r27
    1aa6:	66 1f       	adc	r22, r22
    1aa8:	77 1f       	adc	r23, r23
    1aaa:	88 1f       	adc	r24, r24
    1aac:	c2 f7       	brpl	.-16     	; 0x1a9e <__addsf3x+0x6e>
    1aae:	0e c0       	rjmp	.+28     	; 0x1acc <__addsf3x+0x9c>
    1ab0:	ba 0f       	add	r27, r26
    1ab2:	62 1f       	adc	r22, r18
    1ab4:	73 1f       	adc	r23, r19
    1ab6:	84 1f       	adc	r24, r20
    1ab8:	48 f4       	brcc	.+18     	; 0x1acc <__addsf3x+0x9c>
    1aba:	87 95       	ror	r24
    1abc:	77 95       	ror	r23
    1abe:	67 95       	ror	r22
    1ac0:	b7 95       	ror	r27
    1ac2:	f7 95       	ror	r31
    1ac4:	9e 3f       	cpi	r25, 0xFE	; 254
    1ac6:	08 f0       	brcs	.+2      	; 0x1aca <__addsf3x+0x9a>
    1ac8:	b0 cf       	rjmp	.-160    	; 0x1a2a <__addsf3+0x28>
    1aca:	93 95       	inc	r25
    1acc:	88 0f       	add	r24, r24
    1ace:	08 f0       	brcs	.+2      	; 0x1ad2 <__addsf3x+0xa2>
    1ad0:	99 27       	eor	r25, r25
    1ad2:	ee 0f       	add	r30, r30
    1ad4:	97 95       	ror	r25
    1ad6:	87 95       	ror	r24
    1ad8:	08 95       	ret

00001ada <__cmpsf2>:
    1ada:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__fp_cmp>
    1ade:	08 f4       	brcc	.+2      	; 0x1ae2 <__cmpsf2+0x8>
    1ae0:	81 e0       	ldi	r24, 0x01	; 1
    1ae2:	08 95       	ret

00001ae4 <__divsf3>:
    1ae4:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <__divsf3x>
    1ae8:	0c 94 92 0e 	jmp	0x1d24	; 0x1d24 <__fp_round>
    1aec:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscB>
    1af0:	58 f0       	brcs	.+22     	; 0x1b08 <__divsf3+0x24>
    1af2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fp_pscA>
    1af6:	40 f0       	brcs	.+16     	; 0x1b08 <__divsf3+0x24>
    1af8:	29 f4       	brne	.+10     	; 0x1b04 <__divsf3+0x20>
    1afa:	5f 3f       	cpi	r21, 0xFF	; 255
    1afc:	29 f0       	breq	.+10     	; 0x1b08 <__divsf3+0x24>
    1afe:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>
    1b02:	51 11       	cpse	r21, r1
    1b04:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__fp_szero>
    1b08:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_nan>

00001b0c <__divsf3x>:
    1b0c:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__fp_split3>
    1b10:	68 f3       	brcs	.-38     	; 0x1aec <__divsf3+0x8>

00001b12 <__divsf3_pse>:
    1b12:	99 23       	and	r25, r25
    1b14:	b1 f3       	breq	.-20     	; 0x1b02 <__divsf3+0x1e>
    1b16:	55 23       	and	r21, r21
    1b18:	91 f3       	breq	.-28     	; 0x1afe <__divsf3+0x1a>
    1b1a:	95 1b       	sub	r25, r21
    1b1c:	55 0b       	sbc	r21, r21
    1b1e:	bb 27       	eor	r27, r27
    1b20:	aa 27       	eor	r26, r26
    1b22:	62 17       	cp	r22, r18
    1b24:	73 07       	cpc	r23, r19
    1b26:	84 07       	cpc	r24, r20
    1b28:	38 f0       	brcs	.+14     	; 0x1b38 <__divsf3_pse+0x26>
    1b2a:	9f 5f       	subi	r25, 0xFF	; 255
    1b2c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b2e:	22 0f       	add	r18, r18
    1b30:	33 1f       	adc	r19, r19
    1b32:	44 1f       	adc	r20, r20
    1b34:	aa 1f       	adc	r26, r26
    1b36:	a9 f3       	breq	.-22     	; 0x1b22 <__divsf3_pse+0x10>
    1b38:	35 d0       	rcall	.+106    	; 0x1ba4 <__divsf3_pse+0x92>
    1b3a:	0e 2e       	mov	r0, r30
    1b3c:	3a f0       	brmi	.+14     	; 0x1b4c <__divsf3_pse+0x3a>
    1b3e:	e0 e8       	ldi	r30, 0x80	; 128
    1b40:	32 d0       	rcall	.+100    	; 0x1ba6 <__divsf3_pse+0x94>
    1b42:	91 50       	subi	r25, 0x01	; 1
    1b44:	50 40       	sbci	r21, 0x00	; 0
    1b46:	e6 95       	lsr	r30
    1b48:	00 1c       	adc	r0, r0
    1b4a:	ca f7       	brpl	.-14     	; 0x1b3e <__divsf3_pse+0x2c>
    1b4c:	2b d0       	rcall	.+86     	; 0x1ba4 <__divsf3_pse+0x92>
    1b4e:	fe 2f       	mov	r31, r30
    1b50:	29 d0       	rcall	.+82     	; 0x1ba4 <__divsf3_pse+0x92>
    1b52:	66 0f       	add	r22, r22
    1b54:	77 1f       	adc	r23, r23
    1b56:	88 1f       	adc	r24, r24
    1b58:	bb 1f       	adc	r27, r27
    1b5a:	26 17       	cp	r18, r22
    1b5c:	37 07       	cpc	r19, r23
    1b5e:	48 07       	cpc	r20, r24
    1b60:	ab 07       	cpc	r26, r27
    1b62:	b0 e8       	ldi	r27, 0x80	; 128
    1b64:	09 f0       	breq	.+2      	; 0x1b68 <__divsf3_pse+0x56>
    1b66:	bb 0b       	sbc	r27, r27
    1b68:	80 2d       	mov	r24, r0
    1b6a:	bf 01       	movw	r22, r30
    1b6c:	ff 27       	eor	r31, r31
    1b6e:	93 58       	subi	r25, 0x83	; 131
    1b70:	5f 4f       	sbci	r21, 0xFF	; 255
    1b72:	3a f0       	brmi	.+14     	; 0x1b82 <__divsf3_pse+0x70>
    1b74:	9e 3f       	cpi	r25, 0xFE	; 254
    1b76:	51 05       	cpc	r21, r1
    1b78:	78 f0       	brcs	.+30     	; 0x1b98 <__divsf3_pse+0x86>
    1b7a:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>
    1b7e:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__fp_szero>
    1b82:	5f 3f       	cpi	r21, 0xFF	; 255
    1b84:	e4 f3       	brlt	.-8      	; 0x1b7e <__divsf3_pse+0x6c>
    1b86:	98 3e       	cpi	r25, 0xE8	; 232
    1b88:	d4 f3       	brlt	.-12     	; 0x1b7e <__divsf3_pse+0x6c>
    1b8a:	86 95       	lsr	r24
    1b8c:	77 95       	ror	r23
    1b8e:	67 95       	ror	r22
    1b90:	b7 95       	ror	r27
    1b92:	f7 95       	ror	r31
    1b94:	9f 5f       	subi	r25, 0xFF	; 255
    1b96:	c9 f7       	brne	.-14     	; 0x1b8a <__divsf3_pse+0x78>
    1b98:	88 0f       	add	r24, r24
    1b9a:	91 1d       	adc	r25, r1
    1b9c:	96 95       	lsr	r25
    1b9e:	87 95       	ror	r24
    1ba0:	97 f9       	bld	r25, 7
    1ba2:	08 95       	ret
    1ba4:	e1 e0       	ldi	r30, 0x01	; 1
    1ba6:	66 0f       	add	r22, r22
    1ba8:	77 1f       	adc	r23, r23
    1baa:	88 1f       	adc	r24, r24
    1bac:	bb 1f       	adc	r27, r27
    1bae:	62 17       	cp	r22, r18
    1bb0:	73 07       	cpc	r23, r19
    1bb2:	84 07       	cpc	r24, r20
    1bb4:	ba 07       	cpc	r27, r26
    1bb6:	20 f0       	brcs	.+8      	; 0x1bc0 <__divsf3_pse+0xae>
    1bb8:	62 1b       	sub	r22, r18
    1bba:	73 0b       	sbc	r23, r19
    1bbc:	84 0b       	sbc	r24, r20
    1bbe:	ba 0b       	sbc	r27, r26
    1bc0:	ee 1f       	adc	r30, r30
    1bc2:	88 f7       	brcc	.-30     	; 0x1ba6 <__divsf3_pse+0x94>
    1bc4:	e0 95       	com	r30
    1bc6:	08 95       	ret

00001bc8 <__fixsfsi>:
    1bc8:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__fixunssfsi>
    1bcc:	68 94       	set
    1bce:	b1 11       	cpse	r27, r1
    1bd0:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__fp_szero>
    1bd4:	08 95       	ret

00001bd6 <__fixunssfsi>:
    1bd6:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__fp_splitA>
    1bda:	88 f0       	brcs	.+34     	; 0x1bfe <__fixunssfsi+0x28>
    1bdc:	9f 57       	subi	r25, 0x7F	; 127
    1bde:	98 f0       	brcs	.+38     	; 0x1c06 <__fixunssfsi+0x30>
    1be0:	b9 2f       	mov	r27, r25
    1be2:	99 27       	eor	r25, r25
    1be4:	b7 51       	subi	r27, 0x17	; 23
    1be6:	b0 f0       	brcs	.+44     	; 0x1c14 <__fixunssfsi+0x3e>
    1be8:	e1 f0       	breq	.+56     	; 0x1c22 <__fixunssfsi+0x4c>
    1bea:	66 0f       	add	r22, r22
    1bec:	77 1f       	adc	r23, r23
    1bee:	88 1f       	adc	r24, r24
    1bf0:	99 1f       	adc	r25, r25
    1bf2:	1a f0       	brmi	.+6      	; 0x1bfa <__fixunssfsi+0x24>
    1bf4:	ba 95       	dec	r27
    1bf6:	c9 f7       	brne	.-14     	; 0x1bea <__fixunssfsi+0x14>
    1bf8:	14 c0       	rjmp	.+40     	; 0x1c22 <__fixunssfsi+0x4c>
    1bfa:	b1 30       	cpi	r27, 0x01	; 1
    1bfc:	91 f0       	breq	.+36     	; 0x1c22 <__fixunssfsi+0x4c>
    1bfe:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <__fp_zero>
    1c02:	b1 e0       	ldi	r27, 0x01	; 1
    1c04:	08 95       	ret
    1c06:	0c 94 c5 0e 	jmp	0x1d8a	; 0x1d8a <__fp_zero>
    1c0a:	67 2f       	mov	r22, r23
    1c0c:	78 2f       	mov	r23, r24
    1c0e:	88 27       	eor	r24, r24
    1c10:	b8 5f       	subi	r27, 0xF8	; 248
    1c12:	39 f0       	breq	.+14     	; 0x1c22 <__fixunssfsi+0x4c>
    1c14:	b9 3f       	cpi	r27, 0xF9	; 249
    1c16:	cc f3       	brlt	.-14     	; 0x1c0a <__fixunssfsi+0x34>
    1c18:	86 95       	lsr	r24
    1c1a:	77 95       	ror	r23
    1c1c:	67 95       	ror	r22
    1c1e:	b3 95       	inc	r27
    1c20:	d9 f7       	brne	.-10     	; 0x1c18 <__fixunssfsi+0x42>
    1c22:	3e f4       	brtc	.+14     	; 0x1c32 <__fixunssfsi+0x5c>
    1c24:	90 95       	com	r25
    1c26:	80 95       	com	r24
    1c28:	70 95       	com	r23
    1c2a:	61 95       	neg	r22
    1c2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c2e:	8f 4f       	sbci	r24, 0xFF	; 255
    1c30:	9f 4f       	sbci	r25, 0xFF	; 255
    1c32:	08 95       	ret

00001c34 <__floatunsisf>:
    1c34:	e8 94       	clt
    1c36:	09 c0       	rjmp	.+18     	; 0x1c4a <__floatsisf+0x12>

00001c38 <__floatsisf>:
    1c38:	97 fb       	bst	r25, 7
    1c3a:	3e f4       	brtc	.+14     	; 0x1c4a <__floatsisf+0x12>
    1c3c:	90 95       	com	r25
    1c3e:	80 95       	com	r24
    1c40:	70 95       	com	r23
    1c42:	61 95       	neg	r22
    1c44:	7f 4f       	sbci	r23, 0xFF	; 255
    1c46:	8f 4f       	sbci	r24, 0xFF	; 255
    1c48:	9f 4f       	sbci	r25, 0xFF	; 255
    1c4a:	99 23       	and	r25, r25
    1c4c:	a9 f0       	breq	.+42     	; 0x1c78 <__floatsisf+0x40>
    1c4e:	f9 2f       	mov	r31, r25
    1c50:	96 e9       	ldi	r25, 0x96	; 150
    1c52:	bb 27       	eor	r27, r27
    1c54:	93 95       	inc	r25
    1c56:	f6 95       	lsr	r31
    1c58:	87 95       	ror	r24
    1c5a:	77 95       	ror	r23
    1c5c:	67 95       	ror	r22
    1c5e:	b7 95       	ror	r27
    1c60:	f1 11       	cpse	r31, r1
    1c62:	f8 cf       	rjmp	.-16     	; 0x1c54 <__floatsisf+0x1c>
    1c64:	fa f4       	brpl	.+62     	; 0x1ca4 <__floatsisf+0x6c>
    1c66:	bb 0f       	add	r27, r27
    1c68:	11 f4       	brne	.+4      	; 0x1c6e <__floatsisf+0x36>
    1c6a:	60 ff       	sbrs	r22, 0
    1c6c:	1b c0       	rjmp	.+54     	; 0x1ca4 <__floatsisf+0x6c>
    1c6e:	6f 5f       	subi	r22, 0xFF	; 255
    1c70:	7f 4f       	sbci	r23, 0xFF	; 255
    1c72:	8f 4f       	sbci	r24, 0xFF	; 255
    1c74:	9f 4f       	sbci	r25, 0xFF	; 255
    1c76:	16 c0       	rjmp	.+44     	; 0x1ca4 <__floatsisf+0x6c>
    1c78:	88 23       	and	r24, r24
    1c7a:	11 f0       	breq	.+4      	; 0x1c80 <__floatsisf+0x48>
    1c7c:	96 e9       	ldi	r25, 0x96	; 150
    1c7e:	11 c0       	rjmp	.+34     	; 0x1ca2 <__floatsisf+0x6a>
    1c80:	77 23       	and	r23, r23
    1c82:	21 f0       	breq	.+8      	; 0x1c8c <__floatsisf+0x54>
    1c84:	9e e8       	ldi	r25, 0x8E	; 142
    1c86:	87 2f       	mov	r24, r23
    1c88:	76 2f       	mov	r23, r22
    1c8a:	05 c0       	rjmp	.+10     	; 0x1c96 <__floatsisf+0x5e>
    1c8c:	66 23       	and	r22, r22
    1c8e:	71 f0       	breq	.+28     	; 0x1cac <__floatsisf+0x74>
    1c90:	96 e8       	ldi	r25, 0x86	; 134
    1c92:	86 2f       	mov	r24, r22
    1c94:	70 e0       	ldi	r23, 0x00	; 0
    1c96:	60 e0       	ldi	r22, 0x00	; 0
    1c98:	2a f0       	brmi	.+10     	; 0x1ca4 <__floatsisf+0x6c>
    1c9a:	9a 95       	dec	r25
    1c9c:	66 0f       	add	r22, r22
    1c9e:	77 1f       	adc	r23, r23
    1ca0:	88 1f       	adc	r24, r24
    1ca2:	da f7       	brpl	.-10     	; 0x1c9a <__floatsisf+0x62>
    1ca4:	88 0f       	add	r24, r24
    1ca6:	96 95       	lsr	r25
    1ca8:	87 95       	ror	r24
    1caa:	97 f9       	bld	r25, 7
    1cac:	08 95       	ret

00001cae <__fp_cmp>:
    1cae:	99 0f       	add	r25, r25
    1cb0:	00 08       	sbc	r0, r0
    1cb2:	55 0f       	add	r21, r21
    1cb4:	aa 0b       	sbc	r26, r26
    1cb6:	e0 e8       	ldi	r30, 0x80	; 128
    1cb8:	fe ef       	ldi	r31, 0xFE	; 254
    1cba:	16 16       	cp	r1, r22
    1cbc:	17 06       	cpc	r1, r23
    1cbe:	e8 07       	cpc	r30, r24
    1cc0:	f9 07       	cpc	r31, r25
    1cc2:	c0 f0       	brcs	.+48     	; 0x1cf4 <__fp_cmp+0x46>
    1cc4:	12 16       	cp	r1, r18
    1cc6:	13 06       	cpc	r1, r19
    1cc8:	e4 07       	cpc	r30, r20
    1cca:	f5 07       	cpc	r31, r21
    1ccc:	98 f0       	brcs	.+38     	; 0x1cf4 <__fp_cmp+0x46>
    1cce:	62 1b       	sub	r22, r18
    1cd0:	73 0b       	sbc	r23, r19
    1cd2:	84 0b       	sbc	r24, r20
    1cd4:	95 0b       	sbc	r25, r21
    1cd6:	39 f4       	brne	.+14     	; 0x1ce6 <__fp_cmp+0x38>
    1cd8:	0a 26       	eor	r0, r26
    1cda:	61 f0       	breq	.+24     	; 0x1cf4 <__fp_cmp+0x46>
    1cdc:	23 2b       	or	r18, r19
    1cde:	24 2b       	or	r18, r20
    1ce0:	25 2b       	or	r18, r21
    1ce2:	21 f4       	brne	.+8      	; 0x1cec <__fp_cmp+0x3e>
    1ce4:	08 95       	ret
    1ce6:	0a 26       	eor	r0, r26
    1ce8:	09 f4       	brne	.+2      	; 0x1cec <__fp_cmp+0x3e>
    1cea:	a1 40       	sbci	r26, 0x01	; 1
    1cec:	a6 95       	lsr	r26
    1cee:	8f ef       	ldi	r24, 0xFF	; 255
    1cf0:	81 1d       	adc	r24, r1
    1cf2:	81 1d       	adc	r24, r1
    1cf4:	08 95       	ret

00001cf6 <__fp_inf>:
    1cf6:	97 f9       	bld	r25, 7
    1cf8:	9f 67       	ori	r25, 0x7F	; 127
    1cfa:	80 e8       	ldi	r24, 0x80	; 128
    1cfc:	70 e0       	ldi	r23, 0x00	; 0
    1cfe:	60 e0       	ldi	r22, 0x00	; 0
    1d00:	08 95       	ret

00001d02 <__fp_nan>:
    1d02:	9f ef       	ldi	r25, 0xFF	; 255
    1d04:	80 ec       	ldi	r24, 0xC0	; 192
    1d06:	08 95       	ret

00001d08 <__fp_pscA>:
    1d08:	00 24       	eor	r0, r0
    1d0a:	0a 94       	dec	r0
    1d0c:	16 16       	cp	r1, r22
    1d0e:	17 06       	cpc	r1, r23
    1d10:	18 06       	cpc	r1, r24
    1d12:	09 06       	cpc	r0, r25
    1d14:	08 95       	ret

00001d16 <__fp_pscB>:
    1d16:	00 24       	eor	r0, r0
    1d18:	0a 94       	dec	r0
    1d1a:	12 16       	cp	r1, r18
    1d1c:	13 06       	cpc	r1, r19
    1d1e:	14 06       	cpc	r1, r20
    1d20:	05 06       	cpc	r0, r21
    1d22:	08 95       	ret

00001d24 <__fp_round>:
    1d24:	09 2e       	mov	r0, r25
    1d26:	03 94       	inc	r0
    1d28:	00 0c       	add	r0, r0
    1d2a:	11 f4       	brne	.+4      	; 0x1d30 <__fp_round+0xc>
    1d2c:	88 23       	and	r24, r24
    1d2e:	52 f0       	brmi	.+20     	; 0x1d44 <__fp_round+0x20>
    1d30:	bb 0f       	add	r27, r27
    1d32:	40 f4       	brcc	.+16     	; 0x1d44 <__fp_round+0x20>
    1d34:	bf 2b       	or	r27, r31
    1d36:	11 f4       	brne	.+4      	; 0x1d3c <__fp_round+0x18>
    1d38:	60 ff       	sbrs	r22, 0
    1d3a:	04 c0       	rjmp	.+8      	; 0x1d44 <__fp_round+0x20>
    1d3c:	6f 5f       	subi	r22, 0xFF	; 255
    1d3e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d40:	8f 4f       	sbci	r24, 0xFF	; 255
    1d42:	9f 4f       	sbci	r25, 0xFF	; 255
    1d44:	08 95       	ret

00001d46 <__fp_split3>:
    1d46:	57 fd       	sbrc	r21, 7
    1d48:	90 58       	subi	r25, 0x80	; 128
    1d4a:	44 0f       	add	r20, r20
    1d4c:	55 1f       	adc	r21, r21
    1d4e:	59 f0       	breq	.+22     	; 0x1d66 <__fp_splitA+0x10>
    1d50:	5f 3f       	cpi	r21, 0xFF	; 255
    1d52:	71 f0       	breq	.+28     	; 0x1d70 <__fp_splitA+0x1a>
    1d54:	47 95       	ror	r20

00001d56 <__fp_splitA>:
    1d56:	88 0f       	add	r24, r24
    1d58:	97 fb       	bst	r25, 7
    1d5a:	99 1f       	adc	r25, r25
    1d5c:	61 f0       	breq	.+24     	; 0x1d76 <__fp_splitA+0x20>
    1d5e:	9f 3f       	cpi	r25, 0xFF	; 255
    1d60:	79 f0       	breq	.+30     	; 0x1d80 <__fp_splitA+0x2a>
    1d62:	87 95       	ror	r24
    1d64:	08 95       	ret
    1d66:	12 16       	cp	r1, r18
    1d68:	13 06       	cpc	r1, r19
    1d6a:	14 06       	cpc	r1, r20
    1d6c:	55 1f       	adc	r21, r21
    1d6e:	f2 cf       	rjmp	.-28     	; 0x1d54 <__fp_split3+0xe>
    1d70:	46 95       	lsr	r20
    1d72:	f1 df       	rcall	.-30     	; 0x1d56 <__fp_splitA>
    1d74:	08 c0       	rjmp	.+16     	; 0x1d86 <__fp_splitA+0x30>
    1d76:	16 16       	cp	r1, r22
    1d78:	17 06       	cpc	r1, r23
    1d7a:	18 06       	cpc	r1, r24
    1d7c:	99 1f       	adc	r25, r25
    1d7e:	f1 cf       	rjmp	.-30     	; 0x1d62 <__fp_splitA+0xc>
    1d80:	86 95       	lsr	r24
    1d82:	71 05       	cpc	r23, r1
    1d84:	61 05       	cpc	r22, r1
    1d86:	08 94       	sec
    1d88:	08 95       	ret

00001d8a <__fp_zero>:
    1d8a:	e8 94       	clt

00001d8c <__fp_szero>:
    1d8c:	bb 27       	eor	r27, r27
    1d8e:	66 27       	eor	r22, r22
    1d90:	77 27       	eor	r23, r23
    1d92:	cb 01       	movw	r24, r22
    1d94:	97 f9       	bld	r25, 7
    1d96:	08 95       	ret

00001d98 <__gesf2>:
    1d98:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__fp_cmp>
    1d9c:	08 f4       	brcc	.+2      	; 0x1da0 <__gesf2+0x8>
    1d9e:	8f ef       	ldi	r24, 0xFF	; 255
    1da0:	08 95       	ret

00001da2 <__mulsf3>:
    1da2:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <__mulsf3x>
    1da6:	0c 94 92 0e 	jmp	0x1d24	; 0x1d24 <__fp_round>
    1daa:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__fp_pscA>
    1dae:	38 f0       	brcs	.+14     	; 0x1dbe <__mulsf3+0x1c>
    1db0:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__fp_pscB>
    1db4:	20 f0       	brcs	.+8      	; 0x1dbe <__mulsf3+0x1c>
    1db6:	95 23       	and	r25, r21
    1db8:	11 f0       	breq	.+4      	; 0x1dbe <__mulsf3+0x1c>
    1dba:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>
    1dbe:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_nan>
    1dc2:	11 24       	eor	r1, r1
    1dc4:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__fp_szero>

00001dc8 <__mulsf3x>:
    1dc8:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__fp_split3>
    1dcc:	70 f3       	brcs	.-36     	; 0x1daa <__mulsf3+0x8>

00001dce <__mulsf3_pse>:
    1dce:	95 9f       	mul	r25, r21
    1dd0:	c1 f3       	breq	.-16     	; 0x1dc2 <__mulsf3+0x20>
    1dd2:	95 0f       	add	r25, r21
    1dd4:	50 e0       	ldi	r21, 0x00	; 0
    1dd6:	55 1f       	adc	r21, r21
    1dd8:	62 9f       	mul	r22, r18
    1dda:	f0 01       	movw	r30, r0
    1ddc:	72 9f       	mul	r23, r18
    1dde:	bb 27       	eor	r27, r27
    1de0:	f0 0d       	add	r31, r0
    1de2:	b1 1d       	adc	r27, r1
    1de4:	63 9f       	mul	r22, r19
    1de6:	aa 27       	eor	r26, r26
    1de8:	f0 0d       	add	r31, r0
    1dea:	b1 1d       	adc	r27, r1
    1dec:	aa 1f       	adc	r26, r26
    1dee:	64 9f       	mul	r22, r20
    1df0:	66 27       	eor	r22, r22
    1df2:	b0 0d       	add	r27, r0
    1df4:	a1 1d       	adc	r26, r1
    1df6:	66 1f       	adc	r22, r22
    1df8:	82 9f       	mul	r24, r18
    1dfa:	22 27       	eor	r18, r18
    1dfc:	b0 0d       	add	r27, r0
    1dfe:	a1 1d       	adc	r26, r1
    1e00:	62 1f       	adc	r22, r18
    1e02:	73 9f       	mul	r23, r19
    1e04:	b0 0d       	add	r27, r0
    1e06:	a1 1d       	adc	r26, r1
    1e08:	62 1f       	adc	r22, r18
    1e0a:	83 9f       	mul	r24, r19
    1e0c:	a0 0d       	add	r26, r0
    1e0e:	61 1d       	adc	r22, r1
    1e10:	22 1f       	adc	r18, r18
    1e12:	74 9f       	mul	r23, r20
    1e14:	33 27       	eor	r19, r19
    1e16:	a0 0d       	add	r26, r0
    1e18:	61 1d       	adc	r22, r1
    1e1a:	23 1f       	adc	r18, r19
    1e1c:	84 9f       	mul	r24, r20
    1e1e:	60 0d       	add	r22, r0
    1e20:	21 1d       	adc	r18, r1
    1e22:	82 2f       	mov	r24, r18
    1e24:	76 2f       	mov	r23, r22
    1e26:	6a 2f       	mov	r22, r26
    1e28:	11 24       	eor	r1, r1
    1e2a:	9f 57       	subi	r25, 0x7F	; 127
    1e2c:	50 40       	sbci	r21, 0x00	; 0
    1e2e:	9a f0       	brmi	.+38     	; 0x1e56 <__mulsf3_pse+0x88>
    1e30:	f1 f0       	breq	.+60     	; 0x1e6e <__mulsf3_pse+0xa0>
    1e32:	88 23       	and	r24, r24
    1e34:	4a f0       	brmi	.+18     	; 0x1e48 <__mulsf3_pse+0x7a>
    1e36:	ee 0f       	add	r30, r30
    1e38:	ff 1f       	adc	r31, r31
    1e3a:	bb 1f       	adc	r27, r27
    1e3c:	66 1f       	adc	r22, r22
    1e3e:	77 1f       	adc	r23, r23
    1e40:	88 1f       	adc	r24, r24
    1e42:	91 50       	subi	r25, 0x01	; 1
    1e44:	50 40       	sbci	r21, 0x00	; 0
    1e46:	a9 f7       	brne	.-22     	; 0x1e32 <__mulsf3_pse+0x64>
    1e48:	9e 3f       	cpi	r25, 0xFE	; 254
    1e4a:	51 05       	cpc	r21, r1
    1e4c:	80 f0       	brcs	.+32     	; 0x1e6e <__mulsf3_pse+0xa0>
    1e4e:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>
    1e52:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__fp_szero>
    1e56:	5f 3f       	cpi	r21, 0xFF	; 255
    1e58:	e4 f3       	brlt	.-8      	; 0x1e52 <__mulsf3_pse+0x84>
    1e5a:	98 3e       	cpi	r25, 0xE8	; 232
    1e5c:	d4 f3       	brlt	.-12     	; 0x1e52 <__mulsf3_pse+0x84>
    1e5e:	86 95       	lsr	r24
    1e60:	77 95       	ror	r23
    1e62:	67 95       	ror	r22
    1e64:	b7 95       	ror	r27
    1e66:	f7 95       	ror	r31
    1e68:	e7 95       	ror	r30
    1e6a:	9f 5f       	subi	r25, 0xFF	; 255
    1e6c:	c1 f7       	brne	.-16     	; 0x1e5e <__mulsf3_pse+0x90>
    1e6e:	fe 2b       	or	r31, r30
    1e70:	88 0f       	add	r24, r24
    1e72:	91 1d       	adc	r25, r1
    1e74:	96 95       	lsr	r25
    1e76:	87 95       	ror	r24
    1e78:	97 f9       	bld	r25, 7
    1e7a:	08 95       	ret

00001e7c <pow>:
    1e7c:	fa 01       	movw	r30, r20
    1e7e:	ee 0f       	add	r30, r30
    1e80:	ff 1f       	adc	r31, r31
    1e82:	30 96       	adiw	r30, 0x00	; 0
    1e84:	21 05       	cpc	r18, r1
    1e86:	31 05       	cpc	r19, r1
    1e88:	a1 f1       	breq	.+104    	; 0x1ef2 <pow+0x76>
    1e8a:	61 15       	cp	r22, r1
    1e8c:	71 05       	cpc	r23, r1
    1e8e:	61 f4       	brne	.+24     	; 0x1ea8 <pow+0x2c>
    1e90:	80 38       	cpi	r24, 0x80	; 128
    1e92:	bf e3       	ldi	r27, 0x3F	; 63
    1e94:	9b 07       	cpc	r25, r27
    1e96:	49 f1       	breq	.+82     	; 0x1eea <pow+0x6e>
    1e98:	68 94       	set
    1e9a:	90 38       	cpi	r25, 0x80	; 128
    1e9c:	81 05       	cpc	r24, r1
    1e9e:	61 f0       	breq	.+24     	; 0x1eb8 <pow+0x3c>
    1ea0:	80 38       	cpi	r24, 0x80	; 128
    1ea2:	bf ef       	ldi	r27, 0xFF	; 255
    1ea4:	9b 07       	cpc	r25, r27
    1ea6:	41 f0       	breq	.+16     	; 0x1eb8 <pow+0x3c>
    1ea8:	99 23       	and	r25, r25
    1eaa:	4a f5       	brpl	.+82     	; 0x1efe <pow+0x82>
    1eac:	ff 3f       	cpi	r31, 0xFF	; 255
    1eae:	e1 05       	cpc	r30, r1
    1eb0:	31 05       	cpc	r19, r1
    1eb2:	21 05       	cpc	r18, r1
    1eb4:	19 f1       	breq	.+70     	; 0x1efc <pow+0x80>
    1eb6:	e8 94       	clt
    1eb8:	08 94       	sec
    1eba:	e7 95       	ror	r30
    1ebc:	d9 01       	movw	r26, r18
    1ebe:	aa 23       	and	r26, r26
    1ec0:	29 f4       	brne	.+10     	; 0x1ecc <pow+0x50>
    1ec2:	ab 2f       	mov	r26, r27
    1ec4:	be 2f       	mov	r27, r30
    1ec6:	f8 5f       	subi	r31, 0xF8	; 248
    1ec8:	d0 f3       	brcs	.-12     	; 0x1ebe <pow+0x42>
    1eca:	10 c0       	rjmp	.+32     	; 0x1eec <pow+0x70>
    1ecc:	ff 5f       	subi	r31, 0xFF	; 255
    1ece:	70 f4       	brcc	.+28     	; 0x1eec <pow+0x70>
    1ed0:	a6 95       	lsr	r26
    1ed2:	e0 f7       	brcc	.-8      	; 0x1ecc <pow+0x50>
    1ed4:	f7 39       	cpi	r31, 0x97	; 151
    1ed6:	50 f0       	brcs	.+20     	; 0x1eec <pow+0x70>
    1ed8:	19 f0       	breq	.+6      	; 0x1ee0 <pow+0x64>
    1eda:	ff 3a       	cpi	r31, 0xAF	; 175
    1edc:	38 f4       	brcc	.+14     	; 0x1eec <pow+0x70>
    1ede:	9f 77       	andi	r25, 0x7F	; 127
    1ee0:	9f 93       	push	r25
    1ee2:	0d d0       	rcall	.+26     	; 0x1efe <pow+0x82>
    1ee4:	0f 90       	pop	r0
    1ee6:	07 fc       	sbrc	r0, 7
    1ee8:	90 58       	subi	r25, 0x80	; 128
    1eea:	08 95       	ret
    1eec:	46 f0       	brts	.+16     	; 0x1efe <pow+0x82>
    1eee:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_nan>
    1ef2:	60 e0       	ldi	r22, 0x00	; 0
    1ef4:	70 e0       	ldi	r23, 0x00	; 0
    1ef6:	80 e8       	ldi	r24, 0x80	; 128
    1ef8:	9f e3       	ldi	r25, 0x3F	; 63
    1efa:	08 95       	ret
    1efc:	4f e7       	ldi	r20, 0x7F	; 127
    1efe:	9f 77       	andi	r25, 0x7F	; 127
    1f00:	5f 93       	push	r21
    1f02:	4f 93       	push	r20
    1f04:	3f 93       	push	r19
    1f06:	2f 93       	push	r18
    1f08:	0e 94 39 10 	call	0x2072	; 0x2072 <log>
    1f0c:	2f 91       	pop	r18
    1f0e:	3f 91       	pop	r19
    1f10:	4f 91       	pop	r20
    1f12:	5f 91       	pop	r21
    1f14:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <__mulsf3>
    1f18:	0c 94 96 0f 	jmp	0x1f2c	; 0x1f2c <exp>
    1f1c:	29 f4       	brne	.+10     	; 0x1f28 <pow+0xac>
    1f1e:	16 f0       	brts	.+4      	; 0x1f24 <pow+0xa8>
    1f20:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>
    1f24:	0c 94 c5 0e 	jmp	0x1d8a	; 0x1d8a <__fp_zero>
    1f28:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_nan>

00001f2c <exp>:
    1f2c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__fp_splitA>
    1f30:	a8 f3       	brcs	.-22     	; 0x1f1c <pow+0xa0>
    1f32:	96 38       	cpi	r25, 0x86	; 134
    1f34:	a0 f7       	brcc	.-24     	; 0x1f1e <pow+0xa2>
    1f36:	07 f8       	bld	r0, 7
    1f38:	0f 92       	push	r0
    1f3a:	e8 94       	clt
    1f3c:	2b e3       	ldi	r18, 0x3B	; 59
    1f3e:	3a ea       	ldi	r19, 0xAA	; 170
    1f40:	48 eb       	ldi	r20, 0xB8	; 184
    1f42:	5f e7       	ldi	r21, 0x7F	; 127
    1f44:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <__mulsf3_pse>
    1f48:	0f 92       	push	r0
    1f4a:	0f 92       	push	r0
    1f4c:	0f 92       	push	r0
    1f4e:	4d b7       	in	r20, 0x3d	; 61
    1f50:	5e b7       	in	r21, 0x3e	; 62
    1f52:	0f 92       	push	r0
    1f54:	0e 94 81 10 	call	0x2102	; 0x2102 <modf>
    1f58:	e8 e5       	ldi	r30, 0x58	; 88
    1f5a:	f2 e0       	ldi	r31, 0x02	; 2
    1f5c:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__fp_powser>
    1f60:	4f 91       	pop	r20
    1f62:	5f 91       	pop	r21
    1f64:	ef 91       	pop	r30
    1f66:	ff 91       	pop	r31
    1f68:	e5 95       	asr	r30
    1f6a:	ee 1f       	adc	r30, r30
    1f6c:	ff 1f       	adc	r31, r31
    1f6e:	49 f0       	breq	.+18     	; 0x1f82 <exp+0x56>
    1f70:	fe 57       	subi	r31, 0x7E	; 126
    1f72:	e0 68       	ori	r30, 0x80	; 128
    1f74:	44 27       	eor	r20, r20
    1f76:	ee 0f       	add	r30, r30
    1f78:	44 1f       	adc	r20, r20
    1f7a:	fa 95       	dec	r31
    1f7c:	e1 f7       	brne	.-8      	; 0x1f76 <exp+0x4a>
    1f7e:	41 95       	neg	r20
    1f80:	55 0b       	sbc	r21, r21
    1f82:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <ldexp>
    1f86:	0f 90       	pop	r0
    1f88:	07 fe       	sbrs	r0, 7
    1f8a:	0c 94 ef 0f 	jmp	0x1fde	; 0x1fde <inverse>
    1f8e:	08 95       	ret

00001f90 <__fp_powser>:
    1f90:	df 93       	push	r29
    1f92:	cf 93       	push	r28
    1f94:	1f 93       	push	r17
    1f96:	0f 93       	push	r16
    1f98:	ff 92       	push	r15
    1f9a:	ef 92       	push	r14
    1f9c:	df 92       	push	r13
    1f9e:	7b 01       	movw	r14, r22
    1fa0:	8c 01       	movw	r16, r24
    1fa2:	68 94       	set
    1fa4:	06 c0       	rjmp	.+12     	; 0x1fb2 <__fp_powser+0x22>
    1fa6:	da 2e       	mov	r13, r26
    1fa8:	ef 01       	movw	r28, r30
    1faa:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <__mulsf3x>
    1fae:	fe 01       	movw	r30, r28
    1fb0:	e8 94       	clt
    1fb2:	a5 91       	lpm	r26, Z+
    1fb4:	25 91       	lpm	r18, Z+
    1fb6:	35 91       	lpm	r19, Z+
    1fb8:	45 91       	lpm	r20, Z+
    1fba:	55 91       	lpm	r21, Z+
    1fbc:	a6 f3       	brts	.-24     	; 0x1fa6 <__fp_powser+0x16>
    1fbe:	ef 01       	movw	r28, r30
    1fc0:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <__addsf3x>
    1fc4:	fe 01       	movw	r30, r28
    1fc6:	97 01       	movw	r18, r14
    1fc8:	a8 01       	movw	r20, r16
    1fca:	da 94       	dec	r13
    1fcc:	69 f7       	brne	.-38     	; 0x1fa8 <__fp_powser+0x18>
    1fce:	df 90       	pop	r13
    1fd0:	ef 90       	pop	r14
    1fd2:	ff 90       	pop	r15
    1fd4:	0f 91       	pop	r16
    1fd6:	1f 91       	pop	r17
    1fd8:	cf 91       	pop	r28
    1fda:	df 91       	pop	r29
    1fdc:	08 95       	ret

00001fde <inverse>:
    1fde:	9b 01       	movw	r18, r22
    1fe0:	ac 01       	movw	r20, r24
    1fe2:	60 e0       	ldi	r22, 0x00	; 0
    1fe4:	70 e0       	ldi	r23, 0x00	; 0
    1fe6:	80 e8       	ldi	r24, 0x80	; 128
    1fe8:	9f e3       	ldi	r25, 0x3F	; 63
    1fea:	0c 94 72 0d 	jmp	0x1ae4	; 0x1ae4 <__divsf3>
    1fee:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>
    1ff2:	0c 94 b5 10 	jmp	0x216a	; 0x216a <__fp_mpack>

00001ff6 <ldexp>:
    1ff6:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__fp_splitA>
    1ffa:	d8 f3       	brcs	.-10     	; 0x1ff2 <inverse+0x14>
    1ffc:	99 23       	and	r25, r25
    1ffe:	c9 f3       	breq	.-14     	; 0x1ff2 <inverse+0x14>
    2000:	94 0f       	add	r25, r20
    2002:	51 1d       	adc	r21, r1
    2004:	a3 f3       	brvs	.-24     	; 0x1fee <inverse+0x10>
    2006:	91 50       	subi	r25, 0x01	; 1
    2008:	50 40       	sbci	r21, 0x00	; 0
    200a:	94 f0       	brlt	.+36     	; 0x2030 <ldexp+0x3a>
    200c:	59 f0       	breq	.+22     	; 0x2024 <ldexp+0x2e>
    200e:	88 23       	and	r24, r24
    2010:	32 f0       	brmi	.+12     	; 0x201e <ldexp+0x28>
    2012:	66 0f       	add	r22, r22
    2014:	77 1f       	adc	r23, r23
    2016:	88 1f       	adc	r24, r24
    2018:	91 50       	subi	r25, 0x01	; 1
    201a:	50 40       	sbci	r21, 0x00	; 0
    201c:	c1 f7       	brne	.-16     	; 0x200e <ldexp+0x18>
    201e:	9e 3f       	cpi	r25, 0xFE	; 254
    2020:	51 05       	cpc	r21, r1
    2022:	2c f7       	brge	.-54     	; 0x1fee <inverse+0x10>
    2024:	88 0f       	add	r24, r24
    2026:	91 1d       	adc	r25, r1
    2028:	96 95       	lsr	r25
    202a:	87 95       	ror	r24
    202c:	97 f9       	bld	r25, 7
    202e:	08 95       	ret
    2030:	5f 3f       	cpi	r21, 0xFF	; 255
    2032:	ac f0       	brlt	.+42     	; 0x205e <ldexp+0x68>
    2034:	98 3e       	cpi	r25, 0xE8	; 232
    2036:	9c f0       	brlt	.+38     	; 0x205e <ldexp+0x68>
    2038:	bb 27       	eor	r27, r27
    203a:	86 95       	lsr	r24
    203c:	77 95       	ror	r23
    203e:	67 95       	ror	r22
    2040:	b7 95       	ror	r27
    2042:	08 f4       	brcc	.+2      	; 0x2046 <ldexp+0x50>
    2044:	b1 60       	ori	r27, 0x01	; 1
    2046:	93 95       	inc	r25
    2048:	c1 f7       	brne	.-16     	; 0x203a <ldexp+0x44>
    204a:	bb 0f       	add	r27, r27
    204c:	58 f7       	brcc	.-42     	; 0x2024 <ldexp+0x2e>
    204e:	11 f4       	brne	.+4      	; 0x2054 <ldexp+0x5e>
    2050:	60 ff       	sbrs	r22, 0
    2052:	e8 cf       	rjmp	.-48     	; 0x2024 <ldexp+0x2e>
    2054:	6f 5f       	subi	r22, 0xFF	; 255
    2056:	7f 4f       	sbci	r23, 0xFF	; 255
    2058:	8f 4f       	sbci	r24, 0xFF	; 255
    205a:	9f 4f       	sbci	r25, 0xFF	; 255
    205c:	e3 cf       	rjmp	.-58     	; 0x2024 <ldexp+0x2e>
    205e:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__fp_szero>
    2062:	16 f0       	brts	.+4      	; 0x2068 <ldexp+0x72>
    2064:	0c 94 b5 10 	jmp	0x216a	; 0x216a <__fp_mpack>
    2068:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__fp_nan>
    206c:	68 94       	set
    206e:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__fp_inf>

00002072 <log>:
    2072:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__fp_splitA>
    2076:	a8 f3       	brcs	.-22     	; 0x2062 <ldexp+0x6c>
    2078:	99 23       	and	r25, r25
    207a:	c1 f3       	breq	.-16     	; 0x206c <ldexp+0x76>
    207c:	ae f3       	brts	.-22     	; 0x2068 <ldexp+0x72>
    207e:	df 93       	push	r29
    2080:	cf 93       	push	r28
    2082:	1f 93       	push	r17
    2084:	0f 93       	push	r16
    2086:	ff 92       	push	r15
    2088:	c9 2f       	mov	r28, r25
    208a:	dd 27       	eor	r29, r29
    208c:	88 23       	and	r24, r24
    208e:	2a f0       	brmi	.+10     	; 0x209a <log+0x28>
    2090:	21 97       	sbiw	r28, 0x01	; 1
    2092:	66 0f       	add	r22, r22
    2094:	77 1f       	adc	r23, r23
    2096:	88 1f       	adc	r24, r24
    2098:	da f7       	brpl	.-10     	; 0x2090 <log+0x1e>
    209a:	20 e0       	ldi	r18, 0x00	; 0
    209c:	30 e0       	ldi	r19, 0x00	; 0
    209e:	40 e8       	ldi	r20, 0x80	; 128
    20a0:	5f eb       	ldi	r21, 0xBF	; 191
    20a2:	9f e3       	ldi	r25, 0x3F	; 63
    20a4:	88 39       	cpi	r24, 0x98	; 152
    20a6:	20 f0       	brcs	.+8      	; 0x20b0 <log+0x3e>
    20a8:	80 3e       	cpi	r24, 0xE0	; 224
    20aa:	38 f0       	brcs	.+14     	; 0x20ba <log+0x48>
    20ac:	21 96       	adiw	r28, 0x01	; 1
    20ae:	8f 77       	andi	r24, 0x7F	; 127
    20b0:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__addsf3>
    20b4:	e0 e8       	ldi	r30, 0x80	; 128
    20b6:	f2 e0       	ldi	r31, 0x02	; 2
    20b8:	04 c0       	rjmp	.+8      	; 0x20c2 <log+0x50>
    20ba:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__addsf3>
    20be:	ed ea       	ldi	r30, 0xAD	; 173
    20c0:	f2 e0       	ldi	r31, 0x02	; 2
    20c2:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__fp_powser>
    20c6:	8b 01       	movw	r16, r22
    20c8:	be 01       	movw	r22, r28
    20ca:	ec 01       	movw	r28, r24
    20cc:	fb 2e       	mov	r15, r27
    20ce:	6f 57       	subi	r22, 0x7F	; 127
    20d0:	71 09       	sbc	r23, r1
    20d2:	75 95       	asr	r23
    20d4:	77 1f       	adc	r23, r23
    20d6:	88 0b       	sbc	r24, r24
    20d8:	99 0b       	sbc	r25, r25
    20da:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <__floatsisf>
    20de:	28 e1       	ldi	r18, 0x18	; 24
    20e0:	32 e7       	ldi	r19, 0x72	; 114
    20e2:	41 e3       	ldi	r20, 0x31	; 49
    20e4:	5f e3       	ldi	r21, 0x3F	; 63
    20e6:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <__mulsf3x>
    20ea:	af 2d       	mov	r26, r15
    20ec:	98 01       	movw	r18, r16
    20ee:	ae 01       	movw	r20, r28
    20f0:	ff 90       	pop	r15
    20f2:	0f 91       	pop	r16
    20f4:	1f 91       	pop	r17
    20f6:	cf 91       	pop	r28
    20f8:	df 91       	pop	r29
    20fa:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <__addsf3x>
    20fe:	0c 94 92 0e 	jmp	0x1d24	; 0x1d24 <__fp_round>

00002102 <modf>:
    2102:	fa 01       	movw	r30, r20
    2104:	dc 01       	movw	r26, r24
    2106:	aa 0f       	add	r26, r26
    2108:	bb 1f       	adc	r27, r27
    210a:	9b 01       	movw	r18, r22
    210c:	ac 01       	movw	r20, r24
    210e:	bf 57       	subi	r27, 0x7F	; 127
    2110:	28 f4       	brcc	.+10     	; 0x211c <modf+0x1a>
    2112:	22 27       	eor	r18, r18
    2114:	33 27       	eor	r19, r19
    2116:	44 27       	eor	r20, r20
    2118:	50 78       	andi	r21, 0x80	; 128
    211a:	20 c0       	rjmp	.+64     	; 0x215c <modf+0x5a>
    211c:	b7 51       	subi	r27, 0x17	; 23
    211e:	90 f4       	brcc	.+36     	; 0x2144 <modf+0x42>
    2120:	ab 2f       	mov	r26, r27
    2122:	00 24       	eor	r0, r0
    2124:	46 95       	lsr	r20
    2126:	37 95       	ror	r19
    2128:	27 95       	ror	r18
    212a:	01 1c       	adc	r0, r1
    212c:	a3 95       	inc	r26
    212e:	d2 f3       	brmi	.-12     	; 0x2124 <modf+0x22>
    2130:	00 20       	and	r0, r0
    2132:	71 f0       	breq	.+28     	; 0x2150 <modf+0x4e>
    2134:	22 0f       	add	r18, r18
    2136:	33 1f       	adc	r19, r19
    2138:	44 1f       	adc	r20, r20
    213a:	b3 95       	inc	r27
    213c:	da f3       	brmi	.-10     	; 0x2134 <modf+0x32>
    213e:	0e d0       	rcall	.+28     	; 0x215c <modf+0x5a>
    2140:	0c 94 00 0d 	jmp	0x1a00	; 0x1a00 <__subsf3>
    2144:	61 30       	cpi	r22, 0x01	; 1
    2146:	71 05       	cpc	r23, r1
    2148:	a0 e8       	ldi	r26, 0x80	; 128
    214a:	8a 07       	cpc	r24, r26
    214c:	b9 46       	sbci	r27, 0x69	; 105
    214e:	30 f4       	brcc	.+12     	; 0x215c <modf+0x5a>
    2150:	9b 01       	movw	r18, r22
    2152:	ac 01       	movw	r20, r24
    2154:	66 27       	eor	r22, r22
    2156:	77 27       	eor	r23, r23
    2158:	88 27       	eor	r24, r24
    215a:	90 78       	andi	r25, 0x80	; 128
    215c:	30 96       	adiw	r30, 0x00	; 0
    215e:	21 f0       	breq	.+8      	; 0x2168 <modf+0x66>
    2160:	20 83       	st	Z, r18
    2162:	31 83       	std	Z+1, r19	; 0x01
    2164:	42 83       	std	Z+2, r20	; 0x02
    2166:	53 83       	std	Z+3, r21	; 0x03
    2168:	08 95       	ret

0000216a <__fp_mpack>:
    216a:	9f 3f       	cpi	r25, 0xFF	; 255
    216c:	31 f0       	breq	.+12     	; 0x217a <__fp_mpack_finite+0xc>

0000216e <__fp_mpack_finite>:
    216e:	91 50       	subi	r25, 0x01	; 1
    2170:	20 f4       	brcc	.+8      	; 0x217a <__fp_mpack_finite+0xc>
    2172:	87 95       	ror	r24
    2174:	77 95       	ror	r23
    2176:	67 95       	ror	r22
    2178:	b7 95       	ror	r27
    217a:	88 0f       	add	r24, r24
    217c:	91 1d       	adc	r25, r1
    217e:	96 95       	lsr	r25
    2180:	87 95       	ror	r24
    2182:	97 f9       	bld	r25, 7
    2184:	08 95       	ret

00002186 <__divmodhi4>:
    2186:	97 fb       	bst	r25, 7
    2188:	07 2e       	mov	r0, r23
    218a:	16 f4       	brtc	.+4      	; 0x2190 <__divmodhi4+0xa>
    218c:	00 94       	com	r0
    218e:	07 d0       	rcall	.+14     	; 0x219e <__divmodhi4_neg1>
    2190:	77 fd       	sbrc	r23, 7
    2192:	09 d0       	rcall	.+18     	; 0x21a6 <__divmodhi4_neg2>
    2194:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__udivmodhi4>
    2198:	07 fc       	sbrc	r0, 7
    219a:	05 d0       	rcall	.+10     	; 0x21a6 <__divmodhi4_neg2>
    219c:	3e f4       	brtc	.+14     	; 0x21ac <__divmodhi4_exit>

0000219e <__divmodhi4_neg1>:
    219e:	90 95       	com	r25
    21a0:	81 95       	neg	r24
    21a2:	9f 4f       	sbci	r25, 0xFF	; 255
    21a4:	08 95       	ret

000021a6 <__divmodhi4_neg2>:
    21a6:	70 95       	com	r23
    21a8:	61 95       	neg	r22
    21aa:	7f 4f       	sbci	r23, 0xFF	; 255

000021ac <__divmodhi4_exit>:
    21ac:	08 95       	ret

000021ae <__divmodsi4>:
    21ae:	05 2e       	mov	r0, r21
    21b0:	97 fb       	bst	r25, 7
    21b2:	1e f4       	brtc	.+6      	; 0x21ba <__divmodsi4+0xc>
    21b4:	00 94       	com	r0
    21b6:	0e 94 ee 10 	call	0x21dc	; 0x21dc <__negsi2>
    21ba:	57 fd       	sbrc	r21, 7
    21bc:	07 d0       	rcall	.+14     	; 0x21cc <__divmodsi4_neg2>
    21be:	0e 94 10 11 	call	0x2220	; 0x2220 <__udivmodsi4>
    21c2:	07 fc       	sbrc	r0, 7
    21c4:	03 d0       	rcall	.+6      	; 0x21cc <__divmodsi4_neg2>
    21c6:	4e f4       	brtc	.+18     	; 0x21da <__divmodsi4_exit>
    21c8:	0c 94 ee 10 	jmp	0x21dc	; 0x21dc <__negsi2>

000021cc <__divmodsi4_neg2>:
    21cc:	50 95       	com	r21
    21ce:	40 95       	com	r20
    21d0:	30 95       	com	r19
    21d2:	21 95       	neg	r18
    21d4:	3f 4f       	sbci	r19, 0xFF	; 255
    21d6:	4f 4f       	sbci	r20, 0xFF	; 255
    21d8:	5f 4f       	sbci	r21, 0xFF	; 255

000021da <__divmodsi4_exit>:
    21da:	08 95       	ret

000021dc <__negsi2>:
    21dc:	90 95       	com	r25
    21de:	80 95       	com	r24
    21e0:	70 95       	com	r23
    21e2:	61 95       	neg	r22
    21e4:	7f 4f       	sbci	r23, 0xFF	; 255
    21e6:	8f 4f       	sbci	r24, 0xFF	; 255
    21e8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ea:	08 95       	ret

000021ec <__tablejump2__>:
    21ec:	ee 0f       	add	r30, r30
    21ee:	ff 1f       	adc	r31, r31
    21f0:	05 90       	lpm	r0, Z+
    21f2:	f4 91       	lpm	r31, Z
    21f4:	e0 2d       	mov	r30, r0
    21f6:	09 94       	ijmp

000021f8 <__udivmodhi4>:
    21f8:	aa 1b       	sub	r26, r26
    21fa:	bb 1b       	sub	r27, r27
    21fc:	51 e1       	ldi	r21, 0x11	; 17
    21fe:	07 c0       	rjmp	.+14     	; 0x220e <__udivmodhi4_ep>

00002200 <__udivmodhi4_loop>:
    2200:	aa 1f       	adc	r26, r26
    2202:	bb 1f       	adc	r27, r27
    2204:	a6 17       	cp	r26, r22
    2206:	b7 07       	cpc	r27, r23
    2208:	10 f0       	brcs	.+4      	; 0x220e <__udivmodhi4_ep>
    220a:	a6 1b       	sub	r26, r22
    220c:	b7 0b       	sbc	r27, r23

0000220e <__udivmodhi4_ep>:
    220e:	88 1f       	adc	r24, r24
    2210:	99 1f       	adc	r25, r25
    2212:	5a 95       	dec	r21
    2214:	a9 f7       	brne	.-22     	; 0x2200 <__udivmodhi4_loop>
    2216:	80 95       	com	r24
    2218:	90 95       	com	r25
    221a:	bc 01       	movw	r22, r24
    221c:	cd 01       	movw	r24, r26
    221e:	08 95       	ret

00002220 <__udivmodsi4>:
    2220:	a1 e2       	ldi	r26, 0x21	; 33
    2222:	1a 2e       	mov	r1, r26
    2224:	aa 1b       	sub	r26, r26
    2226:	bb 1b       	sub	r27, r27
    2228:	fd 01       	movw	r30, r26
    222a:	0d c0       	rjmp	.+26     	; 0x2246 <__udivmodsi4_ep>

0000222c <__udivmodsi4_loop>:
    222c:	aa 1f       	adc	r26, r26
    222e:	bb 1f       	adc	r27, r27
    2230:	ee 1f       	adc	r30, r30
    2232:	ff 1f       	adc	r31, r31
    2234:	a2 17       	cp	r26, r18
    2236:	b3 07       	cpc	r27, r19
    2238:	e4 07       	cpc	r30, r20
    223a:	f5 07       	cpc	r31, r21
    223c:	20 f0       	brcs	.+8      	; 0x2246 <__udivmodsi4_ep>
    223e:	a2 1b       	sub	r26, r18
    2240:	b3 0b       	sbc	r27, r19
    2242:	e4 0b       	sbc	r30, r20
    2244:	f5 0b       	sbc	r31, r21

00002246 <__udivmodsi4_ep>:
    2246:	66 1f       	adc	r22, r22
    2248:	77 1f       	adc	r23, r23
    224a:	88 1f       	adc	r24, r24
    224c:	99 1f       	adc	r25, r25
    224e:	1a 94       	dec	r1
    2250:	69 f7       	brne	.-38     	; 0x222c <__udivmodsi4_loop>
    2252:	60 95       	com	r22
    2254:	70 95       	com	r23
    2256:	80 95       	com	r24
    2258:	90 95       	com	r25
    225a:	9b 01       	movw	r18, r22
    225c:	ac 01       	movw	r20, r24
    225e:	bd 01       	movw	r22, r26
    2260:	cf 01       	movw	r24, r30
    2262:	08 95       	ret

00002264 <atof>:
    2264:	66 27       	eor	r22, r22
    2266:	77 27       	eor	r23, r23
    2268:	0c 94 a3 11 	jmp	0x2346	; 0x2346 <strtod>

0000226c <atol>:
    226c:	1f 93       	push	r17
    226e:	fc 01       	movw	r30, r24
    2270:	99 27       	eor	r25, r25
    2272:	88 27       	eor	r24, r24
    2274:	bc 01       	movw	r22, r24
    2276:	e8 94       	clt
    2278:	11 91       	ld	r17, Z+
    227a:	10 32       	cpi	r17, 0x20	; 32
    227c:	e9 f3       	breq	.-6      	; 0x2278 <atol+0xc>
    227e:	19 30       	cpi	r17, 0x09	; 9
    2280:	10 f0       	brcs	.+4      	; 0x2286 <atol+0x1a>
    2282:	1e 30       	cpi	r17, 0x0E	; 14
    2284:	c8 f3       	brcs	.-14     	; 0x2278 <atol+0xc>
    2286:	1b 32       	cpi	r17, 0x2B	; 43
    2288:	51 f0       	breq	.+20     	; 0x229e <atol+0x32>
    228a:	1d 32       	cpi	r17, 0x2D	; 45
    228c:	49 f4       	brne	.+18     	; 0x22a0 <atol+0x34>
    228e:	68 94       	set
    2290:	06 c0       	rjmp	.+12     	; 0x229e <atol+0x32>
    2292:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <__mulsi_const_10>
    2296:	61 0f       	add	r22, r17
    2298:	71 1d       	adc	r23, r1
    229a:	81 1d       	adc	r24, r1
    229c:	91 1d       	adc	r25, r1
    229e:	11 91       	ld	r17, Z+
    22a0:	10 53       	subi	r17, 0x30	; 48
    22a2:	1a 30       	cpi	r17, 0x0A	; 10
    22a4:	b0 f3       	brcs	.-20     	; 0x2292 <atol+0x26>
    22a6:	3e f4       	brtc	.+14     	; 0x22b6 <atol+0x4a>
    22a8:	90 95       	com	r25
    22aa:	80 95       	com	r24
    22ac:	70 95       	com	r23
    22ae:	61 95       	neg	r22
    22b0:	7f 4f       	sbci	r23, 0xFF	; 255
    22b2:	8f 4f       	sbci	r24, 0xFF	; 255
    22b4:	9f 4f       	sbci	r25, 0xFF	; 255
    22b6:	1f 91       	pop	r17
    22b8:	08 95       	ret

000022ba <__ltoa_ncheck>:
    22ba:	bb 27       	eor	r27, r27
    22bc:	2a 30       	cpi	r18, 0x0A	; 10
    22be:	51 f4       	brne	.+20     	; 0x22d4 <__ltoa_ncheck+0x1a>
    22c0:	99 23       	and	r25, r25
    22c2:	42 f4       	brpl	.+16     	; 0x22d4 <__ltoa_ncheck+0x1a>
    22c4:	bd e2       	ldi	r27, 0x2D	; 45
    22c6:	90 95       	com	r25
    22c8:	80 95       	com	r24
    22ca:	70 95       	com	r23
    22cc:	61 95       	neg	r22
    22ce:	7f 4f       	sbci	r23, 0xFF	; 255
    22d0:	8f 4f       	sbci	r24, 0xFF	; 255
    22d2:	9f 4f       	sbci	r25, 0xFF	; 255
    22d4:	0c 94 82 11 	jmp	0x2304	; 0x2304 <__ultoa_common>

000022d8 <__mulsi_const_10>:
    22d8:	59 2f       	mov	r21, r25
    22da:	48 2f       	mov	r20, r24
    22dc:	37 2f       	mov	r19, r23
    22de:	26 2f       	mov	r18, r22
    22e0:	66 0f       	add	r22, r22
    22e2:	77 1f       	adc	r23, r23
    22e4:	88 1f       	adc	r24, r24
    22e6:	99 1f       	adc	r25, r25
    22e8:	66 0f       	add	r22, r22
    22ea:	77 1f       	adc	r23, r23
    22ec:	88 1f       	adc	r24, r24
    22ee:	99 1f       	adc	r25, r25
    22f0:	62 0f       	add	r22, r18
    22f2:	73 1f       	adc	r23, r19
    22f4:	84 1f       	adc	r24, r20
    22f6:	95 1f       	adc	r25, r21
    22f8:	66 0f       	add	r22, r22
    22fa:	77 1f       	adc	r23, r23
    22fc:	88 1f       	adc	r24, r24
    22fe:	99 1f       	adc	r25, r25
    2300:	08 95       	ret

00002302 <__ultoa_ncheck>:
    2302:	bb 27       	eor	r27, r27

00002304 <__ultoa_common>:
    2304:	fa 01       	movw	r30, r20
    2306:	a6 2f       	mov	r26, r22
    2308:	62 17       	cp	r22, r18
    230a:	71 05       	cpc	r23, r1
    230c:	81 05       	cpc	r24, r1
    230e:	91 05       	cpc	r25, r1
    2310:	33 0b       	sbc	r19, r19
    2312:	30 fb       	bst	r19, 0
    2314:	66 f0       	brts	.+24     	; 0x232e <__ultoa_common+0x2a>
    2316:	aa 27       	eor	r26, r26
    2318:	66 0f       	add	r22, r22
    231a:	77 1f       	adc	r23, r23
    231c:	88 1f       	adc	r24, r24
    231e:	99 1f       	adc	r25, r25
    2320:	aa 1f       	adc	r26, r26
    2322:	a2 17       	cp	r26, r18
    2324:	10 f0       	brcs	.+4      	; 0x232a <__ultoa_common+0x26>
    2326:	a2 1b       	sub	r26, r18
    2328:	63 95       	inc	r22
    232a:	38 50       	subi	r19, 0x08	; 8
    232c:	a9 f7       	brne	.-22     	; 0x2318 <__ultoa_common+0x14>
    232e:	a0 5d       	subi	r26, 0xD0	; 208
    2330:	aa 33       	cpi	r26, 0x3A	; 58
    2332:	08 f0       	brcs	.+2      	; 0x2336 <__ultoa_common+0x32>
    2334:	a9 5d       	subi	r26, 0xD9	; 217
    2336:	a1 93       	st	Z+, r26
    2338:	36 f7       	brtc	.-52     	; 0x2306 <__ultoa_common+0x2>
    233a:	b1 11       	cpse	r27, r1
    233c:	b1 93       	st	Z+, r27
    233e:	10 82       	st	Z, r1
    2340:	ca 01       	movw	r24, r20
    2342:	0c 94 12 13 	jmp	0x2624	; 0x2624 <strrev>

00002346 <strtod>:
    2346:	a0 e0       	ldi	r26, 0x00	; 0
    2348:	b0 e0       	ldi	r27, 0x00	; 0
    234a:	e9 ea       	ldi	r30, 0xA9	; 169
    234c:	f1 e1       	ldi	r31, 0x11	; 17
    234e:	0c 94 36 13 	jmp	0x266c	; 0x266c <__prologue_saves__+0xc>
    2352:	ec 01       	movw	r28, r24
    2354:	6b 01       	movw	r12, r22
    2356:	61 15       	cp	r22, r1
    2358:	71 05       	cpc	r23, r1
    235a:	19 f0       	breq	.+6      	; 0x2362 <strtod+0x1c>
    235c:	fb 01       	movw	r30, r22
    235e:	80 83       	st	Z, r24
    2360:	91 83       	std	Z+1, r25	; 0x01
    2362:	7e 01       	movw	r14, r28
    2364:	ff ef       	ldi	r31, 0xFF	; 255
    2366:	ef 1a       	sub	r14, r31
    2368:	ff 0a       	sbc	r15, r31
    236a:	08 81       	ld	r16, Y
    236c:	80 2f       	mov	r24, r16
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	0e 94 f1 12 	call	0x25e2	; 0x25e2 <isspace>
    2374:	89 2b       	or	r24, r25
    2376:	11 f0       	breq	.+4      	; 0x237c <strtod+0x36>
    2378:	e7 01       	movw	r28, r14
    237a:	f3 cf       	rjmp	.-26     	; 0x2362 <strtod+0x1c>
    237c:	0d 32       	cpi	r16, 0x2D	; 45
    237e:	39 f4       	brne	.+14     	; 0x238e <strtod+0x48>
    2380:	7e 01       	movw	r14, r28
    2382:	82 e0       	ldi	r24, 0x02	; 2
    2384:	e8 0e       	add	r14, r24
    2386:	f1 1c       	adc	r15, r1
    2388:	09 81       	ldd	r16, Y+1	; 0x01
    238a:	11 e0       	ldi	r17, 0x01	; 1
    238c:	08 c0       	rjmp	.+16     	; 0x239e <strtod+0x58>
    238e:	0b 32       	cpi	r16, 0x2B	; 43
    2390:	29 f4       	brne	.+10     	; 0x239c <strtod+0x56>
    2392:	7e 01       	movw	r14, r28
    2394:	92 e0       	ldi	r25, 0x02	; 2
    2396:	e9 0e       	add	r14, r25
    2398:	f1 1c       	adc	r15, r1
    239a:	09 81       	ldd	r16, Y+1	; 0x01
    239c:	10 e0       	ldi	r17, 0x00	; 0
    239e:	e7 01       	movw	r28, r14
    23a0:	21 97       	sbiw	r28, 0x01	; 1
    23a2:	43 e0       	ldi	r20, 0x03	; 3
    23a4:	50 e0       	ldi	r21, 0x00	; 0
    23a6:	62 ee       	ldi	r22, 0xE2	; 226
    23a8:	72 e0       	ldi	r23, 0x02	; 2
    23aa:	ce 01       	movw	r24, r28
    23ac:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <strncasecmp_P>
    23b0:	89 2b       	or	r24, r25
    23b2:	c1 f4       	brne	.+48     	; 0x23e4 <strtod+0x9e>
    23b4:	23 96       	adiw	r28, 0x03	; 3
    23b6:	45 e0       	ldi	r20, 0x05	; 5
    23b8:	50 e0       	ldi	r21, 0x00	; 0
    23ba:	6d ed       	ldi	r22, 0xDD	; 221
    23bc:	72 e0       	ldi	r23, 0x02	; 2
    23be:	ce 01       	movw	r24, r28
    23c0:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <strncasecmp_P>
    23c4:	89 2b       	or	r24, r25
    23c6:	09 f4       	brne	.+2      	; 0x23ca <strtod+0x84>
    23c8:	25 96       	adiw	r28, 0x05	; 5
    23ca:	c1 14       	cp	r12, r1
    23cc:	d1 04       	cpc	r13, r1
    23ce:	19 f0       	breq	.+6      	; 0x23d6 <strtod+0x90>
    23d0:	f6 01       	movw	r30, r12
    23d2:	c0 83       	st	Z, r28
    23d4:	d1 83       	std	Z+1, r29	; 0x01
    23d6:	11 11       	cpse	r17, r1
    23d8:	f6 c0       	rjmp	.+492    	; 0x25c6 <strtod+0x280>
    23da:	60 e0       	ldi	r22, 0x00	; 0
    23dc:	70 e0       	ldi	r23, 0x00	; 0
    23de:	80 e8       	ldi	r24, 0x80	; 128
    23e0:	9f e7       	ldi	r25, 0x7F	; 127
    23e2:	fa c0       	rjmp	.+500    	; 0x25d8 <strtod+0x292>
    23e4:	43 e0       	ldi	r20, 0x03	; 3
    23e6:	50 e0       	ldi	r21, 0x00	; 0
    23e8:	6a ed       	ldi	r22, 0xDA	; 218
    23ea:	72 e0       	ldi	r23, 0x02	; 2
    23ec:	ce 01       	movw	r24, r28
    23ee:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <strncasecmp_P>
    23f2:	89 2b       	or	r24, r25
    23f4:	59 f4       	brne	.+22     	; 0x240c <strtod+0xc6>
    23f6:	c1 14       	cp	r12, r1
    23f8:	d1 04       	cpc	r13, r1
    23fa:	09 f4       	brne	.+2      	; 0x23fe <strtod+0xb8>
    23fc:	e9 c0       	rjmp	.+466    	; 0x25d0 <strtod+0x28a>
    23fe:	f2 e0       	ldi	r31, 0x02	; 2
    2400:	ef 0e       	add	r14, r31
    2402:	f1 1c       	adc	r15, r1
    2404:	f6 01       	movw	r30, r12
    2406:	e0 82       	st	Z, r14
    2408:	f1 82       	std	Z+1, r15	; 0x01
    240a:	e2 c0       	rjmp	.+452    	; 0x25d0 <strtod+0x28a>
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	a9 01       	movw	r20, r18
    2412:	c0 e0       	ldi	r28, 0x00	; 0
    2414:	d0 e0       	ldi	r29, 0x00	; 0
    2416:	f7 01       	movw	r30, r14
    2418:	80 ed       	ldi	r24, 0xD0	; 208
    241a:	a8 2e       	mov	r10, r24
    241c:	a0 0e       	add	r10, r16
    241e:	89 e0       	ldi	r24, 0x09	; 9
    2420:	8a 15       	cp	r24, r10
    2422:	30 f1       	brcs	.+76     	; 0x2470 <strtod+0x12a>
    2424:	91 2f       	mov	r25, r17
    2426:	92 60       	ori	r25, 0x02	; 2
    2428:	b9 2e       	mov	r11, r25
    242a:	81 2f       	mov	r24, r17
    242c:	88 70       	andi	r24, 0x08	; 8
    242e:	12 ff       	sbrs	r17, 2
    2430:	04 c0       	rjmp	.+8      	; 0x243a <strtod+0xf4>
    2432:	81 11       	cpse	r24, r1
    2434:	24 c0       	rjmp	.+72     	; 0x247e <strtod+0x138>
    2436:	21 96       	adiw	r28, 0x01	; 1
    2438:	22 c0       	rjmp	.+68     	; 0x247e <strtod+0x138>
    243a:	81 11       	cpse	r24, r1
    243c:	21 97       	sbiw	r28, 0x01	; 1
    243e:	a5 e0       	ldi	r26, 0x05	; 5
    2440:	b0 e0       	ldi	r27, 0x00	; 0
    2442:	0e 94 25 13 	call	0x264a	; 0x264a <__muluhisi3>
    2446:	dc 01       	movw	r26, r24
    2448:	cb 01       	movw	r24, r22
    244a:	88 0f       	add	r24, r24
    244c:	99 1f       	adc	r25, r25
    244e:	aa 1f       	adc	r26, r26
    2450:	bb 1f       	adc	r27, r27
    2452:	9c 01       	movw	r18, r24
    2454:	ad 01       	movw	r20, r26
    2456:	2a 0d       	add	r18, r10
    2458:	31 1d       	adc	r19, r1
    245a:	41 1d       	adc	r20, r1
    245c:	51 1d       	adc	r21, r1
    245e:	28 39       	cpi	r18, 0x98	; 152
    2460:	89 e9       	ldi	r24, 0x99	; 153
    2462:	38 07       	cpc	r19, r24
    2464:	48 07       	cpc	r20, r24
    2466:	89 e1       	ldi	r24, 0x19	; 25
    2468:	58 07       	cpc	r21, r24
    246a:	48 f0       	brcs	.+18     	; 0x247e <strtod+0x138>
    246c:	16 60       	ori	r17, 0x06	; 6
    246e:	06 c0       	rjmp	.+12     	; 0x247c <strtod+0x136>
    2470:	9e ef       	ldi	r25, 0xFE	; 254
    2472:	a9 12       	cpse	r10, r25
    2474:	0a c0       	rjmp	.+20     	; 0x248a <strtod+0x144>
    2476:	13 fd       	sbrc	r17, 3
    2478:	40 c0       	rjmp	.+128    	; 0x24fa <strtod+0x1b4>
    247a:	18 60       	ori	r17, 0x08	; 8
    247c:	b1 2e       	mov	r11, r17
    247e:	8f ef       	ldi	r24, 0xFF	; 255
    2480:	e8 1a       	sub	r14, r24
    2482:	f8 0a       	sbc	r15, r24
    2484:	00 81       	ld	r16, Z
    2486:	1b 2d       	mov	r17, r11
    2488:	c6 cf       	rjmp	.-116    	; 0x2416 <strtod+0xd0>
    248a:	80 2f       	mov	r24, r16
    248c:	8f 7d       	andi	r24, 0xDF	; 223
    248e:	85 34       	cpi	r24, 0x45	; 69
    2490:	a1 f5       	brne	.+104    	; 0x24fa <strtod+0x1b4>
    2492:	80 81       	ld	r24, Z
    2494:	8d 32       	cpi	r24, 0x2D	; 45
    2496:	11 f4       	brne	.+4      	; 0x249c <strtod+0x156>
    2498:	10 61       	ori	r17, 0x10	; 16
    249a:	06 c0       	rjmp	.+12     	; 0x24a8 <strtod+0x162>
    249c:	8b 32       	cpi	r24, 0x2B	; 43
    249e:	21 f0       	breq	.+8      	; 0x24a8 <strtod+0x162>
    24a0:	31 96       	adiw	r30, 0x01	; 1
    24a2:	61 e0       	ldi	r22, 0x01	; 1
    24a4:	70 e0       	ldi	r23, 0x00	; 0
    24a6:	04 c0       	rjmp	.+8      	; 0x24b0 <strtod+0x16a>
    24a8:	81 81       	ldd	r24, Z+1	; 0x01
    24aa:	32 96       	adiw	r30, 0x02	; 2
    24ac:	62 e0       	ldi	r22, 0x02	; 2
    24ae:	70 e0       	ldi	r23, 0x00	; 0
    24b0:	80 53       	subi	r24, 0x30	; 48
    24b2:	8a 30       	cpi	r24, 0x0A	; 10
    24b4:	18 f0       	brcs	.+6      	; 0x24bc <strtod+0x176>
    24b6:	e6 1b       	sub	r30, r22
    24b8:	f7 0b       	sbc	r31, r23
    24ba:	1f c0       	rjmp	.+62     	; 0x24fa <strtod+0x1b4>
    24bc:	60 e0       	ldi	r22, 0x00	; 0
    24be:	70 e0       	ldi	r23, 0x00	; 0
    24c0:	60 38       	cpi	r22, 0x80	; 128
    24c2:	9c e0       	ldi	r25, 0x0C	; 12
    24c4:	79 07       	cpc	r23, r25
    24c6:	5c f4       	brge	.+22     	; 0x24de <strtod+0x198>
    24c8:	db 01       	movw	r26, r22
    24ca:	aa 0f       	add	r26, r26
    24cc:	bb 1f       	adc	r27, r27
    24ce:	aa 0f       	add	r26, r26
    24d0:	bb 1f       	adc	r27, r27
    24d2:	6a 0f       	add	r22, r26
    24d4:	7b 1f       	adc	r23, r27
    24d6:	66 0f       	add	r22, r22
    24d8:	77 1f       	adc	r23, r23
    24da:	68 0f       	add	r22, r24
    24dc:	71 1d       	adc	r23, r1
    24de:	31 96       	adiw	r30, 0x01	; 1
    24e0:	df 01       	movw	r26, r30
    24e2:	11 97       	sbiw	r26, 0x01	; 1
    24e4:	8c 91       	ld	r24, X
    24e6:	80 53       	subi	r24, 0x30	; 48
    24e8:	8a 30       	cpi	r24, 0x0A	; 10
    24ea:	50 f3       	brcs	.-44     	; 0x24c0 <strtod+0x17a>
    24ec:	14 ff       	sbrs	r17, 4
    24ee:	03 c0       	rjmp	.+6      	; 0x24f6 <strtod+0x1b0>
    24f0:	71 95       	neg	r23
    24f2:	61 95       	neg	r22
    24f4:	71 09       	sbc	r23, r1
    24f6:	c6 0f       	add	r28, r22
    24f8:	d7 1f       	adc	r29, r23
    24fa:	11 ff       	sbrs	r17, 1
    24fc:	08 c0       	rjmp	.+16     	; 0x250e <strtod+0x1c8>
    24fe:	c1 14       	cp	r12, r1
    2500:	d1 04       	cpc	r13, r1
    2502:	29 f0       	breq	.+10     	; 0x250e <strtod+0x1c8>
    2504:	cf 01       	movw	r24, r30
    2506:	01 97       	sbiw	r24, 0x01	; 1
    2508:	f6 01       	movw	r30, r12
    250a:	80 83       	st	Z, r24
    250c:	91 83       	std	Z+1, r25	; 0x01
    250e:	ca 01       	movw	r24, r20
    2510:	b9 01       	movw	r22, r18
    2512:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__floatunsisf>
    2516:	21 2f       	mov	r18, r17
    2518:	23 70       	andi	r18, 0x03	; 3
    251a:	23 30       	cpi	r18, 0x03	; 3
    251c:	19 f0       	breq	.+6      	; 0x2524 <strtod+0x1de>
    251e:	4b 01       	movw	r8, r22
    2520:	5c 01       	movw	r10, r24
    2522:	06 c0       	rjmp	.+12     	; 0x2530 <strtod+0x1ea>
    2524:	4b 01       	movw	r8, r22
    2526:	5c 01       	movw	r10, r24
    2528:	b7 fa       	bst	r11, 7
    252a:	b0 94       	com	r11
    252c:	b7 f8       	bld	r11, 7
    252e:	b0 94       	com	r11
    2530:	20 e0       	ldi	r18, 0x00	; 0
    2532:	30 e0       	ldi	r19, 0x00	; 0
    2534:	a9 01       	movw	r20, r18
    2536:	c5 01       	movw	r24, r10
    2538:	b4 01       	movw	r22, r8
    253a:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
    253e:	88 23       	and	r24, r24
    2540:	09 f4       	brne	.+2      	; 0x2544 <strtod+0x1fe>
    2542:	3e c0       	rjmp	.+124    	; 0x25c0 <strtod+0x27a>
    2544:	d7 ff       	sbrs	r29, 7
    2546:	06 c0       	rjmp	.+12     	; 0x2554 <strtod+0x20e>
    2548:	d1 95       	neg	r29
    254a:	c1 95       	neg	r28
    254c:	d1 09       	sbc	r29, r1
    254e:	09 ef       	ldi	r16, 0xF9	; 249
    2550:	12 e0       	ldi	r17, 0x02	; 2
    2552:	02 c0       	rjmp	.+4      	; 0x2558 <strtod+0x212>
    2554:	01 e1       	ldi	r16, 0x11	; 17
    2556:	13 e0       	ldi	r17, 0x03	; 3
    2558:	68 01       	movw	r12, r16
    255a:	f8 e1       	ldi	r31, 0x18	; 24
    255c:	cf 1a       	sub	r12, r31
    255e:	d1 08       	sbc	r13, r1
    2560:	90 e2       	ldi	r25, 0x20	; 32
    2562:	e9 2e       	mov	r14, r25
    2564:	f1 2c       	mov	r15, r1
    2566:	ce 15       	cp	r28, r14
    2568:	df 05       	cpc	r29, r15
    256a:	74 f0       	brlt	.+28     	; 0x2588 <strtod+0x242>
    256c:	f8 01       	movw	r30, r16
    256e:	25 91       	lpm	r18, Z+
    2570:	35 91       	lpm	r19, Z+
    2572:	45 91       	lpm	r20, Z+
    2574:	54 91       	lpm	r21, Z
    2576:	c5 01       	movw	r24, r10
    2578:	b4 01       	movw	r22, r8
    257a:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <__mulsf3>
    257e:	4b 01       	movw	r8, r22
    2580:	5c 01       	movw	r10, r24
    2582:	ce 19       	sub	r28, r14
    2584:	df 09       	sbc	r29, r15
    2586:	ef cf       	rjmp	.-34     	; 0x2566 <strtod+0x220>
    2588:	04 50       	subi	r16, 0x04	; 4
    258a:	11 09       	sbc	r17, r1
    258c:	f5 94       	asr	r15
    258e:	e7 94       	ror	r14
    2590:	0c 15       	cp	r16, r12
    2592:	1d 05       	cpc	r17, r13
    2594:	41 f7       	brne	.-48     	; 0x2566 <strtod+0x220>
    2596:	8a 2d       	mov	r24, r10
    2598:	88 0f       	add	r24, r24
    259a:	8b 2d       	mov	r24, r11
    259c:	88 1f       	adc	r24, r24
    259e:	8f 3f       	cpi	r24, 0xFF	; 255
    25a0:	49 f0       	breq	.+18     	; 0x25b4 <strtod+0x26e>
    25a2:	20 e0       	ldi	r18, 0x00	; 0
    25a4:	30 e0       	ldi	r19, 0x00	; 0
    25a6:	a9 01       	movw	r20, r18
    25a8:	c5 01       	movw	r24, r10
    25aa:	b4 01       	movw	r22, r8
    25ac:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__cmpsf2>
    25b0:	81 11       	cpse	r24, r1
    25b2:	06 c0       	rjmp	.+12     	; 0x25c0 <strtod+0x27a>
    25b4:	82 e2       	ldi	r24, 0x22	; 34
    25b6:	90 e0       	ldi	r25, 0x00	; 0
    25b8:	80 93 4e 3c 	sts	0x3C4E, r24	; 0x803c4e <errno>
    25bc:	90 93 4f 3c 	sts	0x3C4F, r25	; 0x803c4f <errno+0x1>
    25c0:	c5 01       	movw	r24, r10
    25c2:	b4 01       	movw	r22, r8
    25c4:	09 c0       	rjmp	.+18     	; 0x25d8 <strtod+0x292>
    25c6:	60 e0       	ldi	r22, 0x00	; 0
    25c8:	70 e0       	ldi	r23, 0x00	; 0
    25ca:	80 e8       	ldi	r24, 0x80	; 128
    25cc:	9f ef       	ldi	r25, 0xFF	; 255
    25ce:	04 c0       	rjmp	.+8      	; 0x25d8 <strtod+0x292>
    25d0:	60 e0       	ldi	r22, 0x00	; 0
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	80 ec       	ldi	r24, 0xC0	; 192
    25d6:	9f e7       	ldi	r25, 0x7F	; 127
    25d8:	cd b7       	in	r28, 0x3d	; 61
    25da:	de b7       	in	r29, 0x3e	; 62
    25dc:	ec e0       	ldi	r30, 0x0C	; 12
    25de:	0c 94 4f 13 	jmp	0x269e	; 0x269e <__epilogue_restores__+0xc>

000025e2 <isspace>:
    25e2:	91 11       	cpse	r25, r1
    25e4:	0c 94 22 13 	jmp	0x2644	; 0x2644 <__ctype_isfalse>
    25e8:	80 32       	cpi	r24, 0x20	; 32
    25ea:	19 f0       	breq	.+6      	; 0x25f2 <isspace+0x10>
    25ec:	89 50       	subi	r24, 0x09	; 9
    25ee:	85 50       	subi	r24, 0x05	; 5
    25f0:	c8 f7       	brcc	.-14     	; 0x25e4 <isspace+0x2>
    25f2:	08 95       	ret

000025f4 <strncasecmp_P>:
    25f4:	fb 01       	movw	r30, r22
    25f6:	dc 01       	movw	r26, r24
    25f8:	41 50       	subi	r20, 0x01	; 1
    25fa:	50 40       	sbci	r21, 0x00	; 0
    25fc:	88 f0       	brcs	.+34     	; 0x2620 <strncasecmp_P+0x2c>
    25fe:	8d 91       	ld	r24, X+
    2600:	81 34       	cpi	r24, 0x41	; 65
    2602:	1c f0       	brlt	.+6      	; 0x260a <strncasecmp_P+0x16>
    2604:	8b 35       	cpi	r24, 0x5B	; 91
    2606:	0c f4       	brge	.+2      	; 0x260a <strncasecmp_P+0x16>
    2608:	80 5e       	subi	r24, 0xE0	; 224
    260a:	65 91       	lpm	r22, Z+
    260c:	61 34       	cpi	r22, 0x41	; 65
    260e:	1c f0       	brlt	.+6      	; 0x2616 <strncasecmp_P+0x22>
    2610:	6b 35       	cpi	r22, 0x5B	; 91
    2612:	0c f4       	brge	.+2      	; 0x2616 <strncasecmp_P+0x22>
    2614:	60 5e       	subi	r22, 0xE0	; 224
    2616:	86 1b       	sub	r24, r22
    2618:	61 11       	cpse	r22, r1
    261a:	71 f3       	breq	.-36     	; 0x25f8 <strncasecmp_P+0x4>
    261c:	99 0b       	sbc	r25, r25
    261e:	08 95       	ret
    2620:	88 1b       	sub	r24, r24
    2622:	fc cf       	rjmp	.-8      	; 0x261c <strncasecmp_P+0x28>

00002624 <strrev>:
    2624:	dc 01       	movw	r26, r24
    2626:	fc 01       	movw	r30, r24
    2628:	67 2f       	mov	r22, r23
    262a:	71 91       	ld	r23, Z+
    262c:	77 23       	and	r23, r23
    262e:	e1 f7       	brne	.-8      	; 0x2628 <strrev+0x4>
    2630:	32 97       	sbiw	r30, 0x02	; 2
    2632:	04 c0       	rjmp	.+8      	; 0x263c <strrev+0x18>
    2634:	7c 91       	ld	r23, X
    2636:	6d 93       	st	X+, r22
    2638:	70 83       	st	Z, r23
    263a:	62 91       	ld	r22, -Z
    263c:	ae 17       	cp	r26, r30
    263e:	bf 07       	cpc	r27, r31
    2640:	c8 f3       	brcs	.-14     	; 0x2634 <strrev+0x10>
    2642:	08 95       	ret

00002644 <__ctype_isfalse>:
    2644:	99 27       	eor	r25, r25
    2646:	88 27       	eor	r24, r24

00002648 <__ctype_istrue>:
    2648:	08 95       	ret

0000264a <__muluhisi3>:
    264a:	0e 94 61 13 	call	0x26c2	; 0x26c2 <__umulhisi3>
    264e:	a5 9f       	mul	r26, r21
    2650:	90 0d       	add	r25, r0
    2652:	b4 9f       	mul	r27, r20
    2654:	90 0d       	add	r25, r0
    2656:	a4 9f       	mul	r26, r20
    2658:	80 0d       	add	r24, r0
    265a:	91 1d       	adc	r25, r1
    265c:	11 24       	eor	r1, r1
    265e:	08 95       	ret

00002660 <__prologue_saves__>:
    2660:	2f 92       	push	r2
    2662:	3f 92       	push	r3
    2664:	4f 92       	push	r4
    2666:	5f 92       	push	r5
    2668:	6f 92       	push	r6
    266a:	7f 92       	push	r7
    266c:	8f 92       	push	r8
    266e:	9f 92       	push	r9
    2670:	af 92       	push	r10
    2672:	bf 92       	push	r11
    2674:	cf 92       	push	r12
    2676:	df 92       	push	r13
    2678:	ef 92       	push	r14
    267a:	ff 92       	push	r15
    267c:	0f 93       	push	r16
    267e:	1f 93       	push	r17
    2680:	cf 93       	push	r28
    2682:	df 93       	push	r29
    2684:	cd b7       	in	r28, 0x3d	; 61
    2686:	de b7       	in	r29, 0x3e	; 62
    2688:	ca 1b       	sub	r28, r26
    268a:	db 0b       	sbc	r29, r27
    268c:	cd bf       	out	0x3d, r28	; 61
    268e:	de bf       	out	0x3e, r29	; 62
    2690:	09 94       	ijmp

00002692 <__epilogue_restores__>:
    2692:	2a 88       	ldd	r2, Y+18	; 0x12
    2694:	39 88       	ldd	r3, Y+17	; 0x11
    2696:	48 88       	ldd	r4, Y+16	; 0x10
    2698:	5f 84       	ldd	r5, Y+15	; 0x0f
    269a:	6e 84       	ldd	r6, Y+14	; 0x0e
    269c:	7d 84       	ldd	r7, Y+13	; 0x0d
    269e:	8c 84       	ldd	r8, Y+12	; 0x0c
    26a0:	9b 84       	ldd	r9, Y+11	; 0x0b
    26a2:	aa 84       	ldd	r10, Y+10	; 0x0a
    26a4:	b9 84       	ldd	r11, Y+9	; 0x09
    26a6:	c8 84       	ldd	r12, Y+8	; 0x08
    26a8:	df 80       	ldd	r13, Y+7	; 0x07
    26aa:	ee 80       	ldd	r14, Y+6	; 0x06
    26ac:	fd 80       	ldd	r15, Y+5	; 0x05
    26ae:	0c 81       	ldd	r16, Y+4	; 0x04
    26b0:	1b 81       	ldd	r17, Y+3	; 0x03
    26b2:	aa 81       	ldd	r26, Y+2	; 0x02
    26b4:	b9 81       	ldd	r27, Y+1	; 0x01
    26b6:	ce 0f       	add	r28, r30
    26b8:	d1 1d       	adc	r29, r1
    26ba:	cd bf       	out	0x3d, r28	; 61
    26bc:	de bf       	out	0x3e, r29	; 62
    26be:	ed 01       	movw	r28, r26
    26c0:	08 95       	ret

000026c2 <__umulhisi3>:
    26c2:	a2 9f       	mul	r26, r18
    26c4:	b0 01       	movw	r22, r0
    26c6:	b3 9f       	mul	r27, r19
    26c8:	c0 01       	movw	r24, r0
    26ca:	a3 9f       	mul	r26, r19
    26cc:	70 0d       	add	r23, r0
    26ce:	81 1d       	adc	r24, r1
    26d0:	11 24       	eor	r1, r1
    26d2:	91 1d       	adc	r25, r1
    26d4:	b2 9f       	mul	r27, r18
    26d6:	70 0d       	add	r23, r0
    26d8:	81 1d       	adc	r24, r1
    26da:	11 24       	eor	r1, r1
    26dc:	91 1d       	adc	r25, r1
    26de:	08 95       	ret

000026e0 <_exit>:
    26e0:	f8 94       	cli

000026e2 <__stop_program>:
    26e2:	ff cf       	rjmp	.-2      	; 0x26e2 <__stop_program>


CP2102_miniOS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803c00  00803c00  00002710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000269c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00803c00  00803c00  00002710  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002710  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000276c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  000027ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002427  00000000  00000000  0000284c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001758  00000000  00000000  00004c73  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011d7  00000000  00000000  000063cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000268  00000000  00000000  000075a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000106d  00000000  00000000  0000780c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001297  00000000  00000000  00008879  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  00009b10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8b 01 	jmp	0x316	; 0x316 <__ctors_end>
       4:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
       8:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
       c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      10:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      14:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      18:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      1c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      20:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      24:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      28:	0c 94 33 0c 	jmp	0x1866	; 0x1866 <__vector_10>
      2c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      30:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      34:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__vector_13>
      38:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      3c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      40:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      44:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      48:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      4c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      50:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      54:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      58:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      5c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      60:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      64:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      68:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      6c:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      70:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      74:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      78:	0c 94 9d 01 	jmp	0x33a	; 0x33a <__bad_interrupt>
      7c:	cc 02       	muls	r28, r28
      7e:	cc 02       	muls	r28, r28
      80:	f9 02       	muls	r31, r25
      82:	2c 03       	fmul	r18, r20
      84:	67 03       	mulsu	r22, r23
      86:	92 03       	fmuls	r17, r18
      88:	92 03       	fmuls	r17, r18
      8a:	92 03       	fmuls	r17, r18
      8c:	92 03       	fmuls	r17, r18
      8e:	92 03       	fmuls	r17, r18
      90:	92 03       	fmuls	r17, r18
      92:	92 03       	fmuls	r17, r18
      94:	92 03       	fmuls	r17, r18
      96:	92 03       	fmuls	r17, r18
      98:	92 03       	fmuls	r17, r18
      9a:	92 03       	fmuls	r17, r18
      9c:	92 03       	fmuls	r17, r18
      9e:	92 03       	fmuls	r17, r18
      a0:	92 03       	fmuls	r17, r18
      a2:	92 03       	fmuls	r17, r18
      a4:	92 03       	fmuls	r17, r18
      a6:	92 03       	fmuls	r17, r18
      a8:	92 03       	fmuls	r17, r18
      aa:	92 03       	fmuls	r17, r18
      ac:	92 03       	fmuls	r17, r18
      ae:	92 03       	fmuls	r17, r18
      b0:	92 03       	fmuls	r17, r18
      b2:	92 03       	fmuls	r17, r18
      b4:	92 03       	fmuls	r17, r18
      b6:	92 03       	fmuls	r17, r18
      b8:	92 03       	fmuls	r17, r18
      ba:	92 03       	fmuls	r17, r18
      bc:	79 02       	muls	r23, r25
      be:	a2 02       	muls	r26, r18
      c0:	aa 06       	cpc	r10, r26
      c2:	af 06       	cpc	r10, r31
      c4:	b6 06       	cpc	r11, r22
      c6:	bd 06       	cpc	r11, r29
      c8:	c4 06       	cpc	r12, r20
      ca:	cb 06       	cpc	r12, r27
      cc:	d2 06       	cpc	r13, r18
      ce:	d7 06       	cpc	r13, r23
      d0:	d7 06       	cpc	r13, r23
      d2:	d7 06       	cpc	r13, r23
      d4:	d7 06       	cpc	r13, r23
      d6:	d7 06       	cpc	r13, r23
      d8:	d7 06       	cpc	r13, r23
      da:	d7 06       	cpc	r13, r23
      dc:	d7 06       	cpc	r13, r23
      de:	d7 06       	cpc	r13, r23
      e0:	d7 06       	cpc	r13, r23
      e2:	d7 06       	cpc	r13, r23
      e4:	d7 06       	cpc	r13, r23
      e6:	d7 06       	cpc	r13, r23
      e8:	d7 06       	cpc	r13, r23
      ea:	d7 06       	cpc	r13, r23
      ec:	d7 06       	cpc	r13, r23
      ee:	d7 06       	cpc	r13, r23
      f0:	d7 06       	cpc	r13, r23
      f2:	d7 06       	cpc	r13, r23
      f4:	d7 06       	cpc	r13, r23
      f6:	d7 06       	cpc	r13, r23
      f8:	d7 06       	cpc	r13, r23
      fa:	d7 06       	cpc	r13, r23
      fc:	d7 06       	cpc	r13, r23
      fe:	d7 06       	cpc	r13, r23
     100:	aa 06       	cpc	r10, r26
     102:	af 06       	cpc	r10, r31
     104:	b6 06       	cpc	r11, r22
     106:	bd 06       	cpc	r11, r29
     108:	c4 06       	cpc	r12, r20
     10a:	cb 06       	cpc	r12, r27
     10c:	d2 06       	cpc	r13, r18
     10e:	ab 09       	sbc	r26, r11
     110:	60 0a       	sbc	r6, r16
     112:	60 0a       	sbc	r6, r16
     114:	47 09       	sbc	r20, r7
     116:	52 09       	sbc	r21, r2
     118:	58 09       	sbc	r21, r8
     11a:	63 09       	sbc	r22, r3
     11c:	6e 09       	sbc	r22, r14
     11e:	79 09       	sbc	r23, r9
     120:	84 09       	sbc	r24, r4
     122:	8f 09       	sbc	r24, r15
     124:	95 09       	sbc	r25, r5
     126:	a0 09       	sbc	r26, r0
     128:	60 0a       	sbc	r6, r16
     12a:	60 0a       	sbc	r6, r16
     12c:	60 0a       	sbc	r6, r16
     12e:	60 0a       	sbc	r6, r16
     130:	60 0a       	sbc	r6, r16
     132:	60 0a       	sbc	r6, r16
     134:	60 0a       	sbc	r6, r16
     136:	60 0a       	sbc	r6, r16
     138:	60 0a       	sbc	r6, r16
     13a:	60 0a       	sbc	r6, r16
     13c:	60 0a       	sbc	r6, r16
     13e:	b1 09       	sbc	r27, r1
     140:	60 0a       	sbc	r6, r16
     142:	60 0a       	sbc	r6, r16
     144:	60 0a       	sbc	r6, r16
     146:	60 0a       	sbc	r6, r16
     148:	60 0a       	sbc	r6, r16
     14a:	60 0a       	sbc	r6, r16
     14c:	60 0a       	sbc	r6, r16
     14e:	60 0a       	sbc	r6, r16
     150:	60 0a       	sbc	r6, r16
     152:	60 0a       	sbc	r6, r16
     154:	60 0a       	sbc	r6, r16
     156:	60 0a       	sbc	r6, r16
     158:	60 0a       	sbc	r6, r16
     15a:	60 0a       	sbc	r6, r16
     15c:	60 0a       	sbc	r6, r16
     15e:	60 0a       	sbc	r6, r16
     160:	60 0a       	sbc	r6, r16
     162:	60 0a       	sbc	r6, r16
     164:	60 0a       	sbc	r6, r16
     166:	60 0a       	sbc	r6, r16
     168:	60 0a       	sbc	r6, r16
     16a:	60 0a       	sbc	r6, r16
     16c:	60 0a       	sbc	r6, r16
     16e:	60 0a       	sbc	r6, r16
     170:	60 0a       	sbc	r6, r16
     172:	60 0a       	sbc	r6, r16
     174:	60 0a       	sbc	r6, r16
     176:	60 0a       	sbc	r6, r16
     178:	60 0a       	sbc	r6, r16
     17a:	60 0a       	sbc	r6, r16
     17c:	60 0a       	sbc	r6, r16
     17e:	b1 09       	sbc	r27, r1
     180:	60 0a       	sbc	r6, r16
     182:	60 0a       	sbc	r6, r16
     184:	60 0a       	sbc	r6, r16
     186:	60 0a       	sbc	r6, r16
     188:	60 0a       	sbc	r6, r16
     18a:	60 0a       	sbc	r6, r16
     18c:	60 0a       	sbc	r6, r16
     18e:	60 0a       	sbc	r6, r16
     190:	60 0a       	sbc	r6, r16
     192:	60 0a       	sbc	r6, r16
     194:	60 0a       	sbc	r6, r16
     196:	60 0a       	sbc	r6, r16
     198:	60 0a       	sbc	r6, r16
     19a:	60 0a       	sbc	r6, r16
     19c:	60 0a       	sbc	r6, r16
     19e:	60 0a       	sbc	r6, r16
     1a0:	60 0a       	sbc	r6, r16
     1a2:	60 0a       	sbc	r6, r16
     1a4:	60 0a       	sbc	r6, r16
     1a6:	60 0a       	sbc	r6, r16
     1a8:	60 0a       	sbc	r6, r16
     1aa:	60 0a       	sbc	r6, r16
     1ac:	60 0a       	sbc	r6, r16
     1ae:	60 0a       	sbc	r6, r16
     1b0:	60 0a       	sbc	r6, r16
     1b2:	60 0a       	sbc	r6, r16
     1b4:	60 0a       	sbc	r6, r16
     1b6:	60 0a       	sbc	r6, r16
     1b8:	60 0a       	sbc	r6, r16
     1ba:	60 0a       	sbc	r6, r16
     1bc:	60 0a       	sbc	r6, r16
     1be:	60 0a       	sbc	r6, r16
     1c0:	60 0a       	sbc	r6, r16
     1c2:	60 0a       	sbc	r6, r16
     1c4:	60 0a       	sbc	r6, r16
     1c6:	60 0a       	sbc	r6, r16
     1c8:	60 0a       	sbc	r6, r16
     1ca:	60 0a       	sbc	r6, r16
     1cc:	60 0a       	sbc	r6, r16
     1ce:	60 0a       	sbc	r6, r16
     1d0:	60 0a       	sbc	r6, r16
     1d2:	60 0a       	sbc	r6, r16
     1d4:	60 0a       	sbc	r6, r16
     1d6:	60 0a       	sbc	r6, r16
     1d8:	60 0a       	sbc	r6, r16
     1da:	60 0a       	sbc	r6, r16
     1dc:	60 0a       	sbc	r6, r16
     1de:	60 0a       	sbc	r6, r16
     1e0:	60 0a       	sbc	r6, r16
     1e2:	60 0a       	sbc	r6, r16
     1e4:	60 0a       	sbc	r6, r16
     1e6:	60 0a       	sbc	r6, r16
     1e8:	60 0a       	sbc	r6, r16
     1ea:	60 0a       	sbc	r6, r16
     1ec:	60 0a       	sbc	r6, r16
     1ee:	60 0a       	sbc	r6, r16
     1f0:	60 0a       	sbc	r6, r16
     1f2:	60 0a       	sbc	r6, r16
     1f4:	60 0a       	sbc	r6, r16
     1f6:	60 0a       	sbc	r6, r16
     1f8:	60 0a       	sbc	r6, r16
     1fa:	60 0a       	sbc	r6, r16
     1fc:	60 0a       	sbc	r6, r16
     1fe:	60 0a       	sbc	r6, r16
     200:	60 0a       	sbc	r6, r16
     202:	60 0a       	sbc	r6, r16
     204:	60 0a       	sbc	r6, r16
     206:	60 0a       	sbc	r6, r16
     208:	60 0a       	sbc	r6, r16
     20a:	60 0a       	sbc	r6, r16
     20c:	60 0a       	sbc	r6, r16
     20e:	56 0a       	sbc	r5, r22
     210:	60 0a       	sbc	r6, r16
     212:	60 0a       	sbc	r6, r16
     214:	bc 09       	sbc	r27, r12
     216:	cd 09       	sbc	r28, r13
     218:	d6 09       	sbc	r29, r6
     21a:	e7 09       	sbc	r30, r7
     21c:	f8 09       	sbc	r31, r8
     21e:	09 0a       	sbc	r0, r25
     220:	1a 0a       	sbc	r1, r26
     222:	2b 0a       	sbc	r2, r27
     224:	34 0a       	sbc	r3, r20
     226:	45 0a       	sbc	r4, r21
     228:	6c 0a       	sbc	r6, r28
     22a:	7a 0a       	sbc	r7, r26
     22c:	6e 0a       	sbc	r6, r30
     22e:	70 0a       	sbc	r7, r16
     230:	72 0a       	sbc	r7, r18
     232:	74 0a       	sbc	r7, r20
     234:	76 0a       	sbc	r7, r22
     236:	78 0a       	sbc	r7, r24
     238:	d6 0a       	sbc	r13, r22
     23a:	dc 0a       	sbc	r13, r28
     23c:	e2 0a       	sbc	r14, r18
     23e:	e8 0a       	sbc	r14, r24
     240:	ee 0a       	sbc	r14, r30
     242:	f4 0a       	sbc	r15, r20
     244:	fa 0a       	sbc	r15, r26
     246:	00 0b       	sbc	r16, r16
     248:	21 0b       	sbc	r18, r17
     24a:	42 0b       	sbc	r20, r18
     24c:	63 0b       	sbc	r22, r19
     24e:	84 0b       	sbc	r24, r20
     250:	a6 0b       	sbc	r26, r22
     252:	c7 0b       	sbc	r28, r23
     254:	e8 0b       	sbc	r30, r24
     256:	09 0c       	add	r0, r9
     258:	07 63       	ori	r16, 0x37	; 55
     25a:	42 36       	cpi	r20, 0x62	; 98
     25c:	b7 9b       	sbis	0x16, 7	; 22
     25e:	d8 a7       	std	Y+40, r29	; 0x28
     260:	1a 39       	cpi	r17, 0x9A	; 154
     262:	68 56       	subi	r22, 0x68	; 104
     264:	18 ae       	std	Y+56, r1	; 0x38
     266:	ba ab       	std	Y+50, r27	; 0x32
     268:	55 8c       	ldd	r5, Z+29	; 0x1d
     26a:	1d 3c       	cpi	r17, 0xCD	; 205
     26c:	b7 cc       	rjmp	.-1682   	; 0xfffffbdc <__eeprom_end+0xff7efbdc>
     26e:	57 63       	ori	r21, 0x37	; 55
     270:	bd 6d       	ori	r27, 0xDD	; 221
     272:	ed fd       	.word	0xfded	; ????
     274:	75 3e       	cpi	r23, 0xE5	; 229
     276:	f6 17       	cp	r31, r22
     278:	72 31       	cpi	r23, 0x12	; 18
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	08 00       	.word	0x0008	; ????
     282:	00 00       	nop
     284:	be 92       	st	-X, r11
     286:	24 49       	sbci	r18, 0x94	; 148
     288:	12 3e       	cpi	r17, 0xE2	; 226
     28a:	ab aa       	std	Y+51, r10	; 0x33
     28c:	aa 2a       	or	r10, r26
     28e:	be cd       	rjmp	.-1156   	; 0xfffffe0c <__eeprom_end+0xff7efe0c>
     290:	cc cc       	rjmp	.-1640   	; 0xfffffc2a <__eeprom_end+0xff7efc2a>
     292:	4c 3e       	cpi	r20, 0xEC	; 236
     294:	00 00       	nop
     296:	00 80       	ld	r0, Z
     298:	be ab       	std	Y+54, r27	; 0x36
     29a:	aa aa       	std	Y+50, r10	; 0x32
     29c:	aa 3e       	cpi	r26, 0xEA	; 234
     29e:	00 00       	nop
     2a0:	00 00       	nop
     2a2:	bf 00       	.word	0x00bf	; ????
     2a4:	00 00       	nop
     2a6:	80 3f       	cpi	r24, 0xF0	; 240
     2a8:	00 00       	nop
     2aa:	00 00       	nop
     2ac:	00 08       	sbc	r0, r0
     2ae:	41 78       	andi	r20, 0x81	; 129
     2b0:	d3 bb       	out	0x13, r29	; 19
     2b2:	43 87       	std	Z+11, r20	; 0x0b
     2b4:	d1 13       	cpse	r29, r17
     2b6:	3d 19       	sub	r19, r13
     2b8:	0e 3c       	cpi	r16, 0xCE	; 206
     2ba:	c3 bd       	out	0x23, r28	; 35
     2bc:	42 82       	std	Z+2, r4	; 0x02
     2be:	ad 2b       	or	r26, r29
     2c0:	3e 68       	ori	r19, 0x8E	; 142
     2c2:	ec 82       	std	Y+4, r14	; 0x04
     2c4:	76 be       	out	0x36, r7	; 54
     2c6:	d9 8f       	std	Y+25, r29	; 0x19
     2c8:	e1 a9       	ldd	r30, Z+49	; 0x31
     2ca:	3e 4c       	sbci	r19, 0xCE	; 206
     2cc:	80 ef       	ldi	r24, 0xF0	; 240
     2ce:	ff be       	out	0x3f, r15	; 63
     2d0:	01 c4       	rjmp	.+2050   	; 0xad4 <ftoaL+0x2c8>
     2d2:	ff 7f       	andi	r31, 0xFF	; 255
     2d4:	3f 00       	.word	0x003f	; ????
     2d6:	00 00       	nop
	...

000002da <__trampolines_end>:
     2da:	4e 41       	sbci	r20, 0x1E	; 30
     2dc:	4e 49       	Address 0x000002dc is out of bounds.
.word	0xffff	; ????

000002dd <pstr_inity>:
     2dd:	49 4e 49 54 59                                      INITY

000002e2 <pstr_inf>:
     2e2:	49 4e 46                                            INF

000002e5 <pwr_m10>:
     2e5:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     2f5:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000002fd <pwr_p10>:
     2fd:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     30d:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000316 <__ctors_end>:
     316:	11 24       	eor	r1, r1
     318:	1f be       	out	0x3f, r1	; 63
     31a:	cf ef       	ldi	r28, 0xFF	; 255
     31c:	cd bf       	out	0x3d, r28	; 61
     31e:	df e3       	ldi	r29, 0x3F	; 63
     320:	de bf       	out	0x3e, r29	; 62

00000322 <__do_clear_bss>:
     322:	2c e3       	ldi	r18, 0x3C	; 60
     324:	a0 e0       	ldi	r26, 0x00	; 0
     326:	bc e3       	ldi	r27, 0x3C	; 60
     328:	01 c0       	rjmp	.+2      	; 0x32c <.do_clear_bss_start>

0000032a <.do_clear_bss_loop>:
     32a:	1d 92       	st	X+, r1

0000032c <.do_clear_bss_start>:
     32c:	a0 35       	cpi	r26, 0x50	; 80
     32e:	b2 07       	cpc	r27, r18
     330:	e1 f7       	brne	.-8      	; 0x32a <.do_clear_bss_loop>
     332:	0e 94 0f 06 	call	0xc1e	; 0xc1e <main>
     336:	0c 94 4c 13 	jmp	0x2698	; 0x2698 <_exit>

0000033a <__bad_interrupt>:
     33a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000033e <Receive_data_byte>:
	float inc = 1;
	for(int m = 0; m < afterpoint; m++){
	inc = inc/10.0;}
	inc = inc*0.55;																	//Attempt to avoid trailing nines
	num = num + inc;
	return num;}
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	eb e0       	ldi	r30, 0x0B	; 11
     344:	fa e0       	ldi	r31, 0x0A	; 10
     346:	80 81       	ld	r24, Z
     348:	84 ff       	sbrs	r24, 4
     34a:	fd cf       	rjmp	.-6      	; 0x346 <Receive_data_byte+0x8>
     34c:	eb e0       	ldi	r30, 0x0B	; 11
     34e:	fa e0       	ldi	r31, 0x0A	; 10
     350:	80 81       	ld	r24, Z
     352:	80 61       	ori	r24, 0x10	; 16
     354:	80 83       	st	Z, r24
     356:	e0 e4       	ldi	r30, 0x40	; 64
     358:	f4 e0       	ldi	r31, 0x04	; 4
     35a:	80 81       	ld	r24, Z
     35c:	87 7f       	andi	r24, 0xF7	; 247
     35e:	80 83       	st	Z, r24
     360:	e8 e2       	ldi	r30, 0x28	; 40
     362:	fa e0       	ldi	r31, 0x0A	; 10
     364:	80 81       	ld	r24, Z
     366:	91 81       	ldd	r25, Z+1	; 0x01
     368:	88 53       	subi	r24, 0x38	; 56
     36a:	9f 4f       	sbci	r25, 0xFF	; 255
     36c:	80 83       	st	Z, r24
     36e:	91 83       	std	Z+1, r25	; 0x01
     370:	eb e0       	ldi	r30, 0x0B	; 11
     372:	fa e0       	ldi	r31, 0x0A	; 10
     374:	80 81       	ld	r24, Z
     376:	84 ff       	sbrs	r24, 4
     378:	fd cf       	rjmp	.-6      	; 0x374 <Receive_data_byte+0x36>
     37a:	eb e0       	ldi	r30, 0x0B	; 11
     37c:	fa e0       	ldi	r31, 0x0A	; 10
     37e:	80 81       	ld	r24, Z
     380:	80 61       	ori	r24, 0x10	; 16
     382:	80 83       	st	Z, r24
     384:	48 e0       	ldi	r20, 0x08	; 8
     386:	50 e0       	ldi	r21, 0x00	; 0
     388:	80 e0       	ldi	r24, 0x00	; 0
     38a:	a8 e2       	ldi	r26, 0x28	; 40
     38c:	ba e0       	ldi	r27, 0x0A	; 10
     38e:	c8 e4       	ldi	r28, 0x48	; 72
     390:	d4 e0       	ldi	r29, 0x04	; 4
     392:	2d 91       	ld	r18, X+
     394:	3c 91       	ld	r19, X
     396:	11 97       	sbiw	r26, 0x01	; 1
     398:	28 53       	subi	r18, 0x38	; 56
     39a:	3f 4f       	sbci	r19, 0xFF	; 255
     39c:	2d 93       	st	X+, r18
     39e:	3c 93       	st	X, r19
     3a0:	11 97       	sbiw	r26, 0x01	; 1
     3a2:	90 81       	ld	r25, Z
     3a4:	94 ff       	sbrs	r25, 4
     3a6:	fd cf       	rjmp	.-6      	; 0x3a2 <Receive_data_byte+0x64>
     3a8:	90 81       	ld	r25, Z
     3aa:	90 61       	ori	r25, 0x10	; 16
     3ac:	90 83       	st	Z, r25
     3ae:	88 0f       	add	r24, r24
     3b0:	98 81       	ld	r25, Y
     3b2:	93 fd       	sbrc	r25, 3
     3b4:	81 60       	ori	r24, 0x01	; 1
     3b6:	41 50       	subi	r20, 0x01	; 1
     3b8:	51 09       	sbc	r21, r1
     3ba:	59 f7       	brne	.-42     	; 0x392 <Receive_data_byte+0x54>
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	08 95       	ret

000003c2 <Transmit_data_byte>:
     3c2:	cf 93       	push	r28
     3c4:	df 93       	push	r29
     3c6:	27 e0       	ldi	r18, 0x07	; 7
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	eb e0       	ldi	r30, 0x0B	; 11
     3cc:	fa e0       	ldi	r31, 0x0A	; 10
     3ce:	48 2f       	mov	r20, r24
     3d0:	50 e0       	ldi	r21, 0x00	; 0
     3d2:	c0 e4       	ldi	r28, 0x40	; 64
     3d4:	d4 e0       	ldi	r29, 0x04	; 4
     3d6:	a8 e2       	ldi	r26, 0x28	; 40
     3d8:	ba e0       	ldi	r27, 0x0A	; 10
     3da:	80 81       	ld	r24, Z
     3dc:	84 ff       	sbrs	r24, 4
     3de:	fd cf       	rjmp	.-6      	; 0x3da <Transmit_data_byte+0x18>
     3e0:	80 81       	ld	r24, Z
     3e2:	80 61       	ori	r24, 0x10	; 16
     3e4:	80 83       	st	Z, r24
     3e6:	ca 01       	movw	r24, r20
     3e8:	02 2e       	mov	r0, r18
     3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <Transmit_data_byte+0x2e>
     3ec:	95 95       	asr	r25
     3ee:	87 95       	ror	r24
     3f0:	0a 94       	dec	r0
     3f2:	e2 f7       	brpl	.-8      	; 0x3ec <Transmit_data_byte+0x2a>
     3f4:	80 ff       	sbrs	r24, 0
     3f6:	04 c0       	rjmp	.+8      	; 0x400 <__LOCK_REGION_LENGTH__>
     3f8:	88 81       	ld	r24, Y
     3fa:	87 7f       	andi	r24, 0xF7	; 247
     3fc:	88 83       	st	Y, r24
     3fe:	03 c0       	rjmp	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     400:	88 81       	ld	r24, Y
     402:	88 60       	ori	r24, 0x08	; 8
     404:	88 83       	st	Y, r24
     406:	8d 91       	ld	r24, X+
     408:	9c 91       	ld	r25, X
     40a:	11 97       	sbiw	r26, 0x01	; 1
     40c:	88 53       	subi	r24, 0x38	; 56
     40e:	9f 4f       	sbci	r25, 0xFF	; 255
     410:	8d 93       	st	X+, r24
     412:	9c 93       	st	X, r25
     414:	11 97       	sbiw	r26, 0x01	; 1
     416:	21 50       	subi	r18, 0x01	; 1
     418:	31 09       	sbc	r19, r1
     41a:	f8 f6       	brcc	.-66     	; 0x3da <Transmit_data_byte+0x18>
     41c:	eb e0       	ldi	r30, 0x0B	; 11
     41e:	fa e0       	ldi	r31, 0x0A	; 10
     420:	80 81       	ld	r24, Z
     422:	84 ff       	sbrs	r24, 4
     424:	fd cf       	rjmp	.-6      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     426:	eb e0       	ldi	r30, 0x0B	; 11
     428:	fa e0       	ldi	r31, 0x0A	; 10
     42a:	80 81       	ld	r24, Z
     42c:	80 61       	ori	r24, 0x10	; 16
     42e:	80 83       	st	Z, r24
     430:	e0 e4       	ldi	r30, 0x40	; 64
     432:	f4 e0       	ldi	r31, 0x04	; 4
     434:	80 81       	ld	r24, Z
     436:	87 7f       	andi	r24, 0xF7	; 247
     438:	80 83       	st	Z, r24
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	08 95       	ret

00000440 <comms_transaction>:
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
     448:	81 11       	cpse	r24, r1
     44a:	44 c0       	rjmp	.+136    	; 0x4d4 <comms_transaction+0x94>
     44c:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     450:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     454:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     458:	8f 3f       	cpi	r24, 0xFF	; 255
     45a:	09 f4       	brne	.+2      	; 0x45e <comms_transaction+0x1e>
     45c:	63 c1       	rjmp	.+710    	; 0x724 <comms_transaction+0x2e4>
     45e:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     462:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     466:	89 2b       	or	r24, r25
     468:	a9 f5       	brne	.+106    	; 0x4d4 <comms_transaction+0x94>
     46a:	81 e0       	ldi	r24, 0x01	; 1
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     472:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     476:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     47a:	80 93 07 3c 	sts	0x3C07, r24	; 0x803c07 <transaction_type>
     47e:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
     482:	86 34       	cpi	r24, 0x46	; 70
     484:	31 f4       	brne	.+12     	; 0x492 <comms_transaction+0x52>
     486:	88 ed       	ldi	r24, 0xD8	; 216
     488:	84 bf       	out	0x34, r24	; 52
     48a:	83 e0       	ldi	r24, 0x03	; 3
     48c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__TEXT_REGION_LENGTH__+0x700100>
     490:	ff cf       	rjmp	.-2      	; 0x490 <comms_transaction+0x50>
     492:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
     496:	87 34       	cpi	r24, 0x47	; 71
     498:	09 f0       	breq	.+2      	; 0x49c <comms_transaction+0x5c>
     49a:	44 c1       	rjmp	.+648    	; 0x724 <comms_transaction+0x2e4>
     49c:	80 91 17 3c 	lds	r24, 0x3C17	; 0x803c17 <brightness_control>
     4a0:	90 91 18 3c 	lds	r25, 0x3C18	; 0x803c18 <brightness_control+0x1>
     4a4:	86 3d       	cpi	r24, 0xD6	; 214
     4a6:	96 40       	sbci	r25, 0x06	; 6
     4a8:	39 f4       	brne	.+14     	; 0x4b8 <comms_transaction+0x78>
     4aa:	8a ef       	ldi	r24, 0xFA	; 250
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	80 93 17 3c 	sts	0x3C17, r24	; 0x803c17 <brightness_control>
     4b2:	90 93 18 3c 	sts	0x3C18, r25	; 0x803c18 <brightness_control+0x1>
     4b6:	06 c0       	rjmp	.+12     	; 0x4c4 <comms_transaction+0x84>
     4b8:	86 ed       	ldi	r24, 0xD6	; 214
     4ba:	96 e0       	ldi	r25, 0x06	; 6
     4bc:	80 93 17 3c 	sts	0x3C17, r24	; 0x803c17 <brightness_control>
     4c0:	90 93 18 3c 	sts	0x3C18, r25	; 0x803c18 <brightness_control+0x1>
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     4ca:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     4ce:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     4d2:	28 c1       	rjmp	.+592    	; 0x724 <comms_transaction+0x2e4>
     4d4:	e0 91 07 3c 	lds	r30, 0x3C07	; 0x803c07 <transaction_type>
     4d8:	8e 2f       	mov	r24, r30
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	fc 01       	movw	r30, r24
     4de:	e1 54       	subi	r30, 0x41	; 65
     4e0:	f1 09       	sbc	r31, r1
     4e2:	e2 32       	cpi	r30, 0x22	; 34
     4e4:	f1 05       	cpc	r31, r1
     4e6:	08 f0       	brcs	.+2      	; 0x4ea <comms_transaction+0xaa>
     4e8:	1d c1       	rjmp	.+570    	; 0x724 <comms_transaction+0x2e4>
     4ea:	e2 5c       	subi	r30, 0xC2	; 194
     4ec:	ff 4f       	sbci	r31, 0xFF	; 255
     4ee:	0c 94 d2 10 	jmp	0x21a4	; 0x21a4 <__tablejump2__>
     4f2:	c0 91 04 3c 	lds	r28, 0x3C04	; 0x803c04 <byte_counter>
     4f6:	d0 91 05 3c 	lds	r29, 0x3C05	; 0x803c05 <byte_counter+0x1>
     4fa:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     4fe:	c7 5e       	subi	r28, 0xE7	; 231
     500:	d3 4c       	sbci	r29, 0xC3	; 195
     502:	88 83       	st	Y, r24
     504:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     508:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     50c:	01 96       	adiw	r24, 0x01	; 1
     50e:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     512:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     516:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     51a:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     51e:	05 97       	sbiw	r24, 0x05	; 5
     520:	09 f0       	breq	.+2      	; 0x524 <comms_transaction+0xe4>
     522:	00 c1       	rjmp	.+512    	; 0x724 <comms_transaction+0x2e4>
     524:	ee e1       	ldi	r30, 0x1E	; 30
     526:	fc e3       	ldi	r31, 0x3C	; 60
     528:	89 e2       	ldi	r24, 0x29	; 41
     52a:	9c e3       	ldi	r25, 0x3C	; 60
     52c:	11 92       	st	Z+, r1
     52e:	e8 17       	cp	r30, r24
     530:	f9 07       	cpc	r31, r25
     532:	e1 f7       	brne	.-8      	; 0x52c <comms_transaction+0xec>
     534:	81 e0       	ldi	r24, 0x01	; 1
     536:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     53a:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     53e:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     542:	f0 c0       	rjmp	.+480    	; 0x724 <comms_transaction+0x2e4>
     544:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     548:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     54c:	81 30       	cpi	r24, 0x01	; 1
     54e:	91 05       	cpc	r25, r1
     550:	19 f0       	breq	.+6      	; 0x558 <comms_transaction+0x118>
     552:	02 97       	sbiw	r24, 0x02	; 2
     554:	91 f0       	breq	.+36     	; 0x57a <comms_transaction+0x13a>
     556:	e6 c0       	rjmp	.+460    	; 0x724 <comms_transaction+0x2e4>
     558:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     562:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     566:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     56a:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     56e:	01 96       	adiw	r24, 0x01	; 1
     570:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     574:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     578:	d5 c0       	rjmp	.+426    	; 0x724 <comms_transaction+0x2e4>
     57a:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	80 93 4c 3c 	sts	0x3C4C, r24	; 0x803c4c <digit_num>
     584:	90 93 4d 3c 	sts	0x3C4D, r25	; 0x803c4d <digit_num+0x1>
     588:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     58c:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     596:	c6 c0       	rjmp	.+396    	; 0x724 <comms_transaction+0x2e4>
     598:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     59c:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     5a0:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     5a4:	81 30       	cpi	r24, 0x01	; 1
     5a6:	21 f4       	brne	.+8      	; 0x5b0 <comms_transaction+0x170>
     5a8:	10 92 3b 3c 	sts	0x3C3B, r1	; 0x803c3b <Rx_symbol>
     5ac:	80 93 03 3c 	sts	0x3C03, r24	; 0x803c03 <cr_keypress>
     5b0:	e0 91 04 3c 	lds	r30, 0x3C04	; 0x803c04 <byte_counter>
     5b4:	f0 91 05 3c 	lds	r31, 0x3C05	; 0x803c05 <byte_counter+0x1>
     5b8:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     5bc:	e7 5e       	subi	r30, 0xE7	; 231
     5be:	f3 4c       	sbci	r31, 0xC3	; 195
     5c0:	80 83       	st	Z, r24
     5c2:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     5c6:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     5ca:	01 96       	adiw	r24, 0x01	; 1
     5cc:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     5d0:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     5d4:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     5d8:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     5dc:	0a 97       	sbiw	r24, 0x0a	; 10
     5de:	09 f0       	breq	.+2      	; 0x5e2 <comms_transaction+0x1a2>
     5e0:	a1 c0       	rjmp	.+322    	; 0x724 <comms_transaction+0x2e4>
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     5e8:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     5ec:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     5f0:	99 c0       	rjmp	.+306    	; 0x724 <comms_transaction+0x2e4>
     5f2:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     5f6:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     5fa:	20 91 3b 3c 	lds	r18, 0x3C3B	; 0x803c3b <Rx_symbol>
     5fe:	80 91 2e 3c 	lds	r24, 0x3C2E	; 0x803c2e <Long_Num_from_UNO>
     602:	90 91 2f 3c 	lds	r25, 0x3C2F	; 0x803c2f <Long_Num_from_UNO+0x1>
     606:	a0 91 30 3c 	lds	r26, 0x3C30	; 0x803c30 <Long_Num_from_UNO+0x2>
     60a:	b0 91 31 3c 	lds	r27, 0x3C31	; 0x803c31 <Long_Num_from_UNO+0x3>
     60e:	ba 2f       	mov	r27, r26
     610:	a9 2f       	mov	r26, r25
     612:	98 2f       	mov	r25, r24
     614:	88 27       	eor	r24, r24
     616:	82 2b       	or	r24, r18
     618:	80 93 2e 3c 	sts	0x3C2E, r24	; 0x803c2e <Long_Num_from_UNO>
     61c:	90 93 2f 3c 	sts	0x3C2F, r25	; 0x803c2f <Long_Num_from_UNO+0x1>
     620:	a0 93 30 3c 	sts	0x3C30, r26	; 0x803c30 <Long_Num_from_UNO+0x2>
     624:	b0 93 31 3c 	sts	0x3C31, r27	; 0x803c31 <Long_Num_from_UNO+0x3>
     628:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     62c:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     630:	01 96       	adiw	r24, 0x01	; 1
     632:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     636:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     63a:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     63e:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     642:	05 97       	sbiw	r24, 0x05	; 5
     644:	09 f0       	breq	.+2      	; 0x648 <comms_transaction+0x208>
     646:	6e c0       	rjmp	.+220    	; 0x724 <comms_transaction+0x2e4>
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     64e:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     652:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     656:	66 c0       	rjmp	.+204    	; 0x724 <comms_transaction+0x2e4>
     658:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     65c:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	51 f4       	brne	.+20     	; 0x678 <comms_transaction+0x238>
     664:	8f e0       	ldi	r24, 0x0F	; 15
     666:	9c e3       	ldi	r25, 0x3C	; 60
     668:	80 93 0d 3c 	sts	0x3C0D, r24	; 0x803c0d <float_ptr>
     66c:	90 93 0e 3c 	sts	0x3C0E, r25	; 0x803c0e <float_ptr+0x1>
     670:	80 93 34 3c 	sts	0x3C34, r24	; 0x803c34 <char_ptr>
     674:	90 93 35 3c 	sts	0x3C35, r25	; 0x803c35 <char_ptr+0x1>
     678:	0e 94 9f 01 	call	0x33e	; 0x33e <Receive_data_byte>
     67c:	80 93 3b 3c 	sts	0x3C3B, r24	; 0x803c3b <Rx_symbol>
     680:	e0 91 34 3c 	lds	r30, 0x3C34	; 0x803c34 <char_ptr>
     684:	f0 91 35 3c 	lds	r31, 0x3C35	; 0x803c35 <char_ptr+0x1>
     688:	80 91 3b 3c 	lds	r24, 0x3C3B	; 0x803c3b <Rx_symbol>
     68c:	80 83       	st	Z, r24
     68e:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     692:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     696:	01 96       	adiw	r24, 0x01	; 1
     698:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     69c:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     6a0:	80 91 34 3c 	lds	r24, 0x3C34	; 0x803c34 <char_ptr>
     6a4:	90 91 35 3c 	lds	r25, 0x3C35	; 0x803c35 <char_ptr+0x1>
     6a8:	01 96       	adiw	r24, 0x01	; 1
     6aa:	80 93 34 3c 	sts	0x3C34, r24	; 0x803c34 <char_ptr>
     6ae:	90 93 35 3c 	sts	0x3C35, r25	; 0x803c35 <char_ptr+0x1>
     6b2:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     6b6:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     6ba:	05 97       	sbiw	r24, 0x05	; 5
     6bc:	99 f5       	brne	.+102    	; 0x724 <comms_transaction+0x2e4>
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     6c4:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     6c8:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     6cc:	2b c0       	rjmp	.+86     	; 0x724 <comms_transaction+0x2e4>
     6ce:	80 91 01 3c 	lds	r24, 0x3C01	; 0x803c01 <data_byte_ptr>
     6d2:	90 91 02 3c 	lds	r25, 0x3C02	; 0x803c02 <data_byte_ptr+0x1>
     6d6:	9c 01       	movw	r18, r24
     6d8:	2f 5f       	subi	r18, 0xFF	; 255
     6da:	3f 4f       	sbci	r19, 0xFF	; 255
     6dc:	20 93 01 3c 	sts	0x3C01, r18	; 0x803c01 <data_byte_ptr>
     6e0:	30 93 02 3c 	sts	0x3C02, r19	; 0x803c02 <data_byte_ptr+0x1>
     6e4:	fc 01       	movw	r30, r24
     6e6:	e7 5f       	subi	r30, 0xF7	; 247
     6e8:	f3 4c       	sbci	r31, 0xC3	; 195
     6ea:	80 81       	ld	r24, Z
     6ec:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <Transmit_data_byte>
     6f0:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     6f4:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     6f8:	01 96       	adiw	r24, 0x01	; 1
     6fa:	80 93 04 3c 	sts	0x3C04, r24	; 0x803c04 <byte_counter>
     6fe:	90 93 05 3c 	sts	0x3C05, r25	; 0x803c05 <byte_counter+0x1>
     702:	80 91 04 3c 	lds	r24, 0x3C04	; 0x803c04 <byte_counter>
     706:	90 91 05 3c 	lds	r25, 0x3C05	; 0x803c05 <byte_counter+0x1>
     70a:	05 97       	sbiw	r24, 0x05	; 5
     70c:	59 f4       	brne	.+22     	; 0x724 <comms_transaction+0x2e4>
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	80 93 06 3c 	sts	0x3C06, r24	; 0x803c06 <transaction_complete>
     714:	10 92 04 3c 	sts	0x3C04, r1	; 0x803c04 <byte_counter>
     718:	10 92 05 3c 	sts	0x3C05, r1	; 0x803c05 <byte_counter+0x1>
     71c:	10 92 01 3c 	sts	0x3C01, r1	; 0x803c01 <data_byte_ptr>
     720:	10 92 02 3c 	sts	0x3C02, r1	; 0x803c02 <data_byte_ptr+0x1>
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	08 95       	ret

0000072a <reverse>:
     72a:	9b 01       	movw	r18, r22
     72c:	21 50       	subi	r18, 0x01	; 1
     72e:	31 09       	sbc	r19, r1
     730:	12 16       	cp	r1, r18
     732:	13 06       	cpc	r1, r19
     734:	84 f4       	brge	.+32     	; 0x756 <reverse+0x2c>
     736:	fc 01       	movw	r30, r24
     738:	e6 0f       	add	r30, r22
     73a:	f7 1f       	adc	r31, r23
     73c:	dc 01       	movw	r26, r24
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	4c 91       	ld	r20, X
     744:	52 91       	ld	r21, -Z
     746:	5d 93       	st	X+, r21
     748:	40 83       	st	Z, r20
     74a:	01 96       	adiw	r24, 0x01	; 1
     74c:	21 50       	subi	r18, 0x01	; 1
     74e:	31 09       	sbc	r19, r1
     750:	82 17       	cp	r24, r18
     752:	93 07       	cpc	r25, r19
     754:	b4 f3       	brlt	.-20     	; 0x742 <reverse+0x18>
     756:	08 95       	ret

00000758 <longToStr>:
     758:	8f 92       	push	r8
     75a:	9f 92       	push	r9
     75c:	af 92       	push	r10
     75e:	bf 92       	push	r11
     760:	cf 92       	push	r12
     762:	df 92       	push	r13
     764:	ef 92       	push	r14
     766:	ff 92       	push	r15
     768:	0f 93       	push	r16
     76a:	1f 93       	push	r17
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	6a 01       	movw	r12, r20
     772:	79 01       	movw	r14, r18
     774:	61 15       	cp	r22, r1
     776:	71 05       	cpc	r23, r1
     778:	81 05       	cpc	r24, r1
     77a:	91 05       	cpc	r25, r1
     77c:	e9 f0       	breq	.+58     	; 0x7b8 <longToStr+0x60>
     77e:	8a 01       	movw	r16, r20
     780:	c0 e0       	ldi	r28, 0x00	; 0
     782:	d0 e0       	ldi	r29, 0x00	; 0
     784:	0f 2e       	mov	r0, r31
     786:	fa e0       	ldi	r31, 0x0A	; 10
     788:	8f 2e       	mov	r8, r31
     78a:	91 2c       	mov	r9, r1
     78c:	a1 2c       	mov	r10, r1
     78e:	b1 2c       	mov	r11, r1
     790:	f0 2d       	mov	r31, r0
     792:	21 96       	adiw	r28, 0x01	; 1
     794:	a5 01       	movw	r20, r10
     796:	94 01       	movw	r18, r8
     798:	0e 94 b3 10 	call	0x2166	; 0x2166 <__divmodsi4>
     79c:	60 5d       	subi	r22, 0xD0	; 208
     79e:	f8 01       	movw	r30, r16
     7a0:	61 93       	st	Z+, r22
     7a2:	8f 01       	movw	r16, r30
     7a4:	62 2f       	mov	r22, r18
     7a6:	73 2f       	mov	r23, r19
     7a8:	84 2f       	mov	r24, r20
     7aa:	95 2f       	mov	r25, r21
     7ac:	61 15       	cp	r22, r1
     7ae:	71 05       	cpc	r23, r1
     7b0:	81 05       	cpc	r24, r1
     7b2:	91 05       	cpc	r25, r1
     7b4:	71 f7       	brne	.-36     	; 0x792 <longToStr+0x3a>
     7b6:	02 c0       	rjmp	.+4      	; 0x7bc <longToStr+0x64>
     7b8:	c0 e0       	ldi	r28, 0x00	; 0
     7ba:	d0 e0       	ldi	r29, 0x00	; 0
     7bc:	ce 15       	cp	r28, r14
     7be:	df 05       	cpc	r29, r15
     7c0:	5c f4       	brge	.+22     	; 0x7d8 <longToStr+0x80>
     7c2:	cc 0d       	add	r28, r12
     7c4:	dd 1d       	adc	r29, r13
     7c6:	96 01       	movw	r18, r12
     7c8:	2e 0d       	add	r18, r14
     7ca:	3f 1d       	adc	r19, r15
     7cc:	80 e3       	ldi	r24, 0x30	; 48
     7ce:	89 93       	st	Y+, r24
     7d0:	c2 17       	cp	r28, r18
     7d2:	d3 07       	cpc	r29, r19
     7d4:	e1 f7       	brne	.-8      	; 0x7ce <longToStr+0x76>
     7d6:	01 c0       	rjmp	.+2      	; 0x7da <longToStr+0x82>
     7d8:	7e 01       	movw	r14, r28
     7da:	b7 01       	movw	r22, r14
     7dc:	c6 01       	movw	r24, r12
     7de:	0e 94 95 03 	call	0x72a	; 0x72a <reverse>
     7e2:	f6 01       	movw	r30, r12
     7e4:	ee 0d       	add	r30, r14
     7e6:	ff 1d       	adc	r31, r15
     7e8:	10 82       	st	Z, r1
     7ea:	b7 01       	movw	r22, r14
     7ec:	ff 0c       	add	r15, r15
     7ee:	88 0b       	sbc	r24, r24
     7f0:	99 0b       	sbc	r25, r25
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	df 90       	pop	r13
     800:	cf 90       	pop	r12
     802:	bf 90       	pop	r11
     804:	af 90       	pop	r10
     806:	9f 90       	pop	r9
     808:	8f 90       	pop	r8
     80a:	08 95       	ret

0000080c <ftoaL>:
     80c:	4f 92       	push	r4
     80e:	5f 92       	push	r5
     810:	6f 92       	push	r6
     812:	7f 92       	push	r7
     814:	8f 92       	push	r8
     816:	9f 92       	push	r9
     818:	af 92       	push	r10
     81a:	bf 92       	push	r11
     81c:	cf 92       	push	r12
     81e:	df 92       	push	r13
     820:	ef 92       	push	r14
     822:	ff 92       	push	r15
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	cd b7       	in	r28, 0x3d	; 61
     82e:	de b7       	in	r29, 0x3e	; 62
     830:	26 97       	sbiw	r28, 0x06	; 6
     832:	cd bf       	out	0x3d, r28	; 61
     834:	de bf       	out	0x3e, r29	; 62
     836:	6b 01       	movw	r12, r22
     838:	7c 01       	movw	r14, r24
     83a:	20 e0       	ldi	r18, 0x00	; 0
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	a9 01       	movw	r20, r18
     840:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
     844:	88 23       	and	r24, r24
     846:	24 f0       	brlt	.+8      	; 0x850 <ftoaL+0x44>
     848:	8b e2       	ldi	r24, 0x2B	; 43
     84a:	80 93 08 3c 	sts	0x3C08, r24	; 0x803c08 <sign>
     84e:	07 c0       	rjmp	.+14     	; 0x85e <ftoaL+0x52>
     850:	8d e2       	ldi	r24, 0x2D	; 45
     852:	80 93 08 3c 	sts	0x3C08, r24	; 0x803c08 <sign>
     856:	f7 fa       	bst	r15, 7
     858:	f0 94       	com	r15
     85a:	f7 f8       	bld	r15, 7
     85c:	f0 94       	com	r15
     85e:	ed e3       	ldi	r30, 0x3D	; 61
     860:	fc e3       	ldi	r31, 0x3C	; 60
     862:	8c e4       	ldi	r24, 0x4C	; 76
     864:	9c e3       	ldi	r25, 0x3C	; 60
     866:	11 92       	st	Z+, r1
     868:	e8 17       	cp	r30, r24
     86a:	f9 07       	cpc	r31, r25
     86c:	e1 f7       	brne	.-8      	; 0x866 <ftoaL+0x5a>
     86e:	ea e1       	ldi	r30, 0x1A	; 26
     870:	fc e3       	ldi	r31, 0x3C	; 60
     872:	89 e2       	ldi	r24, 0x29	; 41
     874:	9c e3       	ldi	r25, 0x3C	; 60
     876:	11 92       	st	Z+, r1
     878:	8e 17       	cp	r24, r30
     87a:	9f 07       	cpc	r25, r31
     87c:	e1 f7       	brne	.-8      	; 0x876 <ftoaL+0x6a>
     87e:	c7 01       	movw	r24, r14
     880:	b6 01       	movw	r22, r12
     882:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <__fixsfsi>
     886:	6a 30       	cpi	r22, 0x0A	; 10
     888:	71 05       	cpc	r23, r1
     88a:	81 05       	cpc	r24, r1
     88c:	91 05       	cpc	r25, r1
     88e:	2c f4       	brge	.+10     	; 0x89a <ftoaL+0x8e>
     890:	25 e0       	ldi	r18, 0x05	; 5
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	2d 83       	std	Y+5, r18	; 0x05
     896:	3e 83       	std	Y+6, r19	; 0x06
     898:	02 c0       	rjmp	.+4      	; 0x89e <ftoaL+0x92>
     89a:	1d 82       	std	Y+5, r1	; 0x05
     89c:	1e 82       	std	Y+6, r1	; 0x06
     89e:	8b 01       	movw	r16, r22
     8a0:	9c 01       	movw	r18, r24
     8a2:	0a 50       	subi	r16, 0x0A	; 10
     8a4:	11 09       	sbc	r17, r1
     8a6:	21 09       	sbc	r18, r1
     8a8:	31 09       	sbc	r19, r1
     8aa:	0a 35       	cpi	r16, 0x5A	; 90
     8ac:	11 05       	cpc	r17, r1
     8ae:	21 05       	cpc	r18, r1
     8b0:	31 05       	cpc	r19, r1
     8b2:	20 f4       	brcc	.+8      	; 0x8bc <ftoaL+0xb0>
     8b4:	24 e0       	ldi	r18, 0x04	; 4
     8b6:	30 e0       	ldi	r19, 0x00	; 0
     8b8:	2d 83       	std	Y+5, r18	; 0x05
     8ba:	3e 83       	std	Y+6, r19	; 0x06
     8bc:	8b 01       	movw	r16, r22
     8be:	9c 01       	movw	r18, r24
     8c0:	04 56       	subi	r16, 0x64	; 100
     8c2:	11 09       	sbc	r17, r1
     8c4:	21 09       	sbc	r18, r1
     8c6:	31 09       	sbc	r19, r1
     8c8:	04 38       	cpi	r16, 0x84	; 132
     8ca:	13 40       	sbci	r17, 0x03	; 3
     8cc:	21 05       	cpc	r18, r1
     8ce:	31 05       	cpc	r19, r1
     8d0:	20 f4       	brcc	.+8      	; 0x8da <ftoaL+0xce>
     8d2:	23 e0       	ldi	r18, 0x03	; 3
     8d4:	30 e0       	ldi	r19, 0x00	; 0
     8d6:	2d 83       	std	Y+5, r18	; 0x05
     8d8:	3e 83       	std	Y+6, r19	; 0x06
     8da:	dc 01       	movw	r26, r24
     8dc:	cb 01       	movw	r24, r22
     8de:	88 5e       	subi	r24, 0xE8	; 232
     8e0:	93 40       	sbci	r25, 0x03	; 3
     8e2:	a1 09       	sbc	r26, r1
     8e4:	b1 09       	sbc	r27, r1
     8e6:	88 32       	cpi	r24, 0x28	; 40
     8e8:	93 42       	sbci	r25, 0x23	; 35
     8ea:	a1 05       	cpc	r26, r1
     8ec:	b1 05       	cpc	r27, r1
     8ee:	20 f4       	brcc	.+8      	; 0x8f8 <ftoaL+0xec>
     8f0:	82 e0       	ldi	r24, 0x02	; 2
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	8d 83       	std	Y+5, r24	; 0x05
     8f6:	9e 83       	std	Y+6, r25	; 0x06
     8f8:	10 92 19 3c 	sts	0x3C19, r1	; 0x803c19 <expt>
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	30 e4       	ldi	r19, 0x40	; 64
     900:	4c e1       	ldi	r20, 0x1C	; 28
     902:	56 e4       	ldi	r21, 0x46	; 70
     904:	c7 01       	movw	r24, r14
     906:	b6 01       	movw	r22, r12
     908:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <__gesf2>
     90c:	88 23       	and	r24, r24
     90e:	44 f1       	brlt	.+80     	; 0x960 <ftoaL+0x154>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	40 e2       	ldi	r20, 0x20	; 32
     916:	51 e4       	ldi	r21, 0x41	; 65
     918:	c7 01       	movw	r24, r14
     91a:	b6 01       	movw	r22, r12
     91c:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <__gesf2>
     920:	88 23       	and	r24, r24
     922:	0c f4       	brge	.+2      	; 0x926 <ftoaL+0x11a>
     924:	c5 c0       	rjmp	.+394    	; 0xab0 <ftoaL+0x2a4>
     926:	91 e0       	ldi	r25, 0x01	; 1
     928:	99 83       	std	Y+1, r25	; 0x01
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e2       	ldi	r20, 0x20	; 32
     930:	51 e4       	ldi	r21, 0x41	; 65
     932:	c7 01       	movw	r24, r14
     934:	b6 01       	movw	r22, r12
     936:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <__divsf3>
     93a:	6b 01       	movw	r12, r22
     93c:	7c 01       	movw	r14, r24
     93e:	29 81       	ldd	r18, Y+1	; 0x01
     940:	2d 83       	std	Y+5, r18	; 0x05
     942:	32 2f       	mov	r19, r18
     944:	3f 5f       	subi	r19, 0xFF	; 255
     946:	39 83       	std	Y+1, r19	; 0x01
     948:	20 e0       	ldi	r18, 0x00	; 0
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	40 e2       	ldi	r20, 0x20	; 32
     94e:	51 e4       	ldi	r21, 0x41	; 65
     950:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <__gesf2>
     954:	88 23       	and	r24, r24
     956:	4c f7       	brge	.-46     	; 0x92a <ftoaL+0x11e>
     958:	4d 81       	ldd	r20, Y+5	; 0x05
     95a:	40 93 19 3c 	sts	0x3C19, r20	; 0x803c19 <expt>
     95e:	a8 c0       	rjmp	.+336    	; 0xab0 <ftoaL+0x2a4>
     960:	2a e0       	ldi	r18, 0x0A	; 10
     962:	37 ed       	ldi	r19, 0xD7	; 215
     964:	43 e2       	ldi	r20, 0x23	; 35
     966:	5c e3       	ldi	r21, 0x3C	; 60
     968:	c7 01       	movw	r24, r14
     96a:	b6 01       	movw	r22, r12
     96c:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
     970:	88 23       	and	r24, r24
     972:	34 f5       	brge	.+76     	; 0x9c0 <ftoaL+0x1b4>
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	30 e0       	ldi	r19, 0x00	; 0
     978:	40 e8       	ldi	r20, 0x80	; 128
     97a:	5f e3       	ldi	r21, 0x3F	; 63
     97c:	c7 01       	movw	r24, r14
     97e:	b6 01       	movw	r22, r12
     980:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
     984:	88 23       	and	r24, r24
     986:	2c f0       	brlt	.+10     	; 0x992 <ftoaL+0x186>
     988:	1b c0       	rjmp	.+54     	; 0x9c0 <ftoaL+0x1b4>
     98a:	85 e0       	ldi	r24, 0x05	; 5
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	8d 83       	std	Y+5, r24	; 0x05
     990:	9e 83       	std	Y+6, r25	; 0x06
     992:	10 91 19 3c 	lds	r17, 0x3C19	; 0x803c19 <expt>
     996:	20 e0       	ldi	r18, 0x00	; 0
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	40 e2       	ldi	r20, 0x20	; 32
     99c:	51 e4       	ldi	r21, 0x41	; 65
     99e:	c7 01       	movw	r24, r14
     9a0:	b6 01       	movw	r22, r12
     9a2:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <__mulsf3>
     9a6:	6b 01       	movw	r12, r22
     9a8:	7c 01       	movw	r14, r24
     9aa:	11 50       	subi	r17, 0x01	; 1
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	40 e8       	ldi	r20, 0x80	; 128
     9b2:	5f e3       	ldi	r21, 0x3F	; 63
     9b4:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
     9b8:	88 23       	and	r24, r24
     9ba:	6c f3       	brlt	.-38     	; 0x996 <ftoaL+0x18a>
     9bc:	10 93 19 3c 	sts	0x3C19, r17	; 0x803c19 <expt>
     9c0:	0d 81       	ldd	r16, Y+5	; 0x05
     9c2:	1e 81       	ldd	r17, Y+6	; 0x06
     9c4:	11 27       	eor	r17, r17
     9c6:	10 16       	cp	r1, r16
     9c8:	11 06       	cpc	r1, r17
     9ca:	3c f0       	brlt	.+14     	; 0x9da <ftoaL+0x1ce>
     9cc:	19 c0       	rjmp	.+50     	; 0xa00 <ftoaL+0x1f4>
     9ce:	05 e0       	ldi	r16, 0x05	; 5
     9d0:	10 e0       	ldi	r17, 0x00	; 0
     9d2:	25 e0       	ldi	r18, 0x05	; 5
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	2d 83       	std	Y+5, r18	; 0x05
     9d8:	3e 83       	std	Y+6, r19	; 0x06
     9da:	a1 2c       	mov	r10, r1
     9dc:	b1 2c       	mov	r11, r1
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	80 e8       	ldi	r24, 0x80	; 128
     9e4:	9f e3       	ldi	r25, 0x3F	; 63
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e2       	ldi	r20, 0x20	; 32
     9ec:	51 e4       	ldi	r21, 0x41	; 65
     9ee:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <__divsf3>
     9f2:	3f ef       	ldi	r19, 0xFF	; 255
     9f4:	a3 1a       	sub	r10, r19
     9f6:	b3 0a       	sbc	r11, r19
     9f8:	a0 16       	cp	r10, r16
     9fa:	b1 06       	cpc	r11, r17
     9fc:	a4 f3       	brlt	.-24     	; 0x9e6 <ftoaL+0x1da>
     9fe:	04 c0       	rjmp	.+8      	; 0xa08 <ftoaL+0x1fc>
     a00:	60 e0       	ldi	r22, 0x00	; 0
     a02:	70 e0       	ldi	r23, 0x00	; 0
     a04:	80 e8       	ldi	r24, 0x80	; 128
     a06:	9f e3       	ldi	r25, 0x3F	; 63
     a08:	2d ec       	ldi	r18, 0xCD	; 205
     a0a:	3c ec       	ldi	r19, 0xCC	; 204
     a0c:	4c e0       	ldi	r20, 0x0C	; 12
     a0e:	5f e3       	ldi	r21, 0x3F	; 63
     a10:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <__mulsf3>
     a14:	a7 01       	movw	r20, r14
     a16:	96 01       	movw	r18, r12
     a18:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__addsf3>
     a1c:	4b 01       	movw	r8, r22
     a1e:	5c 01       	movw	r10, r24
     a20:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <__fixsfsi>
     a24:	2b 01       	movw	r4, r22
     a26:	3c 01       	movw	r6, r24
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	4d e3       	ldi	r20, 0x3D	; 61
     a2e:	5c e3       	ldi	r21, 0x3C	; 60
     a30:	0e 94 ac 03 	call	0x758	; 0x758 <longToStr>
     a34:	6b 01       	movw	r12, r22
     a36:	7c 01       	movw	r14, r24
     a38:	8d 81       	ldd	r24, Y+5	; 0x05
     a3a:	9e 81       	ldd	r25, Y+6	; 0x06
     a3c:	89 2b       	or	r24, r25
     a3e:	09 f4       	brne	.+2      	; 0xa42 <ftoaL+0x236>
     a40:	54 c0       	rjmp	.+168    	; 0xaea <ftoaL+0x2de>
     a42:	f6 01       	movw	r30, r12
     a44:	e3 5c       	subi	r30, 0xC3	; 195
     a46:	f3 4c       	sbci	r31, 0xC3	; 195
     a48:	8e e2       	ldi	r24, 0x2E	; 46
     a4a:	80 83       	st	Z, r24
     a4c:	2d 81       	ldd	r18, Y+5	; 0x05
     a4e:	3e 81       	ldd	r19, Y+6	; 0x06
     a50:	b9 01       	movw	r22, r18
     a52:	33 0f       	add	r19, r19
     a54:	88 0b       	sbc	r24, r24
     a56:	99 0b       	sbc	r25, r25
     a58:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <__floatsisf>
     a5c:	9b 01       	movw	r18, r22
     a5e:	ac 01       	movw	r20, r24
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	80 e2       	ldi	r24, 0x20	; 32
     a66:	91 e4       	ldi	r25, 0x41	; 65
     a68:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <pow>
     a6c:	69 83       	std	Y+1, r22	; 0x01
     a6e:	7a 83       	std	Y+2, r23	; 0x02
     a70:	8b 83       	std	Y+3, r24	; 0x03
     a72:	9c 83       	std	Y+4, r25	; 0x04
     a74:	c3 01       	movw	r24, r6
     a76:	b2 01       	movw	r22, r4
     a78:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <__floatsisf>
     a7c:	9b 01       	movw	r18, r22
     a7e:	ac 01       	movw	r20, r24
     a80:	c5 01       	movw	r24, r10
     a82:	b4 01       	movw	r22, r8
     a84:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__subsf3>
     a88:	96 01       	movw	r18, r12
     a8a:	2f 5f       	subi	r18, 0xFF	; 255
     a8c:	3f 4f       	sbci	r19, 0xFF	; 255
     a8e:	89 01       	movw	r16, r18
     a90:	03 5c       	subi	r16, 0xC3	; 195
     a92:	13 4c       	sbci	r17, 0xC3	; 195
     a94:	29 81       	ldd	r18, Y+1	; 0x01
     a96:	3a 81       	ldd	r19, Y+2	; 0x02
     a98:	4b 81       	ldd	r20, Y+3	; 0x03
     a9a:	5c 81       	ldd	r21, Y+4	; 0x04
     a9c:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <__mulsf3>
     aa0:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <__fixsfsi>
     aa4:	2d 81       	ldd	r18, Y+5	; 0x05
     aa6:	3e 81       	ldd	r19, Y+6	; 0x06
     aa8:	a8 01       	movw	r20, r16
     aaa:	0e 94 ac 03 	call	0x758	; 0x758 <longToStr>
     aae:	1d c0       	rjmp	.+58     	; 0xaea <ftoaL+0x2de>
     ab0:	2a e0       	ldi	r18, 0x0A	; 10
     ab2:	37 ed       	ldi	r19, 0xD7	; 215
     ab4:	43 e2       	ldi	r20, 0x23	; 35
     ab6:	5c e3       	ldi	r21, 0x3C	; 60
     ab8:	c7 01       	movw	r24, r14
     aba:	b6 01       	movw	r22, r12
     abc:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
     ac0:	88 23       	and	r24, r24
     ac2:	0c f0       	brlt	.+2      	; 0xac6 <ftoaL+0x2ba>
     ac4:	84 cf       	rjmp	.-248    	; 0x9ce <ftoaL+0x1c2>
     ac6:	20 e0       	ldi	r18, 0x00	; 0
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	40 e8       	ldi	r20, 0x80	; 128
     acc:	5f e3       	ldi	r21, 0x3F	; 63
     ace:	c7 01       	movw	r24, r14
     ad0:	b6 01       	movw	r22, r12
     ad2:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
     ad6:	88 23       	and	r24, r24
     ad8:	0c f4       	brge	.+2      	; 0xadc <ftoaL+0x2d0>
     ada:	57 cf       	rjmp	.-338    	; 0x98a <ftoaL+0x17e>
     adc:	05 e0       	ldi	r16, 0x05	; 5
     ade:	10 e0       	ldi	r17, 0x00	; 0
     ae0:	85 e0       	ldi	r24, 0x05	; 5
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	8d 83       	std	Y+5, r24	; 0x05
     ae6:	9e 83       	std	Y+6, r25	; 0x06
     ae8:	78 cf       	rjmp	.-272    	; 0x9da <ftoaL+0x1ce>
     aea:	26 96       	adiw	r28, 0x06	; 6
     aec:	cd bf       	out	0x3d, r28	; 61
     aee:	de bf       	out	0x3e, r29	; 62
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	1f 91       	pop	r17
     af6:	0f 91       	pop	r16
     af8:	ff 90       	pop	r15
     afa:	ef 90       	pop	r14
     afc:	df 90       	pop	r13
     afe:	cf 90       	pop	r12
     b00:	bf 90       	pop	r11
     b02:	af 90       	pop	r10
     b04:	9f 90       	pop	r9
     b06:	8f 90       	pop	r8
     b08:	7f 90       	pop	r7
     b0a:	6f 90       	pop	r6
     b0c:	5f 90       	pop	r5
     b0e:	4f 90       	pop	r4
     b10:	08 95       	ret

00000b12 <Add_exponent>:
void Add_exponent (void)
{
	char E_space;
																					//If there is an exponent overwrite the RH display digits
	E_space = 2;																	//with the Exponential notation
	if (expt >= 10) E_space = 3;													//and leave the number at the left hand end of the display
     b12:	80 91 19 3c 	lds	r24, 0x3C19	; 0x803c19 <expt>
     b16:	8a 30       	cpi	r24, 0x0A	; 10
     b18:	14 f0       	brlt	.+4      	; 0xb1e <Add_exponent+0xc>
     b1a:	93 e0       	ldi	r25, 0x03	; 3
     b1c:	01 c0       	rjmp	.+2      	; 0xb20 <Add_exponent+0xe>
/***************************************************************************************************************************************/
void Add_exponent (void)
{
	char E_space;
																					//If there is an exponent overwrite the RH display digits
	E_space = 2;																	//with the Exponential notation
     b1e:	92 e0       	ldi	r25, 0x02	; 2
	if (expt >= 10) E_space = 3;													//and leave the number at the left hand end of the display
	if (expt <= -10)E_space = 4;
     b20:	87 3f       	cpi	r24, 0xF7	; 247
     b22:	0c f4       	brge	.+2      	; 0xb26 <Add_exponent+0x14>
     b24:	5d c0       	rjmp	.+186    	; 0xbe0 <Add_exponent+0xce>
	if ((expt < 0) && (expt > (-10)))E_space = 3;
     b26:	38 2f       	mov	r19, r24
     b28:	29 e0       	ldi	r18, 0x09	; 9
     b2a:	28 0f       	add	r18, r24
     b2c:	29 30       	cpi	r18, 0x09	; 9
     b2e:	60 f0       	brcs	.+24     	; 0xb48 <Add_exponent+0x36>
	
	
	switch (E_space){
     b30:	93 30       	cpi	r25, 0x03	; 3
     b32:	51 f0       	breq	.+20     	; 0xb48 <Add_exponent+0x36>
     b34:	92 30       	cpi	r25, 0x02	; 2
     b36:	09 f0       	breq	.+2      	; 0xb3a <Add_exponent+0x28>
     b38:	5a c0       	rjmp	.+180    	; 0xbee <Add_exponent+0xdc>
		case 2:	display_buffer[0] = expt + '0';display_buffer[1] = 'E';break;		//E1 to E9
     b3a:	ea e1       	ldi	r30, 0x1A	; 26
     b3c:	fc e3       	ldi	r31, 0x3C	; 60
     b3e:	80 5d       	subi	r24, 0xD0	; 208
     b40:	80 83       	st	Z, r24
     b42:	85 e4       	ldi	r24, 0x45	; 69
     b44:	81 83       	std	Z+1, r24	; 0x01
     b46:	08 95       	ret
		case 3:	if (expt > 0)														//E10, E11, E12......etc
     b48:	18 16       	cp	r1, r24
     b4a:	34 f5       	brge	.+76     	; 0xb98 <Add_exponent+0x86>
		{display_buffer[0] = (expt%10) + '0';
     b4c:	ea e1       	ldi	r30, 0x1A	; 26
     b4e:	fc e3       	ldi	r31, 0x3C	; 60
     b50:	27 e6       	ldi	r18, 0x67	; 103
     b52:	82 02       	muls	r24, r18
     b54:	91 2d       	mov	r25, r1
     b56:	11 24       	eor	r1, r1
     b58:	95 95       	asr	r25
     b5a:	95 95       	asr	r25
     b5c:	87 fd       	sbrc	r24, 7
     b5e:	93 95       	inc	r25
     b60:	59 2f       	mov	r21, r25
     b62:	55 0f       	add	r21, r21
     b64:	45 2f       	mov	r20, r21
     b66:	44 0f       	add	r20, r20
     b68:	44 0f       	add	r20, r20
     b6a:	45 0f       	add	r20, r21
     b6c:	58 2f       	mov	r21, r24
     b6e:	54 1b       	sub	r21, r20
     b70:	45 2f       	mov	r20, r21
     b72:	40 5d       	subi	r20, 0xD0	; 208
     b74:	40 83       	st	Z, r20
		display_buffer[1] = ((expt/10)%10) + '0';display_buffer[2] = 'E';}
     b76:	92 02       	muls	r25, r18
     b78:	21 2d       	mov	r18, r1
     b7a:	11 24       	eor	r1, r1
     b7c:	25 95       	asr	r18
     b7e:	25 95       	asr	r18
     b80:	97 fd       	sbrc	r25, 7
     b82:	23 95       	inc	r18
     b84:	22 0f       	add	r18, r18
     b86:	42 2f       	mov	r20, r18
     b88:	44 0f       	add	r20, r20
     b8a:	44 0f       	add	r20, r20
     b8c:	24 0f       	add	r18, r20
     b8e:	92 1b       	sub	r25, r18
     b90:	90 5d       	subi	r25, 0xD0	; 208
     b92:	91 83       	std	Z+1, r25	; 0x01
     b94:	95 e4       	ldi	r25, 0x45	; 69
     b96:	92 83       	std	Z+2, r25	; 0x02
		if (expt < 0)																//E-1 to E-9
     b98:	88 23       	and	r24, r24
     b9a:	4c f5       	brge	.+82     	; 0xbee <Add_exponent+0xdc>
		{display_buffer[0] = expt*(-1) + '0';
     b9c:	ea e1       	ldi	r30, 0x1A	; 26
     b9e:	fc e3       	ldi	r31, 0x3C	; 60
     ba0:	80 e3       	ldi	r24, 0x30	; 48
     ba2:	83 1b       	sub	r24, r19
     ba4:	80 83       	st	Z, r24
		display_buffer[1] = '-';display_buffer[2] = 'E';}
     ba6:	8d e2       	ldi	r24, 0x2D	; 45
     ba8:	81 83       	std	Z+1, r24	; 0x01
     baa:	85 e4       	ldi	r24, 0x45	; 69
     bac:	82 83       	std	Z+2, r24	; 0x02
     bae:	08 95       	ret
		break;
		case 4:	display_buffer[0] = ((expt*(-1))%10) + '0';							//E-10, E-11, E-12....etc
     bb0:	99 27       	eor	r25, r25
     bb2:	81 95       	neg	r24
     bb4:	0c f4       	brge	.+2      	; 0xbb8 <Add_exponent+0xa6>
     bb6:	90 95       	com	r25
     bb8:	ea e1       	ldi	r30, 0x1A	; 26
     bba:	fc e3       	ldi	r31, 0x3C	; 60
     bbc:	2a e0       	ldi	r18, 0x0A	; 10
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	b9 01       	movw	r22, r18
     bc2:	0e 94 9f 10 	call	0x213e	; 0x213e <__divmodhi4>
     bc6:	80 5d       	subi	r24, 0xD0	; 208
     bc8:	80 83       	st	Z, r24
		display_buffer[1] = (((expt*(-1))/10)%10) + '0';
     bca:	cb 01       	movw	r24, r22
     bcc:	b9 01       	movw	r22, r18
     bce:	0e 94 9f 10 	call	0x213e	; 0x213e <__divmodhi4>
     bd2:	80 5d       	subi	r24, 0xD0	; 208
     bd4:	81 83       	std	Z+1, r24	; 0x01
		display_buffer[2] = '-';display_buffer[3] = 'E';
     bd6:	8d e2       	ldi	r24, 0x2D	; 45
     bd8:	82 83       	std	Z+2, r24	; 0x02
     bda:	85 e4       	ldi	r24, 0x45	; 69
     bdc:	83 83       	std	Z+3, r24	; 0x03
     bde:	08 95       	ret
	char E_space;
																					//If there is an exponent overwrite the RH display digits
	E_space = 2;																	//with the Exponential notation
	if (expt >= 10) E_space = 3;													//and leave the number at the left hand end of the display
	if (expt <= -10)E_space = 4;
	if ((expt < 0) && (expt > (-10)))E_space = 3;
     be0:	38 2f       	mov	r19, r24
     be2:	99 e0       	ldi	r25, 0x09	; 9
     be4:	98 0f       	add	r25, r24
     be6:	99 30       	cpi	r25, 0x09	; 9
     be8:	08 f4       	brcc	.+2      	; 0xbec <Add_exponent+0xda>
     bea:	ae cf       	rjmp	.-164    	; 0xb48 <Add_exponent+0x36>
     bec:	e1 cf       	rjmp	.-62     	; 0xbb0 <Add_exponent+0x9e>
     bee:	08 95       	ret

00000bf0 <Start_TCA0>:



/*****************************************************************************************************************************/
	void Start_TCA0(void){										//Clock that controls display and FW comms port
	display_ptr = 0;
     bf0:	10 92 29 3c 	sts	0x3C29, r1	; 0x803c29 <display_ptr>
     bf4:	10 92 2a 3c 	sts	0x3C2A, r1	; 0x803c2a <display_ptr+0x1>
	TCA0_SINGLE_CNT = 0;										//Initialise counter
     bf8:	10 92 20 0a 	sts	0x0A20, r1	; 0x800a20 <__TEXT_REGION_LENGTH__+0x700a20>
     bfc:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <__TEXT_REGION_LENGTH__+0x700a21>
	TCA0_SINGLE_CMP0 = display_tick;							//2mS period for 2MHz clock
     c00:	80 ed       	ldi	r24, 0xD0	; 208
     c02:	97 e0       	ldi	r25, 0x07	; 7
     c04:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x700a28>
     c08:	90 93 29 0a 	sts	0x0A29, r25	; 0x800a29 <__TEXT_REGION_LENGTH__+0x700a29>
	TCA0_SINGLE_CTRLA = TCA_SINGLE_CLKSEL_DIV1_gc | 1;			//Start clock with 2MHz clock
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x700a00>
	TCA0_SINGLE_INTCTRL |= TCA_SINGLE_CMP0EN_bm;}				//Interrupt flag on compare match
     c12:	ea e0       	ldi	r30, 0x0A	; 10
     c14:	fa e0       	ldi	r31, 0x0A	; 10
     c16:	80 81       	ld	r24, Z
     c18:	80 61       	ori	r24, 0x10	; 16
     c1a:	80 83       	st	Z, r24
     c1c:	08 95       	ret

00000c1e <main>:
	char cal_factor;											//Used to adjust internal oscillator frequency
	char null_bit_counter;										//Counts number of blank display digits
	int array_ptr;												//Points to display digits
	
	
	CPU_CCP = 0xD8;												//Config change protection key
     c1e:	98 ed       	ldi	r25, 0xD8	; 216
     c20:	94 bf       	out	0x34, r25	; 52
	CLKCTRL_MCLKCTRLB = CLKCTRL_PDIV_16X_gc | 1;				//Generates 1MHz Peripheral clock
     c22:	87 e0       	ldi	r24, 0x07	; 7
     c24:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x700061>
	
	cal_factor = CLKCTRL_OSC20MCALIBA - 1;						//Adjust calibration factor if necessary
     c28:	e1 e7       	ldi	r30, 0x71	; 113
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	81 50       	subi	r24, 0x01	; 1
	CPU_CCP = 0xD8;
     c30:	94 bf       	out	0x34, r25	; 52
	CLKCTRL_OSC20MCALIBA = cal_factor;
     c32:	80 83       	st	Z, r24
	
	brightness_control = 250;									//Selects low brightness at reset
     c34:	8a ef       	ldi	r24, 0xFA	; 250
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	80 93 17 3c 	sts	0x3C17, r24	; 0x803c17 <brightness_control>
     c3c:	90 93 18 3c 	sts	0x3C18, r25	; 0x803c18 <brightness_control+0x1>
     c40:	ca e1       	ldi	r28, 0x1A	; 26
     c42:	dc e3       	ldi	r29, 0x3C	; 60
     c44:	09 e2       	ldi	r16, 0x29	; 41
     c46:	1c e3       	ldi	r17, 0x3C	; 60
     c48:	fe 01       	movw	r30, r28
	
	clear_display_buffer;										//Generate test display
     c4a:	11 92       	st	Z+, r1
     c4c:	0e 17       	cp	r16, r30
     c4e:	1f 07       	cpc	r17, r31
     c50:	e1 f7       	brne	.-8      	; 0xc4a <main+0x2c>
	mode = 'A';
     c52:	81 e4       	ldi	r24, 0x41	; 65
     c54:	80 93 36 3c 	sts	0x3C36, r24	; 0x803c36 <mode>
     c58:	ea e1       	ldi	r30, 0x1A	; 26
     c5a:	fc e3       	ldi	r31, 0x3C	; 60
     c5c:	87 e0       	ldi	r24, 0x07	; 7
     c5e:	90 e0       	ldi	r25, 0x00	; 0
	for(int m = 0; m <= 7; m++)									//Display 75311357 on reset:  Confirms that display is working correctly
	display_buffer[m] = mag(7 - (2*m)) + '0';
     c60:	9c 01       	movw	r18, r24
     c62:	99 23       	and	r25, r25
     c64:	24 f4       	brge	.+8      	; 0xc6e <main+0x50>
     c66:	22 27       	eor	r18, r18
     c68:	33 27       	eor	r19, r19
     c6a:	28 1b       	sub	r18, r24
     c6c:	39 0b       	sbc	r19, r25
     c6e:	20 5d       	subi	r18, 0xD0	; 208
     c70:	21 93       	st	Z+, r18
     c72:	02 97       	sbiw	r24, 0x02	; 2
	
	brightness_control = 250;									//Selects low brightness at reset
	
	clear_display_buffer;										//Generate test display
	mode = 'A';
	for(int m = 0; m <= 7; m++)									//Display 75311357 on reset:  Confirms that display is working correctly
     c74:	87 3f       	cpi	r24, 0xF7	; 247
     c76:	2f ef       	ldi	r18, 0xFF	; 255
     c78:	92 07       	cpc	r25, r18
     c7a:	91 f7       	brne	.-28     	; 0xc60 <main+0x42>
	display_buffer[m] = mag(7 - (2*m)) + '0';
	Set_display_ports;
     c7c:	e0 e0       	ldi	r30, 0x00	; 0
     c7e:	f4 e0       	ldi	r31, 0x04	; 4
     c80:	80 81       	ld	r24, Z
     c82:	8e 6f       	ori	r24, 0xFE	; 254
     c84:	80 83       	st	Z, r24
     c86:	e0 e2       	ldi	r30, 0x20	; 32
     c88:	f4 e0       	ldi	r31, 0x04	; 4
     c8a:	80 81       	ld	r24, Z
     c8c:	8f 63       	ori	r24, 0x3F	; 63
     c8e:	80 83       	st	Z, r24
     c90:	e0 e4       	ldi	r30, 0x40	; 64
     c92:	f4 e0       	ldi	r31, 0x04	; 4
     c94:	80 81       	ld	r24, Z
     c96:	87 60       	ori	r24, 0x07	; 7
     c98:	80 83       	st	Z, r24
	   
   PORTC.DIR &= ~PIN3_bm;										//Configure comm port as input
     c9a:	80 81       	ld	r24, Z
     c9c:	87 7f       	andi	r24, 0xF7	; 247
     c9e:	80 83       	st	Z, r24
   PORTC.OUT &= ~(PIN3_bm);										//I/O pin low when configured as output
     ca0:	84 81       	ldd	r24, Z+4	; 0x04
     ca2:	87 7f       	andi	r24, 0xF7	; 247
     ca4:	84 83       	std	Z+4, r24	; 0x04
   PORTC.PIN3CTRL |= PORT_PULLUPEN_bm;							//Pull-up enabled
     ca6:	83 89       	ldd	r24, Z+19	; 0x13
     ca8:	88 60       	ori	r24, 0x08	; 8
     caa:	83 8b       	std	Z+19, r24	; 0x13
   	  
   Start_TCA0();												//Display (2mS) tick rate
     cac:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <Start_TCA0>
   sei();
     cb0:	78 94       	sei
     cb2:	0f 2e       	mov	r0, r31
     cb4:	fc e4       	ldi	r31, 0x4C	; 76
     cb6:	ef 2e       	mov	r14, r31
     cb8:	fc e3       	ldi	r31, 0x3C	; 60
     cba:	ff 2e       	mov	r15, r31
     cbc:	f0 2d       	mov	r31, r0
     cbe:	0f 2e       	mov	r0, r31
     cc0:	f2 e2       	ldi	r31, 0x22	; 34
     cc2:	af 2e       	mov	r10, r31
     cc4:	fc e3       	ldi	r31, 0x3C	; 60
     cc6:	bf 2e       	mov	r11, r31
     cc8:	f0 2d       	mov	r31, r0
     cca:	0f 2e       	mov	r0, r31
     ccc:	f5 e4       	ldi	r31, 0x45	; 69
     cce:	8f 2e       	mov	r8, r31
     cd0:	fc e3       	ldi	r31, 0x3C	; 60
     cd2:	9f 2e       	mov	r9, r31
     cd4:	f0 2d       	mov	r31, r0
	ftoaL(Float_Num_from_UNO);
	Combine_dp;		 
	Insert_sign;
	Remove_lagging_zeros;
	temp2display_buffer;										//Reverse string prior to display
	if (expt){Left_justify_number;
     cd6:	0f 2e       	mov	r0, r31
     cd8:	fa e1       	ldi	r31, 0x1A	; 26
     cda:	cf 2e       	mov	r12, r31
     cdc:	fc e3       	ldi	r31, 0x3C	; 60
     cde:	df 2e       	mov	r13, r31
     ce0:	f0 2d       	mov	r31, r0
	break;
			
	case 'D': 													//Convert float from UNO to string
	Float_Num_from_UNO  = *float_ptr;
	ftoaL(Float_Num_from_UNO);
	Combine_dp;		 
     ce2:	0f 2e       	mov	r0, r31
     ce4:	fc e3       	ldi	r31, 0x3C	; 60
     ce6:	6f 2e       	mov	r6, r31
     ce8:	fc e3       	ldi	r31, 0x3C	; 60
     cea:	7f 2e       	mov	r7, r31
     cec:	f0 2d       	mov	r31, r0
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
	
	case 'a': break;											//One_wire_Tx_2_integers()
	case 'b': I2C_Tx_any_segment; break;			
     cee:	44 24       	eor	r4, r4
     cf0:	43 94       	inc	r4
     cf2:	51 2c       	mov	r5, r1
     cf4:	68 94       	set
     cf6:	22 24       	eor	r2, r2
     cf8:	25 f8       	bld	r2, 5
     cfa:	33 24       	eor	r3, r3
     cfc:	32 f8       	bld	r3, 2
   	  
   Start_TCA0();												//Display (2mS) tick rate
   sei();
	
	while(1){
		while(!(transaction_complete));							//Wait here for requests from the UNO
     cfe:	80 91 06 3c 	lds	r24, 0x3C06	; 0x803c06 <transaction_complete>
     d02:	88 23       	and	r24, r24
     d04:	e1 f3       	breq	.-8      	; 0xcfe <main+0xe0>
		transaction_complete = 0;
     d06:	10 92 06 3c 	sts	0x3C06, r1	; 0x803c06 <transaction_complete>
		busy_flag = 1;											//Do not contact UNO until data processing is complete
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	80 93 00 3c 	sts	0x3C00, r24	; 0x803c00 <_edata>
		
	switch (transaction_type){									//Transaction complete: Process the data
     d10:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
     d14:	83 34       	cpi	r24, 0x43	; 67
     d16:	09 f4       	brne	.+2      	; 0xd1a <main+0xfc>
     d18:	8c c1       	rjmp	.+792    	; 0x1032 <main+0x414>
     d1a:	38 f4       	brcc	.+14     	; 0xd2a <main+0x10c>
     d1c:	81 34       	cpi	r24, 0x41	; 65
     d1e:	09 f4       	brne	.+2      	; 0xd22 <main+0x104>
     d20:	a0 c0       	rjmp	.+320    	; 0xe62 <main+0x244>
     d22:	82 34       	cpi	r24, 0x42	; 66
     d24:	09 f4       	brne	.+2      	; 0xd28 <main+0x10a>
     d26:	df c0       	rjmp	.+446    	; 0xee6 <main+0x2c8>
     d28:	65 c2       	rjmp	.+1226   	; 0x11f4 <main+0x5d6>
     d2a:	85 34       	cpi	r24, 0x45	; 69
     d2c:	09 f4       	brne	.+2      	; 0xd30 <main+0x112>
     d2e:	44 c2       	rjmp	.+1160   	; 0x11b8 <main+0x59a>
     d30:	08 f4       	brcc	.+2      	; 0xd34 <main+0x116>
     d32:	ba c1       	rjmp	.+884    	; 0x10a8 <main+0x48a>
     d34:	82 36       	cpi	r24, 0x62	; 98
     d36:	09 f0       	breq	.+2      	; 0xd3a <main+0x11c>
     d38:	5d c2       	rjmp	.+1210   	; 0x11f4 <main+0x5d6>
	
	case 'a': break;											//One_wire_Tx_2_integers()
	case 'b': I2C_Tx_any_segment; break;			
     d3a:	e0 91 32 3c 	lds	r30, 0x3C32	; 0x803c32 <letter>
     d3e:	f0 91 33 3c 	lds	r31, 0x3C33	; 0x803c33 <letter+0x1>
     d42:	e1 54       	subi	r30, 0x41	; 65
     d44:	f1 09       	sbc	r31, r1
     d46:	e7 32       	cpi	r30, 0x27	; 39
     d48:	f1 05       	cpc	r31, r1
     d4a:	88 f5       	brcc	.+98     	; 0xdae <main+0x190>
     d4c:	e0 5a       	subi	r30, 0xA0	; 160
     d4e:	ff 4f       	sbci	r31, 0xFF	; 255
     d50:	0c 94 d2 10 	jmp	0x21a4	; 0x21a4 <__tablejump2__>
     d54:	10 92 32 3c 	sts	0x3C32, r1	; 0x803c32 <letter>
     d58:	10 92 33 3c 	sts	0x3C33, r1	; 0x803c33 <letter+0x1>
     d5c:	58 c2       	rjmp	.+1200   	; 0x120e <main+0x5f0>
     d5e:	83 e0       	ldi	r24, 0x03	; 3
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     d66:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     d6a:	51 c2       	rjmp	.+1186   	; 0x120e <main+0x5f0>
     d6c:	84 e0       	ldi	r24, 0x04	; 4
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     d74:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     d78:	4a c2       	rjmp	.+1172   	; 0x120e <main+0x5f0>
     d7a:	82 e0       	ldi	r24, 0x02	; 2
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     d82:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     d86:	43 c2       	rjmp	.+1158   	; 0x120e <main+0x5f0>
     d88:	85 e0       	ldi	r24, 0x05	; 5
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	80 93 32 3c 	sts	0x3C32, r24	; 0x803c32 <letter>
     d90:	90 93 33 3c 	sts	0x3C33, r25	; 0x803c33 <letter+0x1>
     d94:	3c c2       	rjmp	.+1144   	; 0x120e <main+0x5f0>
     d96:	a6 e0       	ldi	r26, 0x06	; 6
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	a0 93 32 3c 	sts	0x3C32, r26	; 0x803c32 <letter>
     d9e:	b0 93 33 3c 	sts	0x3C33, r27	; 0x803c33 <letter+0x1>
     da2:	35 c2       	rjmp	.+1130   	; 0x120e <main+0x5f0>
     da4:	40 92 32 3c 	sts	0x3C32, r4	; 0x803c32 <letter>
     da8:	50 92 33 3c 	sts	0x3C33, r5	; 0x803c33 <letter+0x1>
     dac:	30 c2       	rjmp	.+1120   	; 0x120e <main+0x5f0>
     dae:	e8 e0       	ldi	r30, 0x08	; 8
     db0:	f0 e0       	ldi	r31, 0x00	; 0
     db2:	e0 93 32 3c 	sts	0x3C32, r30	; 0x803c32 <letter>
     db6:	f0 93 33 3c 	sts	0x3C33, r31	; 0x803c33 <letter+0x1>
     dba:	1c c2       	rjmp	.+1080   	; 0x11f4 <main+0x5d6>
     dbc:	20 91 32 3c 	lds	r18, 0x3C32	; 0x803c32 <letter>
     dc0:	30 91 33 3c 	lds	r19, 0x3C33	; 0x803c33 <letter+0x1>
     dc4:	40 91 07 3c 	lds	r20, 0x3C07	; 0x803c07 <transaction_type>
     dc8:	43 36       	cpi	r20, 0x63	; 99
     dca:	e9 f4       	brne	.+58     	; 0xe06 <main+0x1e8>
     dcc:	40 91 04 04 	lds	r20, 0x0404	; 0x800404 <__TEXT_REGION_LENGTH__+0x700404>
     dd0:	41 70       	andi	r20, 0x01	; 1
     dd2:	40 93 04 04 	sts	0x0404, r20	; 0x800404 <__TEXT_REGION_LENGTH__+0x700404>
     dd6:	d1 01       	movw	r26, r2
     dd8:	14 96       	adiw	r26, 0x04	; 4
     dda:	4c 91       	ld	r20, X
     ddc:	14 97       	sbiw	r26, 0x04	; 4
     dde:	4e 7f       	andi	r20, 0xFE	; 254
     de0:	14 96       	adiw	r26, 0x04	; 4
     de2:	4c 93       	st	X, r20
     de4:	14 97       	sbiw	r26, 0x04	; 4
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	4c 91       	ld	r20, X
     dea:	14 97       	sbiw	r26, 0x04	; 4
     dec:	4e 63       	ori	r20, 0x3E	; 62
     dee:	14 96       	adiw	r26, 0x04	; 4
     df0:	4c 93       	st	X, r20
     df2:	40 91 44 04 	lds	r20, 0x0444	; 0x800444 <__TEXT_REGION_LENGTH__+0x700444>
     df6:	47 60       	ori	r20, 0x07	; 7
     df8:	40 93 44 04 	sts	0x0444, r20	; 0x800444 <__TEXT_REGION_LENGTH__+0x700444>
     dfc:	fe 01       	movw	r30, r28
     dfe:	11 92       	st	Z+, r1
     e00:	0e 17       	cp	r16, r30
     e02:	1f 07       	cpc	r17, r31
     e04:	e1 f7       	brne	.-8      	; 0xdfe <main+0x1e0>
     e06:	40 91 07 3c 	lds	r20, 0x3C07	; 0x803c07 <transaction_type>
     e0a:	42 36       	cpi	r20, 0x62	; 98
     e0c:	09 f0       	breq	.+2      	; 0xe10 <main+0x1f2>
     e0e:	f2 c1       	rjmp	.+996    	; 0x11f4 <main+0x5d6>
     e10:	f9 01       	movw	r30, r18
     e12:	e6 5e       	subi	r30, 0xE6	; 230
     e14:	f3 4c       	sbci	r31, 0xC3	; 195
     e16:	40 81       	ld	r20, Z
     e18:	64 2f       	mov	r22, r20
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	08 2e       	mov	r0, r24
     e1e:	02 c0       	rjmp	.+4      	; 0xe24 <main+0x206>
     e20:	75 95       	asr	r23
     e22:	67 95       	ror	r22
     e24:	0a 94       	dec	r0
     e26:	e2 f7       	brpl	.-8      	; 0xe20 <main+0x202>
     e28:	60 ff       	sbrs	r22, 0
     e2a:	0e c0       	rjmp	.+28     	; 0xe48 <main+0x22a>
     e2c:	f9 01       	movw	r30, r18
     e2e:	e6 5e       	subi	r30, 0xE6	; 230
     e30:	f3 4c       	sbci	r31, 0xC3	; 195
     e32:	92 01       	movw	r18, r4
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <main+0x21c>
     e36:	22 0f       	add	r18, r18
     e38:	33 1f       	adc	r19, r19
     e3a:	8a 95       	dec	r24
     e3c:	e2 f7       	brpl	.-8      	; 0xe36 <main+0x218>
     e3e:	c9 01       	movw	r24, r18
     e40:	80 95       	com	r24
     e42:	48 23       	and	r20, r24
     e44:	40 83       	st	Z, r20
     e46:	d6 c1       	rjmp	.+940    	; 0x11f4 <main+0x5d6>
     e48:	f9 01       	movw	r30, r18
     e4a:	e6 5e       	subi	r30, 0xE6	; 230
     e4c:	f3 4c       	sbci	r31, 0xC3	; 195
     e4e:	d2 01       	movw	r26, r4
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <main+0x238>
     e52:	aa 0f       	add	r26, r26
     e54:	bb 1f       	adc	r27, r27
     e56:	8a 95       	dec	r24
     e58:	e2 f7       	brpl	.-8      	; 0xe52 <main+0x234>
     e5a:	cd 01       	movw	r24, r26
     e5c:	84 2b       	or	r24, r20
     e5e:	80 83       	st	Z, r24
     e60:	c9 c1       	rjmp	.+914    	; 0x11f4 <main+0x5d6>
		
	case 'A':													//When "cr" detected convert string from UNO to long number
	if(cr_keypress == 1){
     e62:	80 91 03 3c 	lds	r24, 0x3C03	; 0x803c03 <cr_keypress>
     e66:	81 30       	cpi	r24, 0x01	; 1
     e68:	09 f0       	breq	.+2      	; 0xe6c <main+0x24e>
     e6a:	c4 c1       	rjmp	.+904    	; 0x11f4 <main+0x5d6>
	cr_keypress = 0;
     e6c:	10 92 03 3c 	sts	0x3C03, r1	; 0x803c03 <cr_keypress>
     e70:	ad e3       	ldi	r26, 0x3D	; 61
     e72:	bc e3       	ldi	r27, 0x3C	; 60
     e74:	fd 01       	movw	r30, r26
	display_buffer2temp;										//Reverse string prior to conversion to binary
     e76:	11 92       	st	Z+, r1
     e78:	ee 16       	cp	r14, r30
     e7a:	ff 06       	cpc	r15, r31
     e7c:	e1 f7       	brne	.-8      	; 0xe76 <main+0x258>
     e7e:	f6 01       	movw	r30, r12
     e80:	86 85       	ldd	r24, Z+14	; 0x0e
     e82:	81 11       	cpse	r24, r1
     e84:	10 c0       	rjmp	.+32     	; 0xea6 <main+0x288>
     e86:	e8 e2       	ldi	r30, 0x28	; 40
     e88:	fc e3       	ldi	r31, 0x3C	; 60
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	92 91       	ld	r25, -Z
     e8e:	99 23       	and	r25, r25
     e90:	31 f0       	breq	.+12     	; 0xe9e <main+0x280>
     e92:	2e e0       	ldi	r18, 0x0E	; 14
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	28 1b       	sub	r18, r24
     e98:	31 09       	sbc	r19, r1
     e9a:	3a f4       	brpl	.+14     	; 0xeaa <main+0x28c>
     e9c:	11 c0       	rjmp	.+34     	; 0xec0 <main+0x2a2>
     e9e:	8f 5f       	subi	r24, 0xFF	; 255
     ea0:	8f 30       	cpi	r24, 0x0F	; 15
     ea2:	a1 f7       	brne	.-24     	; 0xe8c <main+0x26e>
     ea4:	0d c0       	rjmp	.+26     	; 0xec0 <main+0x2a2>
     ea6:	2e e0       	ldi	r18, 0x0E	; 14
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	f9 01       	movw	r30, r18
     eac:	e5 5e       	subi	r30, 0xE5	; 229
     eae:	f3 4c       	sbci	r31, 0xC3	; 195
     eb0:	80 e0       	ldi	r24, 0x00	; 0
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	42 91       	ld	r20, -Z
     eb6:	4d 93       	st	X+, r20
     eb8:	01 96       	adiw	r24, 0x01	; 1
     eba:	28 17       	cp	r18, r24
     ebc:	39 07       	cpc	r19, r25
     ebe:	d4 f7       	brge	.-12     	; 0xeb4 <main+0x296>
	Long_Num_to_UNO = atol(temp_buffer);	
     ec0:	8d e3       	ldi	r24, 0x3D	; 61
     ec2:	9c e3       	ldi	r25, 0x3C	; 60
     ec4:	0e 94 12 11 	call	0x2224	; 0x2224 <atol>
     ec8:	60 93 37 3c 	sts	0x3C37, r22	; 0x803c37 <Long_Num_to_UNO>
     ecc:	70 93 38 3c 	sts	0x3C38, r23	; 0x803c38 <Long_Num_to_UNO+0x1>
     ed0:	80 93 39 3c 	sts	0x3C39, r24	; 0x803c39 <Long_Num_to_UNO+0x2>
     ed4:	90 93 3a 3c 	sts	0x3C3A, r25	; 0x803c3a <Long_Num_to_UNO+0x3>
	for(int m = 0; m <= 3; m++)
	data_byte[m] = Long_Num_to_UNO >> (8*(3-m));}				//Split long number into 4 bytes for re-transmission
     ed8:	e9 e0       	ldi	r30, 0x09	; 9
     eda:	fc e3       	ldi	r31, 0x3C	; 60
     edc:	90 83       	st	Z, r25
     ede:	81 83       	std	Z+1, r24	; 0x01
     ee0:	72 83       	std	Z+2, r23	; 0x02
     ee2:	63 83       	std	Z+3, r22	; 0x03
     ee4:	87 c1       	rjmp	.+782    	; 0x11f4 <main+0x5d6>
	break;
		
	case 'B':													//When "cr" detected convert string from UNO to float
	if(cr_keypress == 1){
     ee6:	80 91 03 3c 	lds	r24, 0x3C03	; 0x803c03 <cr_keypress>
     eea:	81 30       	cpi	r24, 0x01	; 1
     eec:	09 f0       	breq	.+2      	; 0xef0 <main+0x2d2>
     eee:	82 c1       	rjmp	.+772    	; 0x11f4 <main+0x5d6>
	cr_keypress = 0;
     ef0:	10 92 03 3c 	sts	0x3C03, r1	; 0x803c03 <cr_keypress>
	check_for_dp;
     ef4:	d6 01       	movw	r26, r12
     ef6:	1e 96       	adiw	r26, 0x0e	; 14
     ef8:	8c 91       	ld	r24, X
     efa:	88 23       	and	r24, r24
     efc:	64 f1       	brlt	.+88     	; 0xf56 <main+0x338>
     efe:	a8 e2       	ldi	r26, 0x28	; 40
     f00:	bc e3       	ldi	r27, 0x3C	; 60
     f02:	2b e1       	ldi	r18, 0x1B	; 27
     f04:	3c e3       	ldi	r19, 0x3C	; 60
     f06:	fd 01       	movw	r30, r26
     f08:	03 c0       	rjmp	.+6      	; 0xf10 <main+0x2f2>
     f0a:	e2 17       	cp	r30, r18
     f0c:	f3 07       	cpc	r31, r19
     f0e:	21 f0       	breq	.+8      	; 0xf18 <main+0x2fa>
     f10:	82 91       	ld	r24, -Z
     f12:	88 23       	and	r24, r24
     f14:	d4 f7       	brge	.-12     	; 0xf0a <main+0x2ec>
     f16:	1f c0       	rjmp	.+62     	; 0xf56 <main+0x338>
     f18:	fe 01       	movw	r30, r28
     f1a:	80 e0       	ldi	r24, 0x00	; 0
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	40 e0       	ldi	r20, 0x00	; 0
     f20:	50 e0       	ldi	r21, 0x00	; 0
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
     f22:	61 91       	ld	r22, Z+
     f24:	6f 7d       	andi	r22, 0xDF	; 223
     f26:	65 34       	cpi	r22, 0x45	; 69
     f28:	09 f4       	brne	.+2      	; 0xf2c <main+0x30e>
     f2a:	ac 01       	movw	r20, r24
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	8f 30       	cpi	r24, 0x0F	; 15
     f30:	91 05       	cpc	r25, r1
     f32:	b9 f7       	brne	.-18     	; 0xf22 <main+0x304>
     f34:	41 15       	cp	r20, r1
     f36:	51 05       	cpc	r21, r1
     f38:	59 f0       	breq	.+22     	; 0xf50 <main+0x332>
     f3a:	fa 01       	movw	r30, r20
     f3c:	e5 5e       	subi	r30, 0xE5	; 229
     f3e:	f3 4c       	sbci	r31, 0xC3	; 195
     f40:	80 81       	ld	r24, Z
     f42:	80 68       	ori	r24, 0x80	; 128
     f44:	80 83       	st	Z, r24
     f46:	07 c0       	rjmp	.+14     	; 0xf56 <main+0x338>
     f48:	2a 17       	cp	r18, r26
     f4a:	3b 07       	cpc	r19, r27
     f4c:	09 f4       	brne	.+2      	; 0xf50 <main+0x332>
     f4e:	67 c1       	rjmp	.+718    	; 0x121e <main+0x600>
     f50:	8e 91       	ld	r24, -X
     f52:	88 23       	and	r24, r24
     f54:	cc f7       	brge	.-14     	; 0xf48 <main+0x32a>
     f56:	ad e3       	ldi	r26, 0x3D	; 61
     f58:	bc e3       	ldi	r27, 0x3C	; 60
     f5a:	fd 01       	movw	r30, r26
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
     f5c:	11 92       	st	Z+, r1
     f5e:	ee 16       	cp	r14, r30
     f60:	ff 06       	cpc	r15, r31
     f62:	e1 f7       	brne	.-8      	; 0xf5c <main+0x33e>
     f64:	61 c1       	rjmp	.+706    	; 0x1228 <main+0x60a>
     f66:	92 91       	ld	r25, -Z
     f68:	99 23       	and	r25, r25
     f6a:	31 f0       	breq	.+12     	; 0xf78 <main+0x35a>
     f6c:	2e e0       	ldi	r18, 0x0E	; 14
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	28 1b       	sub	r18, r24
     f72:	31 09       	sbc	r19, r1
     f74:	3a f4       	brpl	.+14     	; 0xf84 <main+0x366>
     f76:	60 c1       	rjmp	.+704    	; 0x1238 <main+0x61a>
     f78:	8f 5f       	subi	r24, 0xFF	; 255
     f7a:	8f 30       	cpi	r24, 0x0F	; 15
     f7c:	a1 f7       	brne	.-24     	; 0xf66 <main+0x348>
     f7e:	5c c1       	rjmp	.+696    	; 0x1238 <main+0x61a>
     f80:	2e e0       	ldi	r18, 0x0E	; 14
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	f9 01       	movw	r30, r18
     f86:	e5 5e       	subi	r30, 0xE5	; 229
     f88:	f3 4c       	sbci	r31, 0xC3	; 195
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	42 91       	ld	r20, -Z
     f90:	4d 93       	st	X+, r20
     f92:	01 96       	adiw	r24, 0x01	; 1
     f94:	28 17       	cp	r18, r24
     f96:	39 07       	cpc	r19, r25
     f98:	d4 f7       	brge	.-12     	; 0xf8e <main+0x370>
     f9a:	4e c1       	rjmp	.+668    	; 0x1238 <main+0x61a>
	extract_dp;													//Display merges the dp with a digit  											
     f9c:	81 91       	ld	r24, Z+
     f9e:	88 23       	and	r24, r24
     fa0:	54 f0       	brlt	.+20     	; 0xfb6 <main+0x398>
     fa2:	4f 5f       	subi	r20, 0xFF	; 255
     fa4:	5f 4f       	sbci	r21, 0xFF	; 255
     fa6:	4f 30       	cpi	r20, 0x0F	; 15
     fa8:	51 05       	cpc	r21, r1
     faa:	c1 f7       	brne	.-16     	; 0xf9c <main+0x37e>
     fac:	22 e0       	ldi	r18, 0x02	; 2
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	40 e0       	ldi	r20, 0x00	; 0
     fb2:	50 e0       	ldi	r21, 0x00	; 0
     fb4:	0b c0       	rjmp	.+22     	; 0xfcc <main+0x3ae>
     fb6:	fa 01       	movw	r30, r20
     fb8:	e3 5c       	subi	r30, 0xC3	; 195
     fba:	f3 4c       	sbci	r31, 0xC3	; 195
     fbc:	8f 77       	andi	r24, 0x7F	; 127
     fbe:	80 83       	st	Z, r24
     fc0:	9a 01       	movw	r18, r20
     fc2:	2e 5f       	subi	r18, 0xFE	; 254
     fc4:	3f 4f       	sbci	r19, 0xFF	; 255
     fc6:	2f 30       	cpi	r18, 0x0F	; 15
     fc8:	31 05       	cpc	r19, r1
     fca:	54 f4       	brge	.+20     	; 0xfe0 <main+0x3c2>
     fcc:	eb e4       	ldi	r30, 0x4B	; 75
     fce:	fc e3       	ldi	r31, 0x3C	; 60
     fd0:	8e e0       	ldi	r24, 0x0E	; 14
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	01 97       	sbiw	r24, 0x01	; 1
     fd6:	62 91       	ld	r22, -Z
     fd8:	61 83       	std	Z+1, r22	; 0x01
     fda:	82 17       	cp	r24, r18
     fdc:	93 07       	cpc	r25, r19
     fde:	d4 f7       	brge	.-12     	; 0xfd4 <main+0x3b6>
     fe0:	fa 01       	movw	r30, r20
     fe2:	e3 5c       	subi	r30, 0xC3	; 195
     fe4:	f3 4c       	sbci	r31, 0xC3	; 195
     fe6:	8e e2       	ldi	r24, 0x2E	; 46
     fe8:	81 83       	std	Z+1, r24	; 0x01
	Float_Num_to_UNO = atof(temp_buffer);
     fea:	8d e3       	ldi	r24, 0x3D	; 61
     fec:	9c e3       	ldi	r25, 0x3C	; 60
     fee:	0e 94 0e 11 	call	0x221c	; 0x221c <atof>
     ff2:	60 93 13 3c 	sts	0x3C13, r22	; 0x803c13 <Float_Num_to_UNO>
     ff6:	70 93 14 3c 	sts	0x3C14, r23	; 0x803c14 <Float_Num_to_UNO+0x1>
     ffa:	80 93 15 3c 	sts	0x3C15, r24	; 0x803c15 <Float_Num_to_UNO+0x2>
     ffe:	90 93 16 3c 	sts	0x3C16, r25	; 0x803c16 <Float_Num_to_UNO+0x3>
	char_ptr = (char*)&Float_Num_to_UNO;						//Split the number into bytes ready for return to the UNO
    1002:	83 e1       	ldi	r24, 0x13	; 19
    1004:	9c e3       	ldi	r25, 0x3C	; 60
    1006:	80 93 34 3c 	sts	0x3C34, r24	; 0x803c34 <char_ptr>
    100a:	90 93 35 3c 	sts	0x3C35, r25	; 0x803c35 <char_ptr+0x1>
    100e:	a9 e0       	ldi	r26, 0x09	; 9
    1010:	bc e3       	ldi	r27, 0x3C	; 60
    1012:	2d e0       	ldi	r18, 0x0D	; 13
    1014:	3c e3       	ldi	r19, 0x3C	; 60
	for (int m = 0; m <= 3; m++)
	{data_byte[m] = *char_ptr;
    1016:	e0 91 34 3c 	lds	r30, 0x3C34	; 0x803c34 <char_ptr>
    101a:	f0 91 35 3c 	lds	r31, 0x3C35	; 0x803c35 <char_ptr+0x1>
    101e:	81 91       	ld	r24, Z+
    1020:	8d 93       	st	X+, r24
	char_ptr += 1;}
    1022:	e0 93 34 3c 	sts	0x3C34, r30	; 0x803c34 <char_ptr>
    1026:	f0 93 35 3c 	sts	0x3C35, r31	; 0x803c35 <char_ptr+0x1>
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
	extract_dp;													//Display merges the dp with a digit  											
	Float_Num_to_UNO = atof(temp_buffer);
	char_ptr = (char*)&Float_Num_to_UNO;						//Split the number into bytes ready for return to the UNO
	for (int m = 0; m <= 3; m++)
    102a:	a2 17       	cp	r26, r18
    102c:	b3 07       	cpc	r27, r19
    102e:	99 f7       	brne	.-26     	; 0x1016 <main+0x3f8>
    1030:	e1 c0       	rjmp	.+450    	; 0x11f4 <main+0x5d6>
	while(1){
		while(!(transaction_complete));							//Wait here for requests from the UNO
		transaction_complete = 0;
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
    1032:	fe 01       	movw	r30, r28
	char_ptr += 1;}
	}break;
		
		
	case 'C':													//Convert long from UNO to string
	clear_display_buffer;
    1034:	11 92       	st	Z+, r1
    1036:	0e 17       	cp	r16, r30
    1038:	1f 07       	cpc	r17, r31
    103a:	e1 f7       	brne	.-8      	; 0x1034 <main+0x416>
    103c:	ed e3       	ldi	r30, 0x3D	; 61
    103e:	fc e3       	ldi	r31, 0x3C	; 60
	clear_temp_buffer;
    1040:	11 92       	st	Z+, r1
    1042:	ee 15       	cp	r30, r14
    1044:	ff 05       	cpc	r31, r15
    1046:	e1 f7       	brne	.-8      	; 0x1040 <main+0x422>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
    1048:	60 91 2e 3c 	lds	r22, 0x3C2E	; 0x803c2e <Long_Num_from_UNO>
    104c:	70 91 2f 3c 	lds	r23, 0x3C2F	; 0x803c2f <Long_Num_from_UNO+0x1>
    1050:	80 91 30 3c 	lds	r24, 0x3C30	; 0x803c30 <Long_Num_from_UNO+0x2>
    1054:	90 91 31 3c 	lds	r25, 0x3C31	; 0x803c31 <Long_Num_from_UNO+0x3>
    1058:	2a e0       	ldi	r18, 0x0A	; 10
    105a:	4d e3       	ldi	r20, 0x3D	; 61
    105c:	5c e3       	ldi	r21, 0x3C	; 60
    105e:	0e 94 39 11 	call	0x2272	; 0x2272 <__ltoa_ncheck>
	ltoa(Long_Num_from_UNO, temp_buffer, 10);
	temp2display_buffer;										//Reverse string prior to display	
    1062:	80 91 4b 3c 	lds	r24, 0x3C4B	; 0x803c4b <temp_buffer+0xe>
    1066:	81 11       	cpse	r24, r1
    1068:	10 c0       	rjmp	.+32     	; 0x108a <main+0x46c>
    106a:	eb e4       	ldi	r30, 0x4B	; 75
    106c:	fc e3       	ldi	r31, 0x3C	; 60
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	92 91       	ld	r25, -Z
    1072:	99 23       	and	r25, r25
    1074:	31 f0       	breq	.+12     	; 0x1082 <main+0x464>
    1076:	2e e0       	ldi	r18, 0x0E	; 14
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	28 1b       	sub	r18, r24
    107c:	31 09       	sbc	r19, r1
    107e:	3a f4       	brpl	.+14     	; 0x108e <main+0x470>
    1080:	b9 c0       	rjmp	.+370    	; 0x11f4 <main+0x5d6>
    1082:	8f 5f       	subi	r24, 0xFF	; 255
    1084:	8f 30       	cpi	r24, 0x0F	; 15
    1086:	a1 f7       	brne	.-24     	; 0x1070 <main+0x452>
    1088:	b5 c0       	rjmp	.+362    	; 0x11f4 <main+0x5d6>
    108a:	2e e0       	ldi	r18, 0x0E	; 14
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	d9 01       	movw	r26, r18
    1090:	a2 5c       	subi	r26, 0xC2	; 194
    1092:	b3 4c       	sbci	r27, 0xC3	; 195
    1094:	fe 01       	movw	r30, r28
    1096:	80 e0       	ldi	r24, 0x00	; 0
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	4e 91       	ld	r20, -X
    109c:	41 93       	st	Z+, r20
    109e:	01 96       	adiw	r24, 0x01	; 1
    10a0:	28 17       	cp	r18, r24
    10a2:	39 07       	cpc	r19, r25
    10a4:	d4 f7       	brge	.-12     	; 0x109a <main+0x47c>
    10a6:	a6 c0       	rjmp	.+332    	; 0x11f4 <main+0x5d6>
	break;
			
	case 'D': 													//Convert float from UNO to string
	Float_Num_from_UNO  = *float_ptr;
    10a8:	e0 91 0d 3c 	lds	r30, 0x3C0D	; 0x803c0d <float_ptr>
    10ac:	f0 91 0e 3c 	lds	r31, 0x3C0E	; 0x803c0e <float_ptr+0x1>
    10b0:	60 81       	ld	r22, Z
    10b2:	71 81       	ldd	r23, Z+1	; 0x01
    10b4:	82 81       	ldd	r24, Z+2	; 0x02
    10b6:	93 81       	ldd	r25, Z+3	; 0x03
    10b8:	60 93 0f 3c 	sts	0x3C0F, r22	; 0x803c0f <Float_Num_from_UNO>
    10bc:	70 93 10 3c 	sts	0x3C10, r23	; 0x803c10 <Float_Num_from_UNO+0x1>
    10c0:	80 93 11 3c 	sts	0x3C11, r24	; 0x803c11 <Float_Num_from_UNO+0x2>
    10c4:	90 93 12 3c 	sts	0x3C12, r25	; 0x803c12 <Float_Num_from_UNO+0x3>
	ftoaL(Float_Num_from_UNO);
    10c8:	0e 94 06 04 	call	0x80c	; 0x80c <ftoaL>
	Combine_dp;		 
    10cc:	80 91 3d 3c 	lds	r24, 0x3C3D	; 0x803c3d <temp_buffer>
    10d0:	8e 32       	cpi	r24, 0x2E	; 46
    10d2:	21 f4       	brne	.+8      	; 0x10dc <main+0x4be>
    10d4:	80 eb       	ldi	r24, 0xB0	; 176
    10d6:	80 93 3d 3c 	sts	0x3C3D, r24	; 0x803c3d <temp_buffer>
    10da:	1e c0       	rjmp	.+60     	; 0x1118 <main+0x4fa>
    10dc:	ee e3       	ldi	r30, 0x3E	; 62
    10de:	fc e3       	ldi	r31, 0x3C	; 60
    10e0:	81 e0       	ldi	r24, 0x01	; 1
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	21 91       	ld	r18, Z+
    10e6:	2e 32       	cpi	r18, 0x2E	; 46
    10e8:	29 f0       	breq	.+10     	; 0x10f4 <main+0x4d6>
    10ea:	01 96       	adiw	r24, 0x01	; 1
    10ec:	8f 30       	cpi	r24, 0x0F	; 15
    10ee:	91 05       	cpc	r25, r1
    10f0:	c9 f7       	brne	.-14     	; 0x10e4 <main+0x4c6>
    10f2:	ab c0       	rjmp	.+342    	; 0x124a <main+0x62c>
    10f4:	fc 01       	movw	r30, r24
    10f6:	e4 5c       	subi	r30, 0xC4	; 196
    10f8:	f3 4c       	sbci	r31, 0xC3	; 195
    10fa:	20 81       	ld	r18, Z
    10fc:	20 68       	ori	r18, 0x80	; 128
    10fe:	20 83       	st	Z, r18
    1100:	8e 30       	cpi	r24, 0x0E	; 14
    1102:	91 05       	cpc	r25, r1
    1104:	4c f4       	brge	.+18     	; 0x1118 <main+0x4fa>
    1106:	fc 01       	movw	r30, r24
    1108:	e3 5c       	subi	r30, 0xC3	; 195
    110a:	f3 4c       	sbci	r31, 0xC3	; 195
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	21 81       	ldd	r18, Z+1	; 0x01
    1110:	21 93       	st	Z+, r18
    1112:	8e 30       	cpi	r24, 0x0E	; 14
    1114:	91 05       	cpc	r25, r1
    1116:	d4 f3       	brlt	.-12     	; 0x110c <main+0x4ee>
	Insert_sign;
    1118:	80 91 08 3c 	lds	r24, 0x3C08	; 0x803c08 <sign>
    111c:	8d 32       	cpi	r24, 0x2D	; 45
    111e:	61 f4       	brne	.+24     	; 0x1138 <main+0x51a>
    1120:	eb e4       	ldi	r30, 0x4B	; 75
    1122:	fc e3       	ldi	r31, 0x3C	; 60
    1124:	2d e3       	ldi	r18, 0x3D	; 61
    1126:	3c e3       	ldi	r19, 0x3C	; 60
    1128:	82 91       	ld	r24, -Z
    112a:	81 83       	std	Z+1, r24	; 0x01
    112c:	e2 17       	cp	r30, r18
    112e:	f3 07       	cpc	r31, r19
    1130:	d9 f7       	brne	.-10     	; 0x1128 <main+0x50a>
    1132:	8d e2       	ldi	r24, 0x2D	; 45
    1134:	80 93 3d 3c 	sts	0x3C3D, r24	; 0x803c3d <temp_buffer>
    1138:	ec e4       	ldi	r30, 0x4C	; 76
    113a:	fc e3       	ldi	r31, 0x3C	; 60
    113c:	01 c0       	rjmp	.+2      	; 0x1140 <main+0x522>
	Remove_lagging_zeros;
    113e:	1c 92       	st	X, r1
    1140:	31 97       	sbiw	r30, 0x01	; 1
    1142:	df 01       	movw	r26, r30
    1144:	80 81       	ld	r24, Z
    1146:	88 23       	and	r24, r24
    1148:	d1 f3       	breq	.-12     	; 0x113e <main+0x520>
    114a:	80 33       	cpi	r24, 0x30	; 48
    114c:	c1 f3       	breq	.-16     	; 0x113e <main+0x520>
	temp2display_buffer;										//Reverse string prior to display
    114e:	80 91 4b 3c 	lds	r24, 0x3C4B	; 0x803c4b <temp_buffer+0xe>
    1152:	81 11       	cpse	r24, r1
    1154:	10 c0       	rjmp	.+32     	; 0x1176 <main+0x558>
    1156:	eb e4       	ldi	r30, 0x4B	; 75
    1158:	fc e3       	ldi	r31, 0x3C	; 60
    115a:	81 e0       	ldi	r24, 0x01	; 1
    115c:	92 91       	ld	r25, -Z
    115e:	99 23       	and	r25, r25
    1160:	31 f0       	breq	.+12     	; 0x116e <main+0x550>
    1162:	2e e0       	ldi	r18, 0x0E	; 14
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	28 1b       	sub	r18, r24
    1168:	31 09       	sbc	r19, r1
    116a:	3a f4       	brpl	.+14     	; 0x117a <main+0x55c>
    116c:	12 c0       	rjmp	.+36     	; 0x1192 <main+0x574>
    116e:	8f 5f       	subi	r24, 0xFF	; 255
    1170:	8f 30       	cpi	r24, 0x0F	; 15
    1172:	a1 f7       	brne	.-24     	; 0x115c <main+0x53e>
    1174:	0e c0       	rjmp	.+28     	; 0x1192 <main+0x574>
    1176:	2e e0       	ldi	r18, 0x0E	; 14
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	d9 01       	movw	r26, r18
    117c:	a2 5c       	subi	r26, 0xC2	; 194
    117e:	b3 4c       	sbci	r27, 0xC3	; 195
    1180:	fe 01       	movw	r30, r28
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	4e 91       	ld	r20, -X
    1188:	41 93       	st	Z+, r20
    118a:	01 96       	adiw	r24, 0x01	; 1
    118c:	28 17       	cp	r18, r24
    118e:	39 07       	cpc	r19, r25
    1190:	d4 f7       	brge	.-12     	; 0x1186 <main+0x568>
	if (expt){Left_justify_number;
    1192:	80 91 19 3c 	lds	r24, 0x3C19	; 0x803c19 <expt>
    1196:	88 23       	and	r24, r24
    1198:	69 f1       	breq	.+90     	; 0x11f4 <main+0x5d6>
    119a:	e8 e2       	ldi	r30, 0x28	; 40
    119c:	fc e3       	ldi	r31, 0x3C	; 60
    119e:	82 91       	ld	r24, -Z
    11a0:	81 83       	std	Z+1, r24	; 0x01
    11a2:	ec 17       	cp	r30, r28
    11a4:	fd 07       	cpc	r31, r29
    11a6:	d9 f7       	brne	.-10     	; 0x119e <main+0x580>
    11a8:	f6 01       	movw	r30, r12
    11aa:	10 82       	st	Z, r1
    11ac:	87 81       	ldd	r24, Z+7	; 0x07
    11ae:	88 23       	and	r24, r24
    11b0:	a1 f3       	breq	.-24     	; 0x119a <main+0x57c>
	Add_exponent ();}
    11b2:	0e 94 89 05 	call	0xb12	; 0xb12 <Add_exponent>
    11b6:	1e c0       	rjmp	.+60     	; 0x11f4 <main+0x5d6>
    11b8:	ad e3       	ldi	r26, 0x3D	; 61
    11ba:	bc e3       	ldi	r27, 0x3C	; 60
	while(1){
		while(!(transaction_complete));							//Wait here for requests from the UNO
		transaction_complete = 0;
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
    11bc:	cd 01       	movw	r24, r26
    11be:	fe 01       	movw	r30, r28
    11c0:	ad 01       	movw	r20, r26
	Add_exponent ();}
	break;
		
	case 'E':													//Return binary number (long or float) to UNO
	for(int m = 0; m <= 7; m++)
	temp_buffer[m] = display_buffer[m];							//Flash display
    11c2:	21 91       	ld	r18, Z+
    11c4:	dc 01       	movw	r26, r24
    11c6:	2d 93       	st	X+, r18
    11c8:	cd 01       	movw	r24, r26
	if (expt){Left_justify_number;
	Add_exponent ();}
	break;
		
	case 'E':													//Return binary number (long or float) to UNO
	for(int m = 0; m <= 7; m++)
    11ca:	ae 16       	cp	r10, r30
    11cc:	bf 06       	cpc	r11, r31
    11ce:	c9 f7       	brne	.-14     	; 0x11c2 <main+0x5a4>
    11d0:	da 01       	movw	r26, r20
    11d2:	fe 01       	movw	r30, r28
	temp_buffer[m] = display_buffer[m];							//Flash display
	clear_display_buffer;
    11d4:	11 92       	st	Z+, r1
    11d6:	0e 17       	cp	r16, r30
    11d8:	1f 07       	cpc	r17, r31
    11da:	e1 f7       	brne	.-8      	; 0x11d4 <main+0x5b6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11dc:	e7 ea       	ldi	r30, 0xA7	; 167
    11de:	f1 e6       	ldi	r31, 0x61	; 97
    11e0:	31 97       	sbiw	r30, 0x01	; 1
    11e2:	f1 f7       	brne	.-4      	; 0x11e0 <main+0x5c2>
    11e4:	00 c0       	rjmp	.+0      	; 0x11e6 <main+0x5c8>
    11e6:	00 00       	nop
    11e8:	fe 01       	movw	r30, r28
	_delay_ms(100);
	for(int m = 0; m <= 7; m++)
	display_buffer[m] = temp_buffer[m];
    11ea:	8d 91       	ld	r24, X+
    11ec:	81 93       	st	Z+, r24
	case 'E':													//Return binary number (long or float) to UNO
	for(int m = 0; m <= 7; m++)
	temp_buffer[m] = display_buffer[m];							//Flash display
	clear_display_buffer;
	_delay_ms(100);
	for(int m = 0; m <= 7; m++)
    11ee:	a8 15       	cp	r26, r8
    11f0:	b9 05       	cpc	r27, r9
    11f2:	d9 f7       	brne	.-10     	; 0x11ea <main+0x5cc>
	case 'G': break;											//Toggles brightness
	
	
	
	}
	if(transaction_type != 'G')mode = transaction_type;	
    11f4:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
    11f8:	87 34       	cpi	r24, 0x47	; 71
    11fa:	21 f0       	breq	.+8      	; 0x1204 <main+0x5e6>
    11fc:	80 91 07 3c 	lds	r24, 0x3C07	; 0x803c07 <transaction_type>
    1200:	80 93 36 3c 	sts	0x3C36, r24	; 0x803c36 <mode>
	transaction_type = 0;
    1204:	10 92 07 3c 	sts	0x3C07, r1	; 0x803c07 <transaction_type>
	busy_flag = 0;
    1208:	10 92 00 3c 	sts	0x3C00, r1	; 0x803c00 <_edata>
	}}
    120c:	78 cd       	rjmp	.-1296   	; 0xcfe <main+0xe0>
		busy_flag = 1;											//Do not contact UNO until data processing is complete
		
	switch (transaction_type){									//Transaction complete: Process the data
	
	case 'a': break;											//One_wire_Tx_2_integers()
	case 'b': I2C_Tx_any_segment; break;			
    120e:	80 91 4c 3c 	lds	r24, 0x3C4C	; 0x803c4c <digit_num>
    1212:	90 91 4d 3c 	lds	r25, 0x3C4D	; 0x803c4d <digit_num+0x1>
    1216:	88 30       	cpi	r24, 0x08	; 8
    1218:	91 05       	cpc	r25, r1
    121a:	60 f7       	brcc	.-40     	; 0x11f4 <main+0x5d6>
    121c:	cf cd       	rjmp	.-1122   	; 0xdbc <main+0x19e>
		
	case 'B':													//When "cr" detected convert string from UNO to float
	if(cr_keypress == 1){
	cr_keypress = 0;
	check_for_dp;
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
    121e:	d6 01       	movw	r26, r12
    1220:	8c 91       	ld	r24, X
    1222:	80 68       	ori	r24, 0x80	; 128
    1224:	8c 93       	st	X, r24
    1226:	97 ce       	rjmp	.-722    	; 0xf56 <main+0x338>
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
    1228:	f6 01       	movw	r30, r12
    122a:	86 85       	ldd	r24, Z+14	; 0x0e
    122c:	81 11       	cpse	r24, r1
    122e:	a8 ce       	rjmp	.-688    	; 0xf80 <main+0x362>
    1230:	e8 e2       	ldi	r30, 0x28	; 40
    1232:	fc e3       	ldi	r31, 0x3C	; 60
    1234:	81 e0       	ldi	r24, 0x01	; 1
    1236:	97 ce       	rjmp	.-722    	; 0xf66 <main+0x348>
	extract_dp;													//Display merges the dp with a digit  											
    1238:	80 91 3d 3c 	lds	r24, 0x3C3D	; 0x803c3d <temp_buffer>
    123c:	88 23       	and	r24, r24
    123e:	64 f0       	brlt	.+24     	; 0x1258 <main+0x63a>
    1240:	ee e3       	ldi	r30, 0x3E	; 62
    1242:	fc e3       	ldi	r31, 0x3C	; 60
    1244:	41 e0       	ldi	r20, 0x01	; 1
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	a9 ce       	rjmp	.-686    	; 0xf9c <main+0x37e>
	break;
			
	case 'D': 													//Convert float from UNO to string
	Float_Num_from_UNO  = *float_ptr;
	ftoaL(Float_Num_from_UNO);
	Combine_dp;		 
    124a:	d3 01       	movw	r26, r6
    124c:	8c 91       	ld	r24, X
    124e:	80 68       	ori	r24, 0x80	; 128
    1250:	8c 93       	st	X, r24
    1252:	80 e0       	ldi	r24, 0x00	; 0
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	57 cf       	rjmp	.-338    	; 0x1106 <main+0x4e8>
	if(cr_keypress == 1){
	cr_keypress = 0;
	check_for_dp;
	Add_dp_if_missing;											//FP arithmetic requires numbers with a dp
	display_buffer2temp;										//Reverse string prior to conversion to a FPN
	extract_dp;													//Display merges the dp with a digit  											
    1258:	8f 77       	andi	r24, 0x7F	; 127
    125a:	80 93 3d 3c 	sts	0x3C3D, r24	; 0x803c3d <temp_buffer>
    125e:	22 e0       	ldi	r18, 0x02	; 2
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	40 e0       	ldi	r20, 0x00	; 0
    1264:	50 e0       	ldi	r21, 0x00	; 0
    1266:	b2 ce       	rjmp	.-668    	; 0xfcc <main+0x3ae>

00001268 <Char_definition>:
		
		
		
	/*****************************************************************************************************************************/
	void Char_definition()
	{switch (display_buffer[display_ptr]){
    1268:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    126c:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    1270:	e6 5e       	subi	r30, 0xE6	; 230
    1272:	f3 4c       	sbci	r31, 0xC3	; 195
    1274:	e0 81       	ld	r30, Z
    1276:	8e 2f       	mov	r24, r30
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	fc 01       	movw	r30, r24
    127c:	bd 97       	sbiw	r30, 0x2d	; 45
    127e:	ed 38       	cpi	r30, 0x8D	; 141
    1280:	f1 05       	cpc	r31, r1
    1282:	08 f0       	brcs	.+2      	; 0x1286 <Char_definition+0x1e>
    1284:	1d c1       	rjmp	.+570    	; 0x14c0 <Char_definition+0x258>
    1286:	e9 57       	subi	r30, 0x79	; 121
    1288:	ff 4f       	sbci	r31, 0xFF	; 255
    128a:	0c 94 d2 10 	jmp	0x21a4	; 0x21a4 <__tablejump2__>
	case '0': zero; break;
    128e:	e0 e2       	ldi	r30, 0x20	; 32
    1290:	f4 e0       	ldi	r31, 0x04	; 4
    1292:	84 81       	ldd	r24, Z+4	; 0x04
    1294:	85 7c       	andi	r24, 0xC5	; 197
    1296:	84 83       	std	Z+4, r24	; 0x04
    1298:	e0 e4       	ldi	r30, 0x40	; 64
    129a:	f4 e0       	ldi	r31, 0x04	; 4
    129c:	84 81       	ldd	r24, Z+4	; 0x04
    129e:	89 7f       	andi	r24, 0xF9	; 249
    12a0:	84 83       	std	Z+4, r24	; 0x04
    12a2:	08 95       	ret
	case '1': one; break;
    12a4:	e0 e2       	ldi	r30, 0x20	; 32
    12a6:	f4 e0       	ldi	r31, 0x04	; 4
    12a8:	84 81       	ldd	r24, Z+4	; 0x04
    12aa:	8d 7e       	andi	r24, 0xED	; 237
    12ac:	84 83       	std	Z+4, r24	; 0x04
    12ae:	08 95       	ret
	case '2': two; break;
    12b0:	e0 e2       	ldi	r30, 0x20	; 32
    12b2:	f4 e0       	ldi	r31, 0x04	; 4
    12b4:	84 81       	ldd	r24, Z+4	; 0x04
    12b6:	87 7c       	andi	r24, 0xC7	; 199
    12b8:	84 83       	std	Z+4, r24	; 0x04
    12ba:	e0 e4       	ldi	r30, 0x40	; 64
    12bc:	f4 e0       	ldi	r31, 0x04	; 4
    12be:	84 81       	ldd	r24, Z+4	; 0x04
    12c0:	8a 7f       	andi	r24, 0xFA	; 250
    12c2:	84 83       	std	Z+4, r24	; 0x04
    12c4:	08 95       	ret
	case '3': three; break;
    12c6:	e0 e2       	ldi	r30, 0x20	; 32
    12c8:	f4 e0       	ldi	r31, 0x04	; 4
    12ca:	84 81       	ldd	r24, Z+4	; 0x04
    12cc:	85 7c       	andi	r24, 0xC5	; 197
    12ce:	84 83       	std	Z+4, r24	; 0x04
    12d0:	e0 e4       	ldi	r30, 0x40	; 64
    12d2:	f4 e0       	ldi	r31, 0x04	; 4
    12d4:	84 81       	ldd	r24, Z+4	; 0x04
    12d6:	8e 7f       	andi	r24, 0xFE	; 254
    12d8:	84 83       	std	Z+4, r24	; 0x04
    12da:	08 95       	ret
	case '4': four; break;
    12dc:	e0 e2       	ldi	r30, 0x20	; 32
    12de:	f4 e0       	ldi	r31, 0x04	; 4
    12e0:	84 81       	ldd	r24, Z+4	; 0x04
    12e2:	8d 7e       	andi	r24, 0xED	; 237
    12e4:	84 83       	std	Z+4, r24	; 0x04
    12e6:	e0 e4       	ldi	r30, 0x40	; 64
    12e8:	f4 e0       	ldi	r31, 0x04	; 4
    12ea:	84 81       	ldd	r24, Z+4	; 0x04
    12ec:	8c 7f       	andi	r24, 0xFC	; 252
    12ee:	84 83       	std	Z+4, r24	; 0x04
    12f0:	08 95       	ret
	case '5': five; break;
    12f2:	e0 e2       	ldi	r30, 0x20	; 32
    12f4:	f4 e0       	ldi	r31, 0x04	; 4
    12f6:	84 81       	ldd	r24, Z+4	; 0x04
    12f8:	85 7d       	andi	r24, 0xD5	; 213
    12fa:	84 83       	std	Z+4, r24	; 0x04
    12fc:	e0 e4       	ldi	r30, 0x40	; 64
    12fe:	f4 e0       	ldi	r31, 0x04	; 4
    1300:	84 81       	ldd	r24, Z+4	; 0x04
    1302:	8c 7f       	andi	r24, 0xFC	; 252
    1304:	84 83       	std	Z+4, r24	; 0x04
    1306:	08 95       	ret
	case '6': six; break;
    1308:	e0 e2       	ldi	r30, 0x20	; 32
    130a:	f4 e0       	ldi	r31, 0x04	; 4
    130c:	84 81       	ldd	r24, Z+4	; 0x04
    130e:	85 7f       	andi	r24, 0xF5	; 245
    1310:	84 83       	std	Z+4, r24	; 0x04
    1312:	e0 e4       	ldi	r30, 0x40	; 64
    1314:	f4 e0       	ldi	r31, 0x04	; 4
    1316:	84 81       	ldd	r24, Z+4	; 0x04
    1318:	88 7f       	andi	r24, 0xF8	; 248
    131a:	84 83       	std	Z+4, r24	; 0x04
    131c:	08 95       	ret
	case '7': seven; break;
    131e:	e0 e2       	ldi	r30, 0x20	; 32
    1320:	f4 e0       	ldi	r31, 0x04	; 4
    1322:	84 81       	ldd	r24, Z+4	; 0x04
    1324:	8d 7c       	andi	r24, 0xCD	; 205
    1326:	84 83       	std	Z+4, r24	; 0x04
    1328:	08 95       	ret
	case '8': eight; break;
    132a:	e0 e2       	ldi	r30, 0x20	; 32
    132c:	f4 e0       	ldi	r31, 0x04	; 4
    132e:	84 81       	ldd	r24, Z+4	; 0x04
    1330:	85 7c       	andi	r24, 0xC5	; 197
    1332:	84 83       	std	Z+4, r24	; 0x04
    1334:	e0 e4       	ldi	r30, 0x40	; 64
    1336:	f4 e0       	ldi	r31, 0x04	; 4
    1338:	84 81       	ldd	r24, Z+4	; 0x04
    133a:	88 7f       	andi	r24, 0xF8	; 248
    133c:	84 83       	std	Z+4, r24	; 0x04
    133e:	08 95       	ret
	case '9': nine; break;
    1340:	e0 e2       	ldi	r30, 0x20	; 32
    1342:	f4 e0       	ldi	r31, 0x04	; 4
    1344:	84 81       	ldd	r24, Z+4	; 0x04
    1346:	8d 7c       	andi	r24, 0xCD	; 205
    1348:	84 83       	std	Z+4, r24	; 0x04
    134a:	e0 e4       	ldi	r30, 0x40	; 64
    134c:	f4 e0       	ldi	r31, 0x04	; 4
    134e:	84 81       	ldd	r24, Z+4	; 0x04
    1350:	8c 7f       	andi	r24, 0xFC	; 252
    1352:	84 83       	std	Z+4, r24	; 0x04
    1354:	08 95       	ret
	case '-': minus; break;
    1356:	e0 e4       	ldi	r30, 0x40	; 64
    1358:	f4 e0       	ldi	r31, 0x04	; 4
    135a:	84 81       	ldd	r24, Z+4	; 0x04
    135c:	8e 7f       	andi	r24, 0xFE	; 254
    135e:	84 83       	std	Z+4, r24	; 0x04
    1360:	08 95       	ret
			
	case 'E': case 'e': exponent; break;
    1362:	e0 e2       	ldi	r30, 0x20	; 32
    1364:	f4 e0       	ldi	r31, 0x04	; 4
    1366:	84 81       	ldd	r24, Z+4	; 0x04
    1368:	87 7d       	andi	r24, 0xD7	; 215
    136a:	84 83       	std	Z+4, r24	; 0x04
    136c:	e0 e4       	ldi	r30, 0x40	; 64
    136e:	f4 e0       	ldi	r31, 0x04	; 4
    1370:	84 81       	ldd	r24, Z+4	; 0x04
    1372:	88 7f       	andi	r24, 0xF8	; 248
    1374:	84 83       	std	Z+4, r24	; 0x04
    1376:	08 95       	ret
	case ('0' | 0x80): zero_point; break;
    1378:	e0 e2       	ldi	r30, 0x20	; 32
    137a:	f4 e0       	ldi	r31, 0x04	; 4
    137c:	84 81       	ldd	r24, Z+4	; 0x04
    137e:	85 7c       	andi	r24, 0xC5	; 197
    1380:	84 83       	std	Z+4, r24	; 0x04
    1382:	a0 e4       	ldi	r26, 0x40	; 64
    1384:	b4 e0       	ldi	r27, 0x04	; 4
    1386:	14 96       	adiw	r26, 0x04	; 4
    1388:	8c 91       	ld	r24, X
    138a:	14 97       	sbiw	r26, 0x04	; 4
    138c:	89 7f       	andi	r24, 0xF9	; 249
    138e:	14 96       	adiw	r26, 0x04	; 4
    1390:	8c 93       	st	X, r24
    1392:	84 81       	ldd	r24, Z+4	; 0x04
    1394:	8b 7f       	andi	r24, 0xFB	; 251
    1396:	84 83       	std	Z+4, r24	; 0x04
    1398:	08 95       	ret
	case ('1' | 0x80): one_point; break;
    139a:	e0 e2       	ldi	r30, 0x20	; 32
    139c:	f4 e0       	ldi	r31, 0x04	; 4
    139e:	84 81       	ldd	r24, Z+4	; 0x04
    13a0:	8d 7e       	andi	r24, 0xED	; 237
    13a2:	84 83       	std	Z+4, r24	; 0x04
    13a4:	84 81       	ldd	r24, Z+4	; 0x04
    13a6:	8b 7f       	andi	r24, 0xFB	; 251
    13a8:	84 83       	std	Z+4, r24	; 0x04
    13aa:	08 95       	ret
	case ('2' | 0x80): two_point; break;
    13ac:	e0 e2       	ldi	r30, 0x20	; 32
    13ae:	f4 e0       	ldi	r31, 0x04	; 4
    13b0:	84 81       	ldd	r24, Z+4	; 0x04
    13b2:	87 7c       	andi	r24, 0xC7	; 199
    13b4:	84 83       	std	Z+4, r24	; 0x04
    13b6:	a0 e4       	ldi	r26, 0x40	; 64
    13b8:	b4 e0       	ldi	r27, 0x04	; 4
    13ba:	14 96       	adiw	r26, 0x04	; 4
    13bc:	8c 91       	ld	r24, X
    13be:	14 97       	sbiw	r26, 0x04	; 4
    13c0:	8a 7f       	andi	r24, 0xFA	; 250
    13c2:	14 96       	adiw	r26, 0x04	; 4
    13c4:	8c 93       	st	X, r24
    13c6:	84 81       	ldd	r24, Z+4	; 0x04
    13c8:	8b 7f       	andi	r24, 0xFB	; 251
    13ca:	84 83       	std	Z+4, r24	; 0x04
    13cc:	08 95       	ret
	case ('3' | 0x80): three_point; break;
    13ce:	e0 e2       	ldi	r30, 0x20	; 32
    13d0:	f4 e0       	ldi	r31, 0x04	; 4
    13d2:	84 81       	ldd	r24, Z+4	; 0x04
    13d4:	85 7c       	andi	r24, 0xC5	; 197
    13d6:	84 83       	std	Z+4, r24	; 0x04
    13d8:	a0 e4       	ldi	r26, 0x40	; 64
    13da:	b4 e0       	ldi	r27, 0x04	; 4
    13dc:	14 96       	adiw	r26, 0x04	; 4
    13de:	8c 91       	ld	r24, X
    13e0:	14 97       	sbiw	r26, 0x04	; 4
    13e2:	8e 7f       	andi	r24, 0xFE	; 254
    13e4:	14 96       	adiw	r26, 0x04	; 4
    13e6:	8c 93       	st	X, r24
    13e8:	84 81       	ldd	r24, Z+4	; 0x04
    13ea:	8b 7f       	andi	r24, 0xFB	; 251
    13ec:	84 83       	std	Z+4, r24	; 0x04
    13ee:	08 95       	ret
	case ('4' | 0x80): four_point; break;
    13f0:	e0 e2       	ldi	r30, 0x20	; 32
    13f2:	f4 e0       	ldi	r31, 0x04	; 4
    13f4:	84 81       	ldd	r24, Z+4	; 0x04
    13f6:	8d 7e       	andi	r24, 0xED	; 237
    13f8:	84 83       	std	Z+4, r24	; 0x04
    13fa:	a0 e4       	ldi	r26, 0x40	; 64
    13fc:	b4 e0       	ldi	r27, 0x04	; 4
    13fe:	14 96       	adiw	r26, 0x04	; 4
    1400:	8c 91       	ld	r24, X
    1402:	14 97       	sbiw	r26, 0x04	; 4
    1404:	8c 7f       	andi	r24, 0xFC	; 252
    1406:	14 96       	adiw	r26, 0x04	; 4
    1408:	8c 93       	st	X, r24
    140a:	84 81       	ldd	r24, Z+4	; 0x04
    140c:	8b 7f       	andi	r24, 0xFB	; 251
    140e:	84 83       	std	Z+4, r24	; 0x04
    1410:	08 95       	ret
	case ('5' | 0x80): five_point; break;
    1412:	e0 e2       	ldi	r30, 0x20	; 32
    1414:	f4 e0       	ldi	r31, 0x04	; 4
    1416:	84 81       	ldd	r24, Z+4	; 0x04
    1418:	85 7d       	andi	r24, 0xD5	; 213
    141a:	84 83       	std	Z+4, r24	; 0x04
    141c:	a0 e4       	ldi	r26, 0x40	; 64
    141e:	b4 e0       	ldi	r27, 0x04	; 4
    1420:	14 96       	adiw	r26, 0x04	; 4
    1422:	8c 91       	ld	r24, X
    1424:	14 97       	sbiw	r26, 0x04	; 4
    1426:	8c 7f       	andi	r24, 0xFC	; 252
    1428:	14 96       	adiw	r26, 0x04	; 4
    142a:	8c 93       	st	X, r24
    142c:	84 81       	ldd	r24, Z+4	; 0x04
    142e:	8b 7f       	andi	r24, 0xFB	; 251
    1430:	84 83       	std	Z+4, r24	; 0x04
    1432:	08 95       	ret
	case ('6' | 0x80): six_point; break;
    1434:	e0 e2       	ldi	r30, 0x20	; 32
    1436:	f4 e0       	ldi	r31, 0x04	; 4
    1438:	84 81       	ldd	r24, Z+4	; 0x04
    143a:	85 7f       	andi	r24, 0xF5	; 245
    143c:	84 83       	std	Z+4, r24	; 0x04
    143e:	a0 e4       	ldi	r26, 0x40	; 64
    1440:	b4 e0       	ldi	r27, 0x04	; 4
    1442:	14 96       	adiw	r26, 0x04	; 4
    1444:	8c 91       	ld	r24, X
    1446:	14 97       	sbiw	r26, 0x04	; 4
    1448:	88 7f       	andi	r24, 0xF8	; 248
    144a:	14 96       	adiw	r26, 0x04	; 4
    144c:	8c 93       	st	X, r24
    144e:	84 81       	ldd	r24, Z+4	; 0x04
    1450:	8b 7f       	andi	r24, 0xFB	; 251
    1452:	84 83       	std	Z+4, r24	; 0x04
    1454:	08 95       	ret
	case ('7' | 0x80): seven_point; break;
    1456:	e0 e2       	ldi	r30, 0x20	; 32
    1458:	f4 e0       	ldi	r31, 0x04	; 4
    145a:	84 81       	ldd	r24, Z+4	; 0x04
    145c:	8d 7c       	andi	r24, 0xCD	; 205
    145e:	84 83       	std	Z+4, r24	; 0x04
    1460:	84 81       	ldd	r24, Z+4	; 0x04
    1462:	8b 7f       	andi	r24, 0xFB	; 251
    1464:	84 83       	std	Z+4, r24	; 0x04
    1466:	08 95       	ret
	case ('8' | 0x80): eight_point; break;
    1468:	e0 e2       	ldi	r30, 0x20	; 32
    146a:	f4 e0       	ldi	r31, 0x04	; 4
    146c:	84 81       	ldd	r24, Z+4	; 0x04
    146e:	85 7c       	andi	r24, 0xC5	; 197
    1470:	84 83       	std	Z+4, r24	; 0x04
    1472:	a0 e4       	ldi	r26, 0x40	; 64
    1474:	b4 e0       	ldi	r27, 0x04	; 4
    1476:	14 96       	adiw	r26, 0x04	; 4
    1478:	8c 91       	ld	r24, X
    147a:	14 97       	sbiw	r26, 0x04	; 4
    147c:	88 7f       	andi	r24, 0xF8	; 248
    147e:	14 96       	adiw	r26, 0x04	; 4
    1480:	8c 93       	st	X, r24
    1482:	84 81       	ldd	r24, Z+4	; 0x04
    1484:	8b 7f       	andi	r24, 0xFB	; 251
    1486:	84 83       	std	Z+4, r24	; 0x04
    1488:	08 95       	ret
	case ('9' | 0x80): nine_point; break;
    148a:	e0 e2       	ldi	r30, 0x20	; 32
    148c:	f4 e0       	ldi	r31, 0x04	; 4
    148e:	84 81       	ldd	r24, Z+4	; 0x04
    1490:	8d 7c       	andi	r24, 0xCD	; 205
    1492:	84 83       	std	Z+4, r24	; 0x04
    1494:	a0 e4       	ldi	r26, 0x40	; 64
    1496:	b4 e0       	ldi	r27, 0x04	; 4
    1498:	14 96       	adiw	r26, 0x04	; 4
    149a:	8c 91       	ld	r24, X
    149c:	14 97       	sbiw	r26, 0x04	; 4
    149e:	8c 7f       	andi	r24, 0xFC	; 252
    14a0:	14 96       	adiw	r26, 0x04	; 4
    14a2:	8c 93       	st	X, r24
    14a4:	84 81       	ldd	r24, Z+4	; 0x04
    14a6:	8b 7f       	andi	r24, 0xFB	; 251
    14a8:	84 83       	std	Z+4, r24	; 0x04
    14aa:	08 95       	ret
	case ('-' | 0x80): minus_point; break;}}
    14ac:	e0 e4       	ldi	r30, 0x40	; 64
    14ae:	f4 e0       	ldi	r31, 0x04	; 4
    14b0:	84 81       	ldd	r24, Z+4	; 0x04
    14b2:	8e 7f       	andi	r24, 0xFE	; 254
    14b4:	84 83       	std	Z+4, r24	; 0x04
    14b6:	e0 e2       	ldi	r30, 0x20	; 32
    14b8:	f4 e0       	ldi	r31, 0x04	; 4
    14ba:	84 81       	ldd	r24, Z+4	; 0x04
    14bc:	8b 7f       	andi	r24, 0xFB	; 251
    14be:	84 83       	std	Z+4, r24	; 0x04
    14c0:	08 95       	ret

000014c2 <Seg_definitions>:
	

/*****************************************************************************************/
void Seg_definitions(){ char m=0;
	switch(display_ptr){
    14c2:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    14c6:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    14ca:	e8 30       	cpi	r30, 0x08	; 8
    14cc:	f1 05       	cpc	r31, r1
    14ce:	e8 f4       	brcc	.+58     	; 0x150a <Seg_definitions+0x48>
    14d0:	ec 5e       	subi	r30, 0xEC	; 236
    14d2:	fe 4f       	sbci	r31, 0xFE	; 254
    14d4:	0c 94 d2 10 	jmp	0x21a4	; 0x21a4 <__tablejump2__>
		case 0: m = 0x01; break;
    14d8:	81 e0       	ldi	r24, 0x01	; 1
    14da:	0d c0       	rjmp	.+26     	; 0x14f6 <Seg_definitions+0x34>
		case 1: m = 0x02; break;
		case 2: m = 0x04; break;
    14dc:	84 e0       	ldi	r24, 0x04	; 4
    14de:	0b c0       	rjmp	.+22     	; 0x14f6 <Seg_definitions+0x34>
		case 3: m = 0x08; break;
    14e0:	88 e0       	ldi	r24, 0x08	; 8
    14e2:	09 c0       	rjmp	.+18     	; 0x14f6 <Seg_definitions+0x34>
		case 4: m = 0x10; break;
    14e4:	80 e1       	ldi	r24, 0x10	; 16
    14e6:	07 c0       	rjmp	.+14     	; 0x14f6 <Seg_definitions+0x34>
		case 5: m = 0x20; break;
    14e8:	80 e2       	ldi	r24, 0x20	; 32
    14ea:	05 c0       	rjmp	.+10     	; 0x14f6 <Seg_definitions+0x34>
		case 6: m = 0x40; break;
    14ec:	80 e4       	ldi	r24, 0x40	; 64
    14ee:	03 c0       	rjmp	.+6      	; 0x14f6 <Seg_definitions+0x34>
		case 7: m = 0x80; break;}
    14f0:	80 e8       	ldi	r24, 0x80	; 128
    14f2:	01 c0       	rjmp	.+2      	; 0x14f6 <Seg_definitions+0x34>

/*****************************************************************************************/
void Seg_definitions(){ char m=0;
	switch(display_ptr){
		case 0: m = 0x01; break;
		case 1: m = 0x02; break;
    14f4:	82 e0       	ldi	r24, 0x02	; 2
		case 3: m = 0x08; break;
		case 4: m = 0x10; break;
		case 5: m = 0x20; break;
		case 6: m = 0x40; break;
		case 7: m = 0x80; break;}
	if (display_buffer[0] & m) PORTB.OUT &= (~(seg_a));
    14f6:	90 91 1a 3c 	lds	r25, 0x3C1A	; 0x803c1a <display_buffer>
    14fa:	98 23       	and	r25, r24
    14fc:	39 f0       	breq	.+14     	; 0x150c <Seg_definitions+0x4a>
    14fe:	e0 e2       	ldi	r30, 0x20	; 32
    1500:	f4 e0       	ldi	r31, 0x04	; 4
    1502:	94 81       	ldd	r25, Z+4	; 0x04
    1504:	9f 7d       	andi	r25, 0xDF	; 223
    1506:	94 83       	std	Z+4, r25	; 0x04
    1508:	01 c0       	rjmp	.+2      	; 0x150c <Seg_definitions+0x4a>
	case ('9' | 0x80): nine_point; break;
	case ('-' | 0x80): minus_point; break;}}
	

/*****************************************************************************************/
void Seg_definitions(){ char m=0;
    150a:	80 e0       	ldi	r24, 0x00	; 0
		case 4: m = 0x10; break;
		case 5: m = 0x20; break;
		case 6: m = 0x40; break;
		case 7: m = 0x80; break;}
	if (display_buffer[0] & m) PORTB.OUT &= (~(seg_a));
	if (display_buffer[1] & m) PORTC.OUT &= (~(seg_g));
    150c:	90 91 1b 3c 	lds	r25, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    1510:	98 23       	and	r25, r24
    1512:	29 f0       	breq	.+10     	; 0x151e <Seg_definitions+0x5c>
    1514:	e0 e4       	ldi	r30, 0x40	; 64
    1516:	f4 e0       	ldi	r31, 0x04	; 4
    1518:	94 81       	ldd	r25, Z+4	; 0x04
    151a:	9e 7f       	andi	r25, 0xFE	; 254
    151c:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[2] & m) PORTB.OUT &= (~(seg_d));
    151e:	90 91 1c 3c 	lds	r25, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    1522:	98 23       	and	r25, r24
    1524:	29 f0       	breq	.+10     	; 0x1530 <Seg_definitions+0x6e>
    1526:	e0 e2       	ldi	r30, 0x20	; 32
    1528:	f4 e0       	ldi	r31, 0x04	; 4
    152a:	94 81       	ldd	r25, Z+4	; 0x04
    152c:	97 7f       	andi	r25, 0xF7	; 247
    152e:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[3] & m) PORTB.OUT &= (~(seg_b));
    1530:	90 91 1d 3c 	lds	r25, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    1534:	98 23       	and	r25, r24
    1536:	29 f0       	breq	.+10     	; 0x1542 <Seg_definitions+0x80>
    1538:	e0 e2       	ldi	r30, 0x20	; 32
    153a:	f4 e0       	ldi	r31, 0x04	; 4
    153c:	94 81       	ldd	r25, Z+4	; 0x04
    153e:	9f 7e       	andi	r25, 0xEF	; 239
    1540:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[4] & m) PORTB.OUT &= (~(seg_c));
    1542:	90 91 1e 3c 	lds	r25, 0x3C1E	; 0x803c1e <display_buffer+0x4>
    1546:	98 23       	and	r25, r24
    1548:	29 f0       	breq	.+10     	; 0x1554 <Seg_definitions+0x92>
    154a:	e0 e2       	ldi	r30, 0x20	; 32
    154c:	f4 e0       	ldi	r31, 0x04	; 4
    154e:	94 81       	ldd	r25, Z+4	; 0x04
    1550:	9d 7f       	andi	r25, 0xFD	; 253
    1552:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[5] & m) PORTC.OUT &= (~(seg_e));
    1554:	90 91 1f 3c 	lds	r25, 0x3C1F	; 0x803c1f <display_buffer+0x5>
    1558:	98 23       	and	r25, r24
    155a:	29 f0       	breq	.+10     	; 0x1566 <Seg_definitions+0xa4>
    155c:	e0 e4       	ldi	r30, 0x40	; 64
    155e:	f4 e0       	ldi	r31, 0x04	; 4
    1560:	94 81       	ldd	r25, Z+4	; 0x04
    1562:	9b 7f       	andi	r25, 0xFB	; 251
    1564:	94 83       	std	Z+4, r25	; 0x04
	if (display_buffer[6] & m) PORTC.OUT &= (~(seg_f));}
    1566:	90 91 20 3c 	lds	r25, 0x3C20	; 0x803c20 <display_buffer+0x6>
    156a:	89 23       	and	r24, r25
    156c:	29 f0       	breq	.+10     	; 0x1578 <Seg_definitions+0xb6>
    156e:	e0 e4       	ldi	r30, 0x40	; 64
    1570:	f4 e0       	ldi	r31, 0x04	; 4
    1572:	84 81       	ldd	r24, Z+4	; 0x04
    1574:	8d 7f       	andi	r24, 0xFD	; 253
    1576:	84 83       	std	Z+4, r24	; 0x04
    1578:	08 95       	ret

0000157a <Start_TCB0>:



	/*****************************************************************************************************************************/
	void Start_TCB0(int BC){						//Controls the display intensity
	TCB0_CNT = 0;									//Initialise counter
    157a:	10 92 4a 0a 	sts	0x0A4A, r1	; 0x800a4a <__TEXT_REGION_LENGTH__+0x700a4a>
    157e:	10 92 4b 0a 	sts	0x0A4B, r1	; 0x800a4b <__TEXT_REGION_LENGTH__+0x700a4b>
	TCB0_CCMP = BC;									//1.75mS for full brightness 0.25ms for low brightness
    1582:	80 93 4c 0a 	sts	0x0A4C, r24	; 0x800a4c <__TEXT_REGION_LENGTH__+0x700a4c>
    1586:	90 93 4d 0a 	sts	0x0A4D, r25	; 0x800a4d <__TEXT_REGION_LENGTH__+0x700a4d>
	TCB0_CTRLA = 1;									//Start the clock
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	80 93 40 0a 	sts	0x0A40, r24	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
	TCB0_INTCTRL = 1;}								//Interrupt flag on compare match
    1590:	80 93 45 0a 	sts	0x0A45, r24	; 0x800a45 <__TEXT_REGION_LENGTH__+0x700a45>
    1594:	08 95       	ret

00001596 <Display_driver>:
		
		
	/*****************************************************************************************************************************/
	void Display_driver(void){
		
		switch(display_ptr){
    1596:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    159a:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    159e:	e8 30       	cpi	r30, 0x08	; 8
    15a0:	f1 05       	cpc	r31, r1
    15a2:	98 f5       	brcc	.+102    	; 0x160a <Display_driver+0x74>
    15a4:	e4 5e       	subi	r30, 0xE4	; 228
    15a6:	fe 4f       	sbci	r31, 0xFE	; 254
    15a8:	0c 94 d2 10 	jmp	0x21a4	; 0x21a4 <__tablejump2__>
			case 0: digit_0; break;
    15ac:	e0 e0       	ldi	r30, 0x00	; 0
    15ae:	f4 e0       	ldi	r31, 0x04	; 4
    15b0:	84 81       	ldd	r24, Z+4	; 0x04
    15b2:	80 68       	ori	r24, 0x80	; 128
    15b4:	84 83       	std	Z+4, r24	; 0x04
    15b6:	29 c0       	rjmp	.+82     	; 0x160a <Display_driver+0x74>
			case 1: digit_1; break;
    15b8:	e0 e0       	ldi	r30, 0x00	; 0
    15ba:	f4 e0       	ldi	r31, 0x04	; 4
    15bc:	84 81       	ldd	r24, Z+4	; 0x04
    15be:	80 64       	ori	r24, 0x40	; 64
    15c0:	84 83       	std	Z+4, r24	; 0x04
    15c2:	23 c0       	rjmp	.+70     	; 0x160a <Display_driver+0x74>
			case 2: digit_2; break;
    15c4:	e0 e0       	ldi	r30, 0x00	; 0
    15c6:	f4 e0       	ldi	r31, 0x04	; 4
    15c8:	84 81       	ldd	r24, Z+4	; 0x04
    15ca:	80 62       	ori	r24, 0x20	; 32
    15cc:	84 83       	std	Z+4, r24	; 0x04
    15ce:	1d c0       	rjmp	.+58     	; 0x160a <Display_driver+0x74>
			case 3: digit_3; break;
    15d0:	e0 e0       	ldi	r30, 0x00	; 0
    15d2:	f4 e0       	ldi	r31, 0x04	; 4
    15d4:	84 81       	ldd	r24, Z+4	; 0x04
    15d6:	80 61       	ori	r24, 0x10	; 16
    15d8:	84 83       	std	Z+4, r24	; 0x04
    15da:	17 c0       	rjmp	.+46     	; 0x160a <Display_driver+0x74>
			case 4: digit_4; break;
    15dc:	e0 e2       	ldi	r30, 0x20	; 32
    15de:	f4 e0       	ldi	r31, 0x04	; 4
    15e0:	84 81       	ldd	r24, Z+4	; 0x04
    15e2:	81 60       	ori	r24, 0x01	; 1
    15e4:	84 83       	std	Z+4, r24	; 0x04
    15e6:	11 c0       	rjmp	.+34     	; 0x160a <Display_driver+0x74>
			case 5: digit_5; break;
    15e8:	e0 e0       	ldi	r30, 0x00	; 0
    15ea:	f4 e0       	ldi	r31, 0x04	; 4
    15ec:	84 81       	ldd	r24, Z+4	; 0x04
    15ee:	88 60       	ori	r24, 0x08	; 8
    15f0:	84 83       	std	Z+4, r24	; 0x04
    15f2:	0b c0       	rjmp	.+22     	; 0x160a <Display_driver+0x74>
			case 6: digit_6; break;
    15f4:	e0 e0       	ldi	r30, 0x00	; 0
    15f6:	f4 e0       	ldi	r31, 0x04	; 4
    15f8:	84 81       	ldd	r24, Z+4	; 0x04
    15fa:	84 60       	ori	r24, 0x04	; 4
    15fc:	84 83       	std	Z+4, r24	; 0x04
    15fe:	05 c0       	rjmp	.+10     	; 0x160a <Display_driver+0x74>
			case 7: digit_7; break;}
    1600:	e0 e0       	ldi	r30, 0x00	; 0
    1602:	f4 e0       	ldi	r31, 0x04	; 4
    1604:	84 81       	ldd	r24, Z+4	; 0x04
    1606:	82 60       	ori	r24, 0x02	; 2
    1608:	84 83       	std	Z+4, r24	; 0x04
		
		
		switch(mode){
    160a:	80 91 36 3c 	lds	r24, 0x3C36	; 0x803c36 <mode>
    160e:	81 36       	cpi	r24, 0x61	; 97
    1610:	61 f0       	breq	.+24     	; 0x162a <Display_driver+0x94>
    1612:	20 f4       	brcc	.+8      	; 0x161c <Display_driver+0x86>
    1614:	81 54       	subi	r24, 0x41	; 65
    1616:	85 30       	cpi	r24, 0x05	; 5
    1618:	28 f0       	brcs	.+10     	; 0x1624 <Display_driver+0x8e>
    161a:	1e c1       	rjmp	.+572    	; 0x1858 <Display_driver+0x2c2>
    161c:	82 36       	cpi	r24, 0x62	; 98
    161e:	09 f4       	brne	.+2      	; 0x1622 <Display_driver+0x8c>
    1620:	19 c1       	rjmp	.+562    	; 0x1854 <Display_driver+0x2be>
    1622:	1a c1       	rjmp	.+564    	; 0x1858 <Display_driver+0x2c2>
		case 'A': case'B': case 'C': case 'D': case 'E':
		Char_definition(); break;
    1624:	0e 94 34 09 	call	0x1268	; 0x1268 <Char_definition>
    1628:	17 c1       	rjmp	.+558    	; 0x1858 <Display_driver+0x2c2>
		
		case 'a':
		
		switch (display_ptr){
    162a:	e0 91 29 3c 	lds	r30, 0x3C29	; 0x803c29 <display_ptr>
    162e:	f0 91 2a 3c 	lds	r31, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    1632:	e8 30       	cpi	r30, 0x08	; 8
    1634:	f1 05       	cpc	r31, r1
    1636:	08 f0       	brcs	.+2      	; 0x163a <Display_driver+0xa4>
    1638:	0f c1       	rjmp	.+542    	; 0x1858 <Display_driver+0x2c2>
    163a:	ec 5d       	subi	r30, 0xDC	; 220
    163c:	fe 4f       	sbci	r31, 0xFE	; 254
    163e:	0c 94 d2 10 	jmp	0x21a4	; 0x21a4 <__tablejump2__>
			
			case 0: if(display_buffer[0] & 0x01) one_U; if(display_buffer[0] & 0x02) ONE_U;
    1642:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    1646:	80 ff       	sbrs	r24, 0
    1648:	05 c0       	rjmp	.+10     	; 0x1654 <Display_driver+0xbe>
    164a:	e0 e2       	ldi	r30, 0x20	; 32
    164c:	f4 e0       	ldi	r31, 0x04	; 4
    164e:	94 81       	ldd	r25, Z+4	; 0x04
    1650:	9f 7e       	andi	r25, 0xEF	; 239
    1652:	94 83       	std	Z+4, r25	; 0x04
    1654:	81 ff       	sbrs	r24, 1
    1656:	05 c0       	rjmp	.+10     	; 0x1662 <Display_driver+0xcc>
    1658:	e0 e4       	ldi	r30, 0x40	; 64
    165a:	f4 e0       	ldi	r31, 0x04	; 4
    165c:	84 81       	ldd	r24, Z+4	; 0x04
    165e:	8d 7f       	andi	r24, 0xFD	; 253
    1660:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x01) one_L; if(display_buffer[1] & 0x02) ONE_L;
    1662:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    1666:	80 ff       	sbrs	r24, 0
    1668:	05 c0       	rjmp	.+10     	; 0x1674 <Display_driver+0xde>
    166a:	e0 e2       	ldi	r30, 0x20	; 32
    166c:	f4 e0       	ldi	r31, 0x04	; 4
    166e:	94 81       	ldd	r25, Z+4	; 0x04
    1670:	9d 7f       	andi	r25, 0xFD	; 253
    1672:	94 83       	std	Z+4, r25	; 0x04
    1674:	81 ff       	sbrs	r24, 1
    1676:	f0 c0       	rjmp	.+480    	; 0x1858 <Display_driver+0x2c2>
    1678:	e0 e4       	ldi	r30, 0x40	; 64
    167a:	f4 e0       	ldi	r31, 0x04	; 4
    167c:	84 81       	ldd	r24, Z+4	; 0x04
    167e:	8b 7f       	andi	r24, 0xFB	; 251
    1680:	84 83       	std	Z+4, r24	; 0x04
    1682:	ea c0       	rjmp	.+468    	; 0x1858 <Display_driver+0x2c2>
					 break;
			
			case 1: if(display_buffer[0] & 0x04) one_U;  if(display_buffer[0] & 0x08) ONE_U;
    1684:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    1688:	82 ff       	sbrs	r24, 2
    168a:	05 c0       	rjmp	.+10     	; 0x1696 <Display_driver+0x100>
    168c:	e0 e2       	ldi	r30, 0x20	; 32
    168e:	f4 e0       	ldi	r31, 0x04	; 4
    1690:	94 81       	ldd	r25, Z+4	; 0x04
    1692:	9f 7e       	andi	r25, 0xEF	; 239
    1694:	94 83       	std	Z+4, r25	; 0x04
    1696:	83 ff       	sbrs	r24, 3
    1698:	05 c0       	rjmp	.+10     	; 0x16a4 <Display_driver+0x10e>
    169a:	e0 e4       	ldi	r30, 0x40	; 64
    169c:	f4 e0       	ldi	r31, 0x04	; 4
    169e:	84 81       	ldd	r24, Z+4	; 0x04
    16a0:	8d 7f       	andi	r24, 0xFD	; 253
    16a2:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x04) one_L;  if(display_buffer[1] & 0x08) ONE_L; 
    16a4:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    16a8:	82 ff       	sbrs	r24, 2
    16aa:	05 c0       	rjmp	.+10     	; 0x16b6 <Display_driver+0x120>
    16ac:	e0 e2       	ldi	r30, 0x20	; 32
    16ae:	f4 e0       	ldi	r31, 0x04	; 4
    16b0:	94 81       	ldd	r25, Z+4	; 0x04
    16b2:	9d 7f       	andi	r25, 0xFD	; 253
    16b4:	94 83       	std	Z+4, r25	; 0x04
    16b6:	83 ff       	sbrs	r24, 3
    16b8:	cf c0       	rjmp	.+414    	; 0x1858 <Display_driver+0x2c2>
    16ba:	e0 e4       	ldi	r30, 0x40	; 64
    16bc:	f4 e0       	ldi	r31, 0x04	; 4
    16be:	84 81       	ldd	r24, Z+4	; 0x04
    16c0:	8b 7f       	andi	r24, 0xFB	; 251
    16c2:	84 83       	std	Z+4, r24	; 0x04
    16c4:	c9 c0       	rjmp	.+402    	; 0x1858 <Display_driver+0x2c2>
					break;
					
			case 2: if(display_buffer[0] & 0x10) one_U; if(display_buffer[0] & 0x20) ONE_U;
    16c6:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    16ca:	84 ff       	sbrs	r24, 4
    16cc:	05 c0       	rjmp	.+10     	; 0x16d8 <Display_driver+0x142>
    16ce:	e0 e2       	ldi	r30, 0x20	; 32
    16d0:	f4 e0       	ldi	r31, 0x04	; 4
    16d2:	94 81       	ldd	r25, Z+4	; 0x04
    16d4:	9f 7e       	andi	r25, 0xEF	; 239
    16d6:	94 83       	std	Z+4, r25	; 0x04
    16d8:	85 ff       	sbrs	r24, 5
    16da:	05 c0       	rjmp	.+10     	; 0x16e6 <Display_driver+0x150>
    16dc:	e0 e4       	ldi	r30, 0x40	; 64
    16de:	f4 e0       	ldi	r31, 0x04	; 4
    16e0:	84 81       	ldd	r24, Z+4	; 0x04
    16e2:	8d 7f       	andi	r24, 0xFD	; 253
    16e4:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x10) one_L; if(display_buffer[1] & 0x20) ONE_L;
    16e6:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    16ea:	84 ff       	sbrs	r24, 4
    16ec:	05 c0       	rjmp	.+10     	; 0x16f8 <Display_driver+0x162>
    16ee:	e0 e2       	ldi	r30, 0x20	; 32
    16f0:	f4 e0       	ldi	r31, 0x04	; 4
    16f2:	94 81       	ldd	r25, Z+4	; 0x04
    16f4:	9d 7f       	andi	r25, 0xFD	; 253
    16f6:	94 83       	std	Z+4, r25	; 0x04
    16f8:	85 ff       	sbrs	r24, 5
    16fa:	ae c0       	rjmp	.+348    	; 0x1858 <Display_driver+0x2c2>
    16fc:	e0 e4       	ldi	r30, 0x40	; 64
    16fe:	f4 e0       	ldi	r31, 0x04	; 4
    1700:	84 81       	ldd	r24, Z+4	; 0x04
    1702:	8b 7f       	andi	r24, 0xFB	; 251
    1704:	84 83       	std	Z+4, r24	; 0x04
    1706:	a8 c0       	rjmp	.+336    	; 0x1858 <Display_driver+0x2c2>
					break;
					
			case 3: if(display_buffer[0] & 0x40) one_U;  if(display_buffer[0] & 0x80) ONE_U;
    1708:	80 91 1a 3c 	lds	r24, 0x3C1A	; 0x803c1a <display_buffer>
    170c:	86 ff       	sbrs	r24, 6
    170e:	05 c0       	rjmp	.+10     	; 0x171a <Display_driver+0x184>
    1710:	e0 e2       	ldi	r30, 0x20	; 32
    1712:	f4 e0       	ldi	r31, 0x04	; 4
    1714:	94 81       	ldd	r25, Z+4	; 0x04
    1716:	9f 7e       	andi	r25, 0xEF	; 239
    1718:	94 83       	std	Z+4, r25	; 0x04
    171a:	88 23       	and	r24, r24
    171c:	2c f4       	brge	.+10     	; 0x1728 <Display_driver+0x192>
    171e:	e0 e4       	ldi	r30, 0x40	; 64
    1720:	f4 e0       	ldi	r31, 0x04	; 4
    1722:	84 81       	ldd	r24, Z+4	; 0x04
    1724:	8d 7f       	andi	r24, 0xFD	; 253
    1726:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[1] & 0x40) one_L;  if(display_buffer[1] & 0x80) ONE_L;
    1728:	80 91 1b 3c 	lds	r24, 0x3C1B	; 0x803c1b <display_buffer+0x1>
    172c:	86 ff       	sbrs	r24, 6
    172e:	05 c0       	rjmp	.+10     	; 0x173a <Display_driver+0x1a4>
    1730:	e0 e2       	ldi	r30, 0x20	; 32
    1732:	f4 e0       	ldi	r31, 0x04	; 4
    1734:	94 81       	ldd	r25, Z+4	; 0x04
    1736:	9d 7f       	andi	r25, 0xFD	; 253
    1738:	94 83       	std	Z+4, r25	; 0x04
    173a:	88 23       	and	r24, r24
    173c:	0c f0       	brlt	.+2      	; 0x1740 <Display_driver+0x1aa>
    173e:	8c c0       	rjmp	.+280    	; 0x1858 <Display_driver+0x2c2>
    1740:	e0 e4       	ldi	r30, 0x40	; 64
    1742:	f4 e0       	ldi	r31, 0x04	; 4
    1744:	84 81       	ldd	r24, Z+4	; 0x04
    1746:	8b 7f       	andi	r24, 0xFB	; 251
    1748:	84 83       	std	Z+4, r24	; 0x04
    174a:	86 c0       	rjmp	.+268    	; 0x1858 <Display_driver+0x2c2>
					break;
					
					
			case 4: if(display_buffer[2] & 0x01) one_U; if(display_buffer[2] & 0x02) ONE_U;
    174c:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    1750:	80 ff       	sbrs	r24, 0
    1752:	05 c0       	rjmp	.+10     	; 0x175e <Display_driver+0x1c8>
    1754:	e0 e2       	ldi	r30, 0x20	; 32
    1756:	f4 e0       	ldi	r31, 0x04	; 4
    1758:	94 81       	ldd	r25, Z+4	; 0x04
    175a:	9f 7e       	andi	r25, 0xEF	; 239
    175c:	94 83       	std	Z+4, r25	; 0x04
    175e:	81 ff       	sbrs	r24, 1
    1760:	05 c0       	rjmp	.+10     	; 0x176c <Display_driver+0x1d6>
    1762:	e0 e4       	ldi	r30, 0x40	; 64
    1764:	f4 e0       	ldi	r31, 0x04	; 4
    1766:	84 81       	ldd	r24, Z+4	; 0x04
    1768:	8d 7f       	andi	r24, 0xFD	; 253
    176a:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x01) one_L; if(display_buffer[3] & 0x02) ONE_L;
    176c:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    1770:	80 ff       	sbrs	r24, 0
    1772:	05 c0       	rjmp	.+10     	; 0x177e <Display_driver+0x1e8>
    1774:	e0 e2       	ldi	r30, 0x20	; 32
    1776:	f4 e0       	ldi	r31, 0x04	; 4
    1778:	94 81       	ldd	r25, Z+4	; 0x04
    177a:	9d 7f       	andi	r25, 0xFD	; 253
    177c:	94 83       	std	Z+4, r25	; 0x04
    177e:	81 ff       	sbrs	r24, 1
    1780:	6b c0       	rjmp	.+214    	; 0x1858 <Display_driver+0x2c2>
    1782:	e0 e4       	ldi	r30, 0x40	; 64
    1784:	f4 e0       	ldi	r31, 0x04	; 4
    1786:	84 81       	ldd	r24, Z+4	; 0x04
    1788:	8b 7f       	andi	r24, 0xFB	; 251
    178a:	84 83       	std	Z+4, r24	; 0x04
    178c:	65 c0       	rjmp	.+202    	; 0x1858 <Display_driver+0x2c2>
					break;
			
			case 5: if(display_buffer[2] & 0x04) one_U;  if(display_buffer[2] & 0x08) ONE_U;
    178e:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    1792:	82 ff       	sbrs	r24, 2
    1794:	05 c0       	rjmp	.+10     	; 0x17a0 <Display_driver+0x20a>
    1796:	e0 e2       	ldi	r30, 0x20	; 32
    1798:	f4 e0       	ldi	r31, 0x04	; 4
    179a:	94 81       	ldd	r25, Z+4	; 0x04
    179c:	9f 7e       	andi	r25, 0xEF	; 239
    179e:	94 83       	std	Z+4, r25	; 0x04
    17a0:	83 ff       	sbrs	r24, 3
    17a2:	05 c0       	rjmp	.+10     	; 0x17ae <Display_driver+0x218>
    17a4:	e0 e4       	ldi	r30, 0x40	; 64
    17a6:	f4 e0       	ldi	r31, 0x04	; 4
    17a8:	84 81       	ldd	r24, Z+4	; 0x04
    17aa:	8d 7f       	andi	r24, 0xFD	; 253
    17ac:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x04) one_L;  if(display_buffer[3] & 0x08) ONE_L;
    17ae:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    17b2:	82 ff       	sbrs	r24, 2
    17b4:	05 c0       	rjmp	.+10     	; 0x17c0 <Display_driver+0x22a>
    17b6:	e0 e2       	ldi	r30, 0x20	; 32
    17b8:	f4 e0       	ldi	r31, 0x04	; 4
    17ba:	94 81       	ldd	r25, Z+4	; 0x04
    17bc:	9d 7f       	andi	r25, 0xFD	; 253
    17be:	94 83       	std	Z+4, r25	; 0x04
    17c0:	83 ff       	sbrs	r24, 3
    17c2:	4a c0       	rjmp	.+148    	; 0x1858 <Display_driver+0x2c2>
    17c4:	e0 e4       	ldi	r30, 0x40	; 64
    17c6:	f4 e0       	ldi	r31, 0x04	; 4
    17c8:	84 81       	ldd	r24, Z+4	; 0x04
    17ca:	8b 7f       	andi	r24, 0xFB	; 251
    17cc:	84 83       	std	Z+4, r24	; 0x04
    17ce:	44 c0       	rjmp	.+136    	; 0x1858 <Display_driver+0x2c2>
					break;
			
			case 6: if(display_buffer[2] & 0x10) one_U; if(display_buffer[2] & 0x20) ONE_U;
    17d0:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    17d4:	84 ff       	sbrs	r24, 4
    17d6:	05 c0       	rjmp	.+10     	; 0x17e2 <Display_driver+0x24c>
    17d8:	e0 e2       	ldi	r30, 0x20	; 32
    17da:	f4 e0       	ldi	r31, 0x04	; 4
    17dc:	94 81       	ldd	r25, Z+4	; 0x04
    17de:	9f 7e       	andi	r25, 0xEF	; 239
    17e0:	94 83       	std	Z+4, r25	; 0x04
    17e2:	85 ff       	sbrs	r24, 5
    17e4:	05 c0       	rjmp	.+10     	; 0x17f0 <Display_driver+0x25a>
    17e6:	e0 e4       	ldi	r30, 0x40	; 64
    17e8:	f4 e0       	ldi	r31, 0x04	; 4
    17ea:	84 81       	ldd	r24, Z+4	; 0x04
    17ec:	8d 7f       	andi	r24, 0xFD	; 253
    17ee:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x10) one_L; if(display_buffer[3] & 0x20) ONE_L;
    17f0:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    17f4:	84 ff       	sbrs	r24, 4
    17f6:	05 c0       	rjmp	.+10     	; 0x1802 <Display_driver+0x26c>
    17f8:	e0 e2       	ldi	r30, 0x20	; 32
    17fa:	f4 e0       	ldi	r31, 0x04	; 4
    17fc:	94 81       	ldd	r25, Z+4	; 0x04
    17fe:	9d 7f       	andi	r25, 0xFD	; 253
    1800:	94 83       	std	Z+4, r25	; 0x04
    1802:	85 ff       	sbrs	r24, 5
    1804:	29 c0       	rjmp	.+82     	; 0x1858 <Display_driver+0x2c2>
    1806:	e0 e4       	ldi	r30, 0x40	; 64
    1808:	f4 e0       	ldi	r31, 0x04	; 4
    180a:	84 81       	ldd	r24, Z+4	; 0x04
    180c:	8b 7f       	andi	r24, 0xFB	; 251
    180e:	84 83       	std	Z+4, r24	; 0x04
    1810:	23 c0       	rjmp	.+70     	; 0x1858 <Display_driver+0x2c2>
					break;
			
			case 7: if(display_buffer[2] & 0x40) one_U;  if(display_buffer[2] & 0x80) ONE_U;
    1812:	80 91 1c 3c 	lds	r24, 0x3C1C	; 0x803c1c <display_buffer+0x2>
    1816:	86 ff       	sbrs	r24, 6
    1818:	05 c0       	rjmp	.+10     	; 0x1824 <Display_driver+0x28e>
    181a:	e0 e2       	ldi	r30, 0x20	; 32
    181c:	f4 e0       	ldi	r31, 0x04	; 4
    181e:	94 81       	ldd	r25, Z+4	; 0x04
    1820:	9f 7e       	andi	r25, 0xEF	; 239
    1822:	94 83       	std	Z+4, r25	; 0x04
    1824:	88 23       	and	r24, r24
    1826:	2c f4       	brge	.+10     	; 0x1832 <Display_driver+0x29c>
    1828:	e0 e4       	ldi	r30, 0x40	; 64
    182a:	f4 e0       	ldi	r31, 0x04	; 4
    182c:	84 81       	ldd	r24, Z+4	; 0x04
    182e:	8d 7f       	andi	r24, 0xFD	; 253
    1830:	84 83       	std	Z+4, r24	; 0x04
					if(display_buffer[3] & 0x40) one_L;  if(display_buffer[3] & 0x80) ONE_L;
    1832:	80 91 1d 3c 	lds	r24, 0x3C1D	; 0x803c1d <display_buffer+0x3>
    1836:	86 ff       	sbrs	r24, 6
    1838:	05 c0       	rjmp	.+10     	; 0x1844 <Display_driver+0x2ae>
    183a:	e0 e2       	ldi	r30, 0x20	; 32
    183c:	f4 e0       	ldi	r31, 0x04	; 4
    183e:	94 81       	ldd	r25, Z+4	; 0x04
    1840:	9d 7f       	andi	r25, 0xFD	; 253
    1842:	94 83       	std	Z+4, r25	; 0x04
    1844:	88 23       	and	r24, r24
    1846:	44 f4       	brge	.+16     	; 0x1858 <Display_driver+0x2c2>
    1848:	e0 e4       	ldi	r30, 0x40	; 64
    184a:	f4 e0       	ldi	r31, 0x04	; 4
    184c:	84 81       	ldd	r24, Z+4	; 0x04
    184e:	8b 7f       	andi	r24, 0xFB	; 251
    1850:	84 83       	std	Z+4, r24	; 0x04
    1852:	02 c0       	rjmp	.+4      	; 0x1858 <Display_driver+0x2c2>
					break;
					}break;
		
		case 'b': Seg_definitions(); break;									//I2C_Tx_any_segment(
    1854:	0e 94 61 0a 	call	0x14c2	; 0x14c2 <Seg_definitions>
		}
		Start_TCB0(brightness_control);}									//TCB0 controls the brightness
    1858:	80 91 17 3c 	lds	r24, 0x3C17	; 0x803c17 <brightness_control>
    185c:	90 91 18 3c 	lds	r25, 0x3C18	; 0x803c18 <brightness_control+0x1>
    1860:	0e 94 bd 0a 	call	0x157a	; 0x157a <Start_TCB0>
    1864:	08 95       	ret

00001866 <__vector_10>:




/*****************************************************************************************************************************/
	ISR (TCA0_CMP0_vect){										//ISR which responds to clock ticks
    1866:	1f 92       	push	r1
    1868:	0f 92       	push	r0
    186a:	0f b6       	in	r0, 0x3f	; 63
    186c:	0f 92       	push	r0
    186e:	11 24       	eor	r1, r1
    1870:	2f 93       	push	r18
    1872:	3f 93       	push	r19
    1874:	4f 93       	push	r20
    1876:	5f 93       	push	r21
    1878:	6f 93       	push	r22
    187a:	7f 93       	push	r23
    187c:	8f 93       	push	r24
    187e:	9f 93       	push	r25
    1880:	af 93       	push	r26
    1882:	bf 93       	push	r27
    1884:	ef 93       	push	r30
    1886:	ff 93       	push	r31
	TCA0_SINGLE_INTFLAGS |= TCA_SINGLE_CMP0EN_bm;				//Clear the interrupt flag
    1888:	eb e0       	ldi	r30, 0x0B	; 11
    188a:	fa e0       	ldi	r31, 0x0A	; 10
    188c:	80 81       	ld	r24, Z
    188e:	80 61       	ori	r24, 0x10	; 16
    1890:	80 83       	st	Z, r24
	if(display_ptr <= 7)										//Drive the 8 display digits
    1892:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    1896:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    189a:	08 97       	sbiw	r24, 0x08	; 8
    189c:	1c f5       	brge	.+70     	; 0x18e4 <__vector_10+0x7e>
	{Display_driver();
    189e:	0e 94 cb 0a 	call	0x1596	; 0x1596 <Display_driver>
	if(display_ptr < 7){inc_display_clock;}						//Setup 2mS clock tick for first 7 digits
    18a2:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    18a6:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    18aa:	07 97       	sbiw	r24, 0x07	; 7
    18ac:	4c f4       	brge	.+18     	; 0x18c0 <__vector_10+0x5a>
    18ae:	e8 e2       	ldi	r30, 0x28	; 40
    18b0:	fa e0       	ldi	r31, 0x0A	; 10
    18b2:	80 81       	ld	r24, Z
    18b4:	91 81       	ldd	r25, Z+1	; 0x01
    18b6:	80 53       	subi	r24, 0x30	; 48
    18b8:	98 4f       	sbci	r25, 0xF8	; 248
    18ba:	80 83       	st	Z, r24
    18bc:	91 83       	std	Z+1, r25	; 0x01
    18be:	08 c0       	rjmp	.+16     	; 0x18d0 <__vector_10+0x6a>
	else TCA0_SINGLE_CMP0 += 1800;								//setup 0.9mS clock tick for last digit
    18c0:	e8 e2       	ldi	r30, 0x28	; 40
    18c2:	fa e0       	ldi	r31, 0x0A	; 10
    18c4:	80 81       	ld	r24, Z
    18c6:	91 81       	ldd	r25, Z+1	; 0x01
    18c8:	88 5f       	subi	r24, 0xF8	; 248
    18ca:	98 4f       	sbci	r25, 0xF8	; 248
    18cc:	80 83       	st	Z, r24
    18ce:	91 83       	std	Z+1, r25	; 0x01
	display_ptr += 1;
    18d0:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    18d4:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    18d8:	01 96       	adiw	r24, 0x01	; 1
    18da:	80 93 29 3c 	sts	0x3C29, r24	; 0x803c29 <display_ptr>
    18de:	90 93 2a 3c 	sts	0x3C2A, r25	; 0x803c2a <display_ptr+0x1>
	return;}
    18e2:	32 c0       	rjmp	.+100    	; 0x1948 <__vector_10+0xe2>
			
	display_ptr += 1;
    18e4:	80 91 29 3c 	lds	r24, 0x3C29	; 0x803c29 <display_ptr>
    18e8:	90 91 2a 3c 	lds	r25, 0x3C2A	; 0x803c2a <display_ptr+0x1>
    18ec:	01 96       	adiw	r24, 0x01	; 1
    18ee:	80 93 29 3c 	sts	0x3C29, r24	; 0x803c29 <display_ptr>
    18f2:	90 93 2a 3c 	sts	0x3C2A, r25	; 0x803c2a <display_ptr+0x1>
			
	cmp0_bkp = TCA0_SINGLE_CMP0 + 2200;							//Save 1.1mS clock tick for first digit
    18f6:	80 91 28 0a 	lds	r24, 0x0A28	; 0x800a28 <__TEXT_REGION_LENGTH__+0x700a28>
    18fa:	90 91 29 0a 	lds	r25, 0x0A29	; 0x800a29 <__TEXT_REGION_LENGTH__+0x700a29>
    18fe:	88 56       	subi	r24, 0x68	; 104
    1900:	97 4f       	sbci	r25, 0xF7	; 247
    1902:	80 93 2c 3c 	sts	0x3C2C, r24	; 0x803c2c <cmp0_bkp>
    1906:	90 93 2d 3c 	sts	0x3C2D, r25	; 0x803c2d <cmp0_bkp+0x1>
	if (!(busy_flag))
    190a:	80 91 00 3c 	lds	r24, 0x3C00	; 0x803c00 <_edata>
    190e:	81 11       	cpse	r24, r1
    1910:	0f c0       	rjmp	.+30     	; 0x1930 <__vector_10+0xca>
	{inc_comms_clock;											//only poll UNO if no transactions are ongoing
    1912:	e8 e2       	ldi	r30, 0x28	; 40
    1914:	fa e0       	ldi	r31, 0x0A	; 10
    1916:	80 81       	ld	r24, Z
    1918:	91 81       	ldd	r25, Z+1	; 0x01
    191a:	88 53       	subi	r24, 0x38	; 56
    191c:	9f 4f       	sbci	r25, 0xFF	; 255
    191e:	80 83       	st	Z, r24
    1920:	91 83       	std	Z+1, r25	; 0x01
	PORTC.DIR |= PIN3_bm;										//initiate start pulse
    1922:	e0 e4       	ldi	r30, 0x40	; 64
    1924:	f4 e0       	ldi	r31, 0x04	; 4
    1926:	80 81       	ld	r24, Z
    1928:	88 60       	ori	r24, 0x08	; 8
    192a:	80 83       	st	Z, r24
	comms_transaction();}										//Poll the UNO
    192c:	0e 94 20 02 	call	0x440	; 0x440 <comms_transaction>
	TCA0_SINGLE_CMP0 = cmp0_bkp;								//Reinstate the 1.1ms clock tick
    1930:	80 91 2c 3c 	lds	r24, 0x3C2C	; 0x803c2c <cmp0_bkp>
    1934:	90 91 2d 3c 	lds	r25, 0x3C2D	; 0x803c2d <cmp0_bkp+0x1>
    1938:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x700a28>
    193c:	90 93 29 0a 	sts	0x0A29, r25	; 0x800a29 <__TEXT_REGION_LENGTH__+0x700a29>
	display_ptr = 0;}											//Set display_pointer to the first digit
    1940:	10 92 29 3c 	sts	0x3C29, r1	; 0x803c29 <display_ptr>
    1944:	10 92 2a 3c 	sts	0x3C2A, r1	; 0x803c2a <display_ptr+0x1>
    1948:	ff 91       	pop	r31
    194a:	ef 91       	pop	r30
    194c:	bf 91       	pop	r27
    194e:	af 91       	pop	r26
    1950:	9f 91       	pop	r25
    1952:	8f 91       	pop	r24
    1954:	7f 91       	pop	r23
    1956:	6f 91       	pop	r22
    1958:	5f 91       	pop	r21
    195a:	4f 91       	pop	r20
    195c:	3f 91       	pop	r19
    195e:	2f 91       	pop	r18
    1960:	0f 90       	pop	r0
    1962:	0f be       	out	0x3f, r0	; 63
    1964:	0f 90       	pop	r0
    1966:	1f 90       	pop	r1
    1968:	18 95       	reti

0000196a <__vector_13>:
	TCB0_CCMP = BC;									//1.75mS for full brightness 0.25ms for low brightness
	TCB0_CTRLA = 1;									//Start the clock
	TCB0_INTCTRL = 1;}								//Interrupt flag on compare match

		
	ISR (TCB0_INT_vect){							//Clear display
    196a:	1f 92       	push	r1
    196c:	0f 92       	push	r0
    196e:	0f b6       	in	r0, 0x3f	; 63
    1970:	0f 92       	push	r0
    1972:	11 24       	eor	r1, r1
    1974:	8f 93       	push	r24
    1976:	ef 93       	push	r30
    1978:	ff 93       	push	r31
	TCB0_INTFLAGS = 1;								//Clear interrupt flag
    197a:	81 e0       	ldi	r24, 0x01	; 1
    197c:	80 93 46 0a 	sts	0x0A46, r24	; 0x800a46 <__TEXT_REGION_LENGTH__+0x700a46>
	TCB0_CTRLA = 0;									//Stop the clock	
    1980:	10 92 40 0a 	sts	0x0A40, r1	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
	clear_digits; clear_display;}	
    1984:	e0 e0       	ldi	r30, 0x00	; 0
    1986:	f4 e0       	ldi	r31, 0x04	; 4
    1988:	84 81       	ldd	r24, Z+4	; 0x04
    198a:	81 70       	andi	r24, 0x01	; 1
    198c:	84 83       	std	Z+4, r24	; 0x04
    198e:	e0 e2       	ldi	r30, 0x20	; 32
    1990:	f4 e0       	ldi	r31, 0x04	; 4
    1992:	84 81       	ldd	r24, Z+4	; 0x04
    1994:	8e 7f       	andi	r24, 0xFE	; 254
    1996:	84 83       	std	Z+4, r24	; 0x04
    1998:	84 81       	ldd	r24, Z+4	; 0x04
    199a:	8e 63       	ori	r24, 0x3E	; 62
    199c:	84 83       	std	Z+4, r24	; 0x04
    199e:	e0 e4       	ldi	r30, 0x40	; 64
    19a0:	f4 e0       	ldi	r31, 0x04	; 4
    19a2:	84 81       	ldd	r24, Z+4	; 0x04
    19a4:	87 60       	ori	r24, 0x07	; 7
    19a6:	84 83       	std	Z+4, r24	; 0x04
    19a8:	ff 91       	pop	r31
    19aa:	ef 91       	pop	r30
    19ac:	8f 91       	pop	r24
    19ae:	0f 90       	pop	r0
    19b0:	0f be       	out	0x3f, r0	; 63
    19b2:	0f 90       	pop	r0
    19b4:	1f 90       	pop	r1
    19b6:	18 95       	reti

000019b8 <__subsf3>:
    19b8:	50 58       	subi	r21, 0x80	; 128

000019ba <__addsf3>:
    19ba:	bb 27       	eor	r27, r27
    19bc:	aa 27       	eor	r26, r26
    19be:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <__addsf3x>
    19c2:	0c 94 6e 0e 	jmp	0x1cdc	; 0x1cdc <__fp_round>
    19c6:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__fp_pscA>
    19ca:	38 f0       	brcs	.+14     	; 0x19da <__addsf3+0x20>
    19cc:	0e 94 67 0e 	call	0x1cce	; 0x1cce <__fp_pscB>
    19d0:	20 f0       	brcs	.+8      	; 0x19da <__addsf3+0x20>
    19d2:	39 f4       	brne	.+14     	; 0x19e2 <__addsf3+0x28>
    19d4:	9f 3f       	cpi	r25, 0xFF	; 255
    19d6:	19 f4       	brne	.+6      	; 0x19de <__addsf3+0x24>
    19d8:	26 f4       	brtc	.+8      	; 0x19e2 <__addsf3+0x28>
    19da:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_nan>
    19de:	0e f4       	brtc	.+2      	; 0x19e2 <__addsf3+0x28>
    19e0:	e0 95       	com	r30
    19e2:	e7 fb       	bst	r30, 7
    19e4:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>

000019e8 <__addsf3x>:
    19e8:	e9 2f       	mov	r30, r25
    19ea:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <__fp_split3>
    19ee:	58 f3       	brcs	.-42     	; 0x19c6 <__addsf3+0xc>
    19f0:	ba 17       	cp	r27, r26
    19f2:	62 07       	cpc	r22, r18
    19f4:	73 07       	cpc	r23, r19
    19f6:	84 07       	cpc	r24, r20
    19f8:	95 07       	cpc	r25, r21
    19fa:	20 f0       	brcs	.+8      	; 0x1a04 <__addsf3x+0x1c>
    19fc:	79 f4       	brne	.+30     	; 0x1a1c <__addsf3x+0x34>
    19fe:	a6 f5       	brtc	.+104    	; 0x1a68 <__addsf3x+0x80>
    1a00:	0c 94 a1 0e 	jmp	0x1d42	; 0x1d42 <__fp_zero>
    1a04:	0e f4       	brtc	.+2      	; 0x1a08 <__addsf3x+0x20>
    1a06:	e0 95       	com	r30
    1a08:	0b 2e       	mov	r0, r27
    1a0a:	ba 2f       	mov	r27, r26
    1a0c:	a0 2d       	mov	r26, r0
    1a0e:	0b 01       	movw	r0, r22
    1a10:	b9 01       	movw	r22, r18
    1a12:	90 01       	movw	r18, r0
    1a14:	0c 01       	movw	r0, r24
    1a16:	ca 01       	movw	r24, r20
    1a18:	a0 01       	movw	r20, r0
    1a1a:	11 24       	eor	r1, r1
    1a1c:	ff 27       	eor	r31, r31
    1a1e:	59 1b       	sub	r21, r25
    1a20:	99 f0       	breq	.+38     	; 0x1a48 <__addsf3x+0x60>
    1a22:	59 3f       	cpi	r21, 0xF9	; 249
    1a24:	50 f4       	brcc	.+20     	; 0x1a3a <__addsf3x+0x52>
    1a26:	50 3e       	cpi	r21, 0xE0	; 224
    1a28:	68 f1       	brcs	.+90     	; 0x1a84 <__addsf3x+0x9c>
    1a2a:	1a 16       	cp	r1, r26
    1a2c:	f0 40       	sbci	r31, 0x00	; 0
    1a2e:	a2 2f       	mov	r26, r18
    1a30:	23 2f       	mov	r18, r19
    1a32:	34 2f       	mov	r19, r20
    1a34:	44 27       	eor	r20, r20
    1a36:	58 5f       	subi	r21, 0xF8	; 248
    1a38:	f3 cf       	rjmp	.-26     	; 0x1a20 <__addsf3x+0x38>
    1a3a:	46 95       	lsr	r20
    1a3c:	37 95       	ror	r19
    1a3e:	27 95       	ror	r18
    1a40:	a7 95       	ror	r26
    1a42:	f0 40       	sbci	r31, 0x00	; 0
    1a44:	53 95       	inc	r21
    1a46:	c9 f7       	brne	.-14     	; 0x1a3a <__addsf3x+0x52>
    1a48:	7e f4       	brtc	.+30     	; 0x1a68 <__addsf3x+0x80>
    1a4a:	1f 16       	cp	r1, r31
    1a4c:	ba 0b       	sbc	r27, r26
    1a4e:	62 0b       	sbc	r22, r18
    1a50:	73 0b       	sbc	r23, r19
    1a52:	84 0b       	sbc	r24, r20
    1a54:	ba f0       	brmi	.+46     	; 0x1a84 <__addsf3x+0x9c>
    1a56:	91 50       	subi	r25, 0x01	; 1
    1a58:	a1 f0       	breq	.+40     	; 0x1a82 <__addsf3x+0x9a>
    1a5a:	ff 0f       	add	r31, r31
    1a5c:	bb 1f       	adc	r27, r27
    1a5e:	66 1f       	adc	r22, r22
    1a60:	77 1f       	adc	r23, r23
    1a62:	88 1f       	adc	r24, r24
    1a64:	c2 f7       	brpl	.-16     	; 0x1a56 <__addsf3x+0x6e>
    1a66:	0e c0       	rjmp	.+28     	; 0x1a84 <__addsf3x+0x9c>
    1a68:	ba 0f       	add	r27, r26
    1a6a:	62 1f       	adc	r22, r18
    1a6c:	73 1f       	adc	r23, r19
    1a6e:	84 1f       	adc	r24, r20
    1a70:	48 f4       	brcc	.+18     	; 0x1a84 <__addsf3x+0x9c>
    1a72:	87 95       	ror	r24
    1a74:	77 95       	ror	r23
    1a76:	67 95       	ror	r22
    1a78:	b7 95       	ror	r27
    1a7a:	f7 95       	ror	r31
    1a7c:	9e 3f       	cpi	r25, 0xFE	; 254
    1a7e:	08 f0       	brcs	.+2      	; 0x1a82 <__addsf3x+0x9a>
    1a80:	b0 cf       	rjmp	.-160    	; 0x19e2 <__addsf3+0x28>
    1a82:	93 95       	inc	r25
    1a84:	88 0f       	add	r24, r24
    1a86:	08 f0       	brcs	.+2      	; 0x1a8a <__addsf3x+0xa2>
    1a88:	99 27       	eor	r25, r25
    1a8a:	ee 0f       	add	r30, r30
    1a8c:	97 95       	ror	r25
    1a8e:	87 95       	ror	r24
    1a90:	08 95       	ret

00001a92 <__cmpsf2>:
    1a92:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <__fp_cmp>
    1a96:	08 f4       	brcc	.+2      	; 0x1a9a <__cmpsf2+0x8>
    1a98:	81 e0       	ldi	r24, 0x01	; 1
    1a9a:	08 95       	ret

00001a9c <__divsf3>:
    1a9c:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__divsf3x>
    1aa0:	0c 94 6e 0e 	jmp	0x1cdc	; 0x1cdc <__fp_round>
    1aa4:	0e 94 67 0e 	call	0x1cce	; 0x1cce <__fp_pscB>
    1aa8:	58 f0       	brcs	.+22     	; 0x1ac0 <__divsf3+0x24>
    1aaa:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__fp_pscA>
    1aae:	40 f0       	brcs	.+16     	; 0x1ac0 <__divsf3+0x24>
    1ab0:	29 f4       	brne	.+10     	; 0x1abc <__divsf3+0x20>
    1ab2:	5f 3f       	cpi	r21, 0xFF	; 255
    1ab4:	29 f0       	breq	.+10     	; 0x1ac0 <__divsf3+0x24>
    1ab6:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>
    1aba:	51 11       	cpse	r21, r1
    1abc:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__fp_szero>
    1ac0:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_nan>

00001ac4 <__divsf3x>:
    1ac4:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <__fp_split3>
    1ac8:	68 f3       	brcs	.-38     	; 0x1aa4 <__divsf3+0x8>

00001aca <__divsf3_pse>:
    1aca:	99 23       	and	r25, r25
    1acc:	b1 f3       	breq	.-20     	; 0x1aba <__divsf3+0x1e>
    1ace:	55 23       	and	r21, r21
    1ad0:	91 f3       	breq	.-28     	; 0x1ab6 <__divsf3+0x1a>
    1ad2:	95 1b       	sub	r25, r21
    1ad4:	55 0b       	sbc	r21, r21
    1ad6:	bb 27       	eor	r27, r27
    1ad8:	aa 27       	eor	r26, r26
    1ada:	62 17       	cp	r22, r18
    1adc:	73 07       	cpc	r23, r19
    1ade:	84 07       	cpc	r24, r20
    1ae0:	38 f0       	brcs	.+14     	; 0x1af0 <__divsf3_pse+0x26>
    1ae2:	9f 5f       	subi	r25, 0xFF	; 255
    1ae4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ae6:	22 0f       	add	r18, r18
    1ae8:	33 1f       	adc	r19, r19
    1aea:	44 1f       	adc	r20, r20
    1aec:	aa 1f       	adc	r26, r26
    1aee:	a9 f3       	breq	.-22     	; 0x1ada <__divsf3_pse+0x10>
    1af0:	35 d0       	rcall	.+106    	; 0x1b5c <__divsf3_pse+0x92>
    1af2:	0e 2e       	mov	r0, r30
    1af4:	3a f0       	brmi	.+14     	; 0x1b04 <__divsf3_pse+0x3a>
    1af6:	e0 e8       	ldi	r30, 0x80	; 128
    1af8:	32 d0       	rcall	.+100    	; 0x1b5e <__divsf3_pse+0x94>
    1afa:	91 50       	subi	r25, 0x01	; 1
    1afc:	50 40       	sbci	r21, 0x00	; 0
    1afe:	e6 95       	lsr	r30
    1b00:	00 1c       	adc	r0, r0
    1b02:	ca f7       	brpl	.-14     	; 0x1af6 <__divsf3_pse+0x2c>
    1b04:	2b d0       	rcall	.+86     	; 0x1b5c <__divsf3_pse+0x92>
    1b06:	fe 2f       	mov	r31, r30
    1b08:	29 d0       	rcall	.+82     	; 0x1b5c <__divsf3_pse+0x92>
    1b0a:	66 0f       	add	r22, r22
    1b0c:	77 1f       	adc	r23, r23
    1b0e:	88 1f       	adc	r24, r24
    1b10:	bb 1f       	adc	r27, r27
    1b12:	26 17       	cp	r18, r22
    1b14:	37 07       	cpc	r19, r23
    1b16:	48 07       	cpc	r20, r24
    1b18:	ab 07       	cpc	r26, r27
    1b1a:	b0 e8       	ldi	r27, 0x80	; 128
    1b1c:	09 f0       	breq	.+2      	; 0x1b20 <__divsf3_pse+0x56>
    1b1e:	bb 0b       	sbc	r27, r27
    1b20:	80 2d       	mov	r24, r0
    1b22:	bf 01       	movw	r22, r30
    1b24:	ff 27       	eor	r31, r31
    1b26:	93 58       	subi	r25, 0x83	; 131
    1b28:	5f 4f       	sbci	r21, 0xFF	; 255
    1b2a:	3a f0       	brmi	.+14     	; 0x1b3a <__divsf3_pse+0x70>
    1b2c:	9e 3f       	cpi	r25, 0xFE	; 254
    1b2e:	51 05       	cpc	r21, r1
    1b30:	78 f0       	brcs	.+30     	; 0x1b50 <__divsf3_pse+0x86>
    1b32:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>
    1b36:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__fp_szero>
    1b3a:	5f 3f       	cpi	r21, 0xFF	; 255
    1b3c:	e4 f3       	brlt	.-8      	; 0x1b36 <__divsf3_pse+0x6c>
    1b3e:	98 3e       	cpi	r25, 0xE8	; 232
    1b40:	d4 f3       	brlt	.-12     	; 0x1b36 <__divsf3_pse+0x6c>
    1b42:	86 95       	lsr	r24
    1b44:	77 95       	ror	r23
    1b46:	67 95       	ror	r22
    1b48:	b7 95       	ror	r27
    1b4a:	f7 95       	ror	r31
    1b4c:	9f 5f       	subi	r25, 0xFF	; 255
    1b4e:	c9 f7       	brne	.-14     	; 0x1b42 <__divsf3_pse+0x78>
    1b50:	88 0f       	add	r24, r24
    1b52:	91 1d       	adc	r25, r1
    1b54:	96 95       	lsr	r25
    1b56:	87 95       	ror	r24
    1b58:	97 f9       	bld	r25, 7
    1b5a:	08 95       	ret
    1b5c:	e1 e0       	ldi	r30, 0x01	; 1
    1b5e:	66 0f       	add	r22, r22
    1b60:	77 1f       	adc	r23, r23
    1b62:	88 1f       	adc	r24, r24
    1b64:	bb 1f       	adc	r27, r27
    1b66:	62 17       	cp	r22, r18
    1b68:	73 07       	cpc	r23, r19
    1b6a:	84 07       	cpc	r24, r20
    1b6c:	ba 07       	cpc	r27, r26
    1b6e:	20 f0       	brcs	.+8      	; 0x1b78 <__divsf3_pse+0xae>
    1b70:	62 1b       	sub	r22, r18
    1b72:	73 0b       	sbc	r23, r19
    1b74:	84 0b       	sbc	r24, r20
    1b76:	ba 0b       	sbc	r27, r26
    1b78:	ee 1f       	adc	r30, r30
    1b7a:	88 f7       	brcc	.-30     	; 0x1b5e <__divsf3_pse+0x94>
    1b7c:	e0 95       	com	r30
    1b7e:	08 95       	ret

00001b80 <__fixsfsi>:
    1b80:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <__fixunssfsi>
    1b84:	68 94       	set
    1b86:	b1 11       	cpse	r27, r1
    1b88:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__fp_szero>
    1b8c:	08 95       	ret

00001b8e <__fixunssfsi>:
    1b8e:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__fp_splitA>
    1b92:	88 f0       	brcs	.+34     	; 0x1bb6 <__fixunssfsi+0x28>
    1b94:	9f 57       	subi	r25, 0x7F	; 127
    1b96:	98 f0       	brcs	.+38     	; 0x1bbe <__fixunssfsi+0x30>
    1b98:	b9 2f       	mov	r27, r25
    1b9a:	99 27       	eor	r25, r25
    1b9c:	b7 51       	subi	r27, 0x17	; 23
    1b9e:	b0 f0       	brcs	.+44     	; 0x1bcc <__fixunssfsi+0x3e>
    1ba0:	e1 f0       	breq	.+56     	; 0x1bda <__fixunssfsi+0x4c>
    1ba2:	66 0f       	add	r22, r22
    1ba4:	77 1f       	adc	r23, r23
    1ba6:	88 1f       	adc	r24, r24
    1ba8:	99 1f       	adc	r25, r25
    1baa:	1a f0       	brmi	.+6      	; 0x1bb2 <__fixunssfsi+0x24>
    1bac:	ba 95       	dec	r27
    1bae:	c9 f7       	brne	.-14     	; 0x1ba2 <__fixunssfsi+0x14>
    1bb0:	14 c0       	rjmp	.+40     	; 0x1bda <__fixunssfsi+0x4c>
    1bb2:	b1 30       	cpi	r27, 0x01	; 1
    1bb4:	91 f0       	breq	.+36     	; 0x1bda <__fixunssfsi+0x4c>
    1bb6:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__fp_zero>
    1bba:	b1 e0       	ldi	r27, 0x01	; 1
    1bbc:	08 95       	ret
    1bbe:	0c 94 a1 0e 	jmp	0x1d42	; 0x1d42 <__fp_zero>
    1bc2:	67 2f       	mov	r22, r23
    1bc4:	78 2f       	mov	r23, r24
    1bc6:	88 27       	eor	r24, r24
    1bc8:	b8 5f       	subi	r27, 0xF8	; 248
    1bca:	39 f0       	breq	.+14     	; 0x1bda <__fixunssfsi+0x4c>
    1bcc:	b9 3f       	cpi	r27, 0xF9	; 249
    1bce:	cc f3       	brlt	.-14     	; 0x1bc2 <__fixunssfsi+0x34>
    1bd0:	86 95       	lsr	r24
    1bd2:	77 95       	ror	r23
    1bd4:	67 95       	ror	r22
    1bd6:	b3 95       	inc	r27
    1bd8:	d9 f7       	brne	.-10     	; 0x1bd0 <__fixunssfsi+0x42>
    1bda:	3e f4       	brtc	.+14     	; 0x1bea <__fixunssfsi+0x5c>
    1bdc:	90 95       	com	r25
    1bde:	80 95       	com	r24
    1be0:	70 95       	com	r23
    1be2:	61 95       	neg	r22
    1be4:	7f 4f       	sbci	r23, 0xFF	; 255
    1be6:	8f 4f       	sbci	r24, 0xFF	; 255
    1be8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bea:	08 95       	ret

00001bec <__floatunsisf>:
    1bec:	e8 94       	clt
    1bee:	09 c0       	rjmp	.+18     	; 0x1c02 <__floatsisf+0x12>

00001bf0 <__floatsisf>:
    1bf0:	97 fb       	bst	r25, 7
    1bf2:	3e f4       	brtc	.+14     	; 0x1c02 <__floatsisf+0x12>
    1bf4:	90 95       	com	r25
    1bf6:	80 95       	com	r24
    1bf8:	70 95       	com	r23
    1bfa:	61 95       	neg	r22
    1bfc:	7f 4f       	sbci	r23, 0xFF	; 255
    1bfe:	8f 4f       	sbci	r24, 0xFF	; 255
    1c00:	9f 4f       	sbci	r25, 0xFF	; 255
    1c02:	99 23       	and	r25, r25
    1c04:	a9 f0       	breq	.+42     	; 0x1c30 <__floatsisf+0x40>
    1c06:	f9 2f       	mov	r31, r25
    1c08:	96 e9       	ldi	r25, 0x96	; 150
    1c0a:	bb 27       	eor	r27, r27
    1c0c:	93 95       	inc	r25
    1c0e:	f6 95       	lsr	r31
    1c10:	87 95       	ror	r24
    1c12:	77 95       	ror	r23
    1c14:	67 95       	ror	r22
    1c16:	b7 95       	ror	r27
    1c18:	f1 11       	cpse	r31, r1
    1c1a:	f8 cf       	rjmp	.-16     	; 0x1c0c <__floatsisf+0x1c>
    1c1c:	fa f4       	brpl	.+62     	; 0x1c5c <__floatsisf+0x6c>
    1c1e:	bb 0f       	add	r27, r27
    1c20:	11 f4       	brne	.+4      	; 0x1c26 <__floatsisf+0x36>
    1c22:	60 ff       	sbrs	r22, 0
    1c24:	1b c0       	rjmp	.+54     	; 0x1c5c <__floatsisf+0x6c>
    1c26:	6f 5f       	subi	r22, 0xFF	; 255
    1c28:	7f 4f       	sbci	r23, 0xFF	; 255
    1c2a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c2e:	16 c0       	rjmp	.+44     	; 0x1c5c <__floatsisf+0x6c>
    1c30:	88 23       	and	r24, r24
    1c32:	11 f0       	breq	.+4      	; 0x1c38 <__floatsisf+0x48>
    1c34:	96 e9       	ldi	r25, 0x96	; 150
    1c36:	11 c0       	rjmp	.+34     	; 0x1c5a <__floatsisf+0x6a>
    1c38:	77 23       	and	r23, r23
    1c3a:	21 f0       	breq	.+8      	; 0x1c44 <__floatsisf+0x54>
    1c3c:	9e e8       	ldi	r25, 0x8E	; 142
    1c3e:	87 2f       	mov	r24, r23
    1c40:	76 2f       	mov	r23, r22
    1c42:	05 c0       	rjmp	.+10     	; 0x1c4e <__floatsisf+0x5e>
    1c44:	66 23       	and	r22, r22
    1c46:	71 f0       	breq	.+28     	; 0x1c64 <__floatsisf+0x74>
    1c48:	96 e8       	ldi	r25, 0x86	; 134
    1c4a:	86 2f       	mov	r24, r22
    1c4c:	70 e0       	ldi	r23, 0x00	; 0
    1c4e:	60 e0       	ldi	r22, 0x00	; 0
    1c50:	2a f0       	brmi	.+10     	; 0x1c5c <__floatsisf+0x6c>
    1c52:	9a 95       	dec	r25
    1c54:	66 0f       	add	r22, r22
    1c56:	77 1f       	adc	r23, r23
    1c58:	88 1f       	adc	r24, r24
    1c5a:	da f7       	brpl	.-10     	; 0x1c52 <__floatsisf+0x62>
    1c5c:	88 0f       	add	r24, r24
    1c5e:	96 95       	lsr	r25
    1c60:	87 95       	ror	r24
    1c62:	97 f9       	bld	r25, 7
    1c64:	08 95       	ret

00001c66 <__fp_cmp>:
    1c66:	99 0f       	add	r25, r25
    1c68:	00 08       	sbc	r0, r0
    1c6a:	55 0f       	add	r21, r21
    1c6c:	aa 0b       	sbc	r26, r26
    1c6e:	e0 e8       	ldi	r30, 0x80	; 128
    1c70:	fe ef       	ldi	r31, 0xFE	; 254
    1c72:	16 16       	cp	r1, r22
    1c74:	17 06       	cpc	r1, r23
    1c76:	e8 07       	cpc	r30, r24
    1c78:	f9 07       	cpc	r31, r25
    1c7a:	c0 f0       	brcs	.+48     	; 0x1cac <__fp_cmp+0x46>
    1c7c:	12 16       	cp	r1, r18
    1c7e:	13 06       	cpc	r1, r19
    1c80:	e4 07       	cpc	r30, r20
    1c82:	f5 07       	cpc	r31, r21
    1c84:	98 f0       	brcs	.+38     	; 0x1cac <__fp_cmp+0x46>
    1c86:	62 1b       	sub	r22, r18
    1c88:	73 0b       	sbc	r23, r19
    1c8a:	84 0b       	sbc	r24, r20
    1c8c:	95 0b       	sbc	r25, r21
    1c8e:	39 f4       	brne	.+14     	; 0x1c9e <__fp_cmp+0x38>
    1c90:	0a 26       	eor	r0, r26
    1c92:	61 f0       	breq	.+24     	; 0x1cac <__fp_cmp+0x46>
    1c94:	23 2b       	or	r18, r19
    1c96:	24 2b       	or	r18, r20
    1c98:	25 2b       	or	r18, r21
    1c9a:	21 f4       	brne	.+8      	; 0x1ca4 <__fp_cmp+0x3e>
    1c9c:	08 95       	ret
    1c9e:	0a 26       	eor	r0, r26
    1ca0:	09 f4       	brne	.+2      	; 0x1ca4 <__fp_cmp+0x3e>
    1ca2:	a1 40       	sbci	r26, 0x01	; 1
    1ca4:	a6 95       	lsr	r26
    1ca6:	8f ef       	ldi	r24, 0xFF	; 255
    1ca8:	81 1d       	adc	r24, r1
    1caa:	81 1d       	adc	r24, r1
    1cac:	08 95       	ret

00001cae <__fp_inf>:
    1cae:	97 f9       	bld	r25, 7
    1cb0:	9f 67       	ori	r25, 0x7F	; 127
    1cb2:	80 e8       	ldi	r24, 0x80	; 128
    1cb4:	70 e0       	ldi	r23, 0x00	; 0
    1cb6:	60 e0       	ldi	r22, 0x00	; 0
    1cb8:	08 95       	ret

00001cba <__fp_nan>:
    1cba:	9f ef       	ldi	r25, 0xFF	; 255
    1cbc:	80 ec       	ldi	r24, 0xC0	; 192
    1cbe:	08 95       	ret

00001cc0 <__fp_pscA>:
    1cc0:	00 24       	eor	r0, r0
    1cc2:	0a 94       	dec	r0
    1cc4:	16 16       	cp	r1, r22
    1cc6:	17 06       	cpc	r1, r23
    1cc8:	18 06       	cpc	r1, r24
    1cca:	09 06       	cpc	r0, r25
    1ccc:	08 95       	ret

00001cce <__fp_pscB>:
    1cce:	00 24       	eor	r0, r0
    1cd0:	0a 94       	dec	r0
    1cd2:	12 16       	cp	r1, r18
    1cd4:	13 06       	cpc	r1, r19
    1cd6:	14 06       	cpc	r1, r20
    1cd8:	05 06       	cpc	r0, r21
    1cda:	08 95       	ret

00001cdc <__fp_round>:
    1cdc:	09 2e       	mov	r0, r25
    1cde:	03 94       	inc	r0
    1ce0:	00 0c       	add	r0, r0
    1ce2:	11 f4       	brne	.+4      	; 0x1ce8 <__fp_round+0xc>
    1ce4:	88 23       	and	r24, r24
    1ce6:	52 f0       	brmi	.+20     	; 0x1cfc <__fp_round+0x20>
    1ce8:	bb 0f       	add	r27, r27
    1cea:	40 f4       	brcc	.+16     	; 0x1cfc <__fp_round+0x20>
    1cec:	bf 2b       	or	r27, r31
    1cee:	11 f4       	brne	.+4      	; 0x1cf4 <__fp_round+0x18>
    1cf0:	60 ff       	sbrs	r22, 0
    1cf2:	04 c0       	rjmp	.+8      	; 0x1cfc <__fp_round+0x20>
    1cf4:	6f 5f       	subi	r22, 0xFF	; 255
    1cf6:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cfa:	9f 4f       	sbci	r25, 0xFF	; 255
    1cfc:	08 95       	ret

00001cfe <__fp_split3>:
    1cfe:	57 fd       	sbrc	r21, 7
    1d00:	90 58       	subi	r25, 0x80	; 128
    1d02:	44 0f       	add	r20, r20
    1d04:	55 1f       	adc	r21, r21
    1d06:	59 f0       	breq	.+22     	; 0x1d1e <__fp_splitA+0x10>
    1d08:	5f 3f       	cpi	r21, 0xFF	; 255
    1d0a:	71 f0       	breq	.+28     	; 0x1d28 <__fp_splitA+0x1a>
    1d0c:	47 95       	ror	r20

00001d0e <__fp_splitA>:
    1d0e:	88 0f       	add	r24, r24
    1d10:	97 fb       	bst	r25, 7
    1d12:	99 1f       	adc	r25, r25
    1d14:	61 f0       	breq	.+24     	; 0x1d2e <__fp_splitA+0x20>
    1d16:	9f 3f       	cpi	r25, 0xFF	; 255
    1d18:	79 f0       	breq	.+30     	; 0x1d38 <__fp_splitA+0x2a>
    1d1a:	87 95       	ror	r24
    1d1c:	08 95       	ret
    1d1e:	12 16       	cp	r1, r18
    1d20:	13 06       	cpc	r1, r19
    1d22:	14 06       	cpc	r1, r20
    1d24:	55 1f       	adc	r21, r21
    1d26:	f2 cf       	rjmp	.-28     	; 0x1d0c <__fp_split3+0xe>
    1d28:	46 95       	lsr	r20
    1d2a:	f1 df       	rcall	.-30     	; 0x1d0e <__fp_splitA>
    1d2c:	08 c0       	rjmp	.+16     	; 0x1d3e <__fp_splitA+0x30>
    1d2e:	16 16       	cp	r1, r22
    1d30:	17 06       	cpc	r1, r23
    1d32:	18 06       	cpc	r1, r24
    1d34:	99 1f       	adc	r25, r25
    1d36:	f1 cf       	rjmp	.-30     	; 0x1d1a <__fp_splitA+0xc>
    1d38:	86 95       	lsr	r24
    1d3a:	71 05       	cpc	r23, r1
    1d3c:	61 05       	cpc	r22, r1
    1d3e:	08 94       	sec
    1d40:	08 95       	ret

00001d42 <__fp_zero>:
    1d42:	e8 94       	clt

00001d44 <__fp_szero>:
    1d44:	bb 27       	eor	r27, r27
    1d46:	66 27       	eor	r22, r22
    1d48:	77 27       	eor	r23, r23
    1d4a:	cb 01       	movw	r24, r22
    1d4c:	97 f9       	bld	r25, 7
    1d4e:	08 95       	ret

00001d50 <__gesf2>:
    1d50:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <__fp_cmp>
    1d54:	08 f4       	brcc	.+2      	; 0x1d58 <__gesf2+0x8>
    1d56:	8f ef       	ldi	r24, 0xFF	; 255
    1d58:	08 95       	ret

00001d5a <__mulsf3>:
    1d5a:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <__mulsf3x>
    1d5e:	0c 94 6e 0e 	jmp	0x1cdc	; 0x1cdc <__fp_round>
    1d62:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__fp_pscA>
    1d66:	38 f0       	brcs	.+14     	; 0x1d76 <__mulsf3+0x1c>
    1d68:	0e 94 67 0e 	call	0x1cce	; 0x1cce <__fp_pscB>
    1d6c:	20 f0       	brcs	.+8      	; 0x1d76 <__mulsf3+0x1c>
    1d6e:	95 23       	and	r25, r21
    1d70:	11 f0       	breq	.+4      	; 0x1d76 <__mulsf3+0x1c>
    1d72:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>
    1d76:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_nan>
    1d7a:	11 24       	eor	r1, r1
    1d7c:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__fp_szero>

00001d80 <__mulsf3x>:
    1d80:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <__fp_split3>
    1d84:	70 f3       	brcs	.-36     	; 0x1d62 <__mulsf3+0x8>

00001d86 <__mulsf3_pse>:
    1d86:	95 9f       	mul	r25, r21
    1d88:	c1 f3       	breq	.-16     	; 0x1d7a <__mulsf3+0x20>
    1d8a:	95 0f       	add	r25, r21
    1d8c:	50 e0       	ldi	r21, 0x00	; 0
    1d8e:	55 1f       	adc	r21, r21
    1d90:	62 9f       	mul	r22, r18
    1d92:	f0 01       	movw	r30, r0
    1d94:	72 9f       	mul	r23, r18
    1d96:	bb 27       	eor	r27, r27
    1d98:	f0 0d       	add	r31, r0
    1d9a:	b1 1d       	adc	r27, r1
    1d9c:	63 9f       	mul	r22, r19
    1d9e:	aa 27       	eor	r26, r26
    1da0:	f0 0d       	add	r31, r0
    1da2:	b1 1d       	adc	r27, r1
    1da4:	aa 1f       	adc	r26, r26
    1da6:	64 9f       	mul	r22, r20
    1da8:	66 27       	eor	r22, r22
    1daa:	b0 0d       	add	r27, r0
    1dac:	a1 1d       	adc	r26, r1
    1dae:	66 1f       	adc	r22, r22
    1db0:	82 9f       	mul	r24, r18
    1db2:	22 27       	eor	r18, r18
    1db4:	b0 0d       	add	r27, r0
    1db6:	a1 1d       	adc	r26, r1
    1db8:	62 1f       	adc	r22, r18
    1dba:	73 9f       	mul	r23, r19
    1dbc:	b0 0d       	add	r27, r0
    1dbe:	a1 1d       	adc	r26, r1
    1dc0:	62 1f       	adc	r22, r18
    1dc2:	83 9f       	mul	r24, r19
    1dc4:	a0 0d       	add	r26, r0
    1dc6:	61 1d       	adc	r22, r1
    1dc8:	22 1f       	adc	r18, r18
    1dca:	74 9f       	mul	r23, r20
    1dcc:	33 27       	eor	r19, r19
    1dce:	a0 0d       	add	r26, r0
    1dd0:	61 1d       	adc	r22, r1
    1dd2:	23 1f       	adc	r18, r19
    1dd4:	84 9f       	mul	r24, r20
    1dd6:	60 0d       	add	r22, r0
    1dd8:	21 1d       	adc	r18, r1
    1dda:	82 2f       	mov	r24, r18
    1ddc:	76 2f       	mov	r23, r22
    1dde:	6a 2f       	mov	r22, r26
    1de0:	11 24       	eor	r1, r1
    1de2:	9f 57       	subi	r25, 0x7F	; 127
    1de4:	50 40       	sbci	r21, 0x00	; 0
    1de6:	9a f0       	brmi	.+38     	; 0x1e0e <__mulsf3_pse+0x88>
    1de8:	f1 f0       	breq	.+60     	; 0x1e26 <__mulsf3_pse+0xa0>
    1dea:	88 23       	and	r24, r24
    1dec:	4a f0       	brmi	.+18     	; 0x1e00 <__mulsf3_pse+0x7a>
    1dee:	ee 0f       	add	r30, r30
    1df0:	ff 1f       	adc	r31, r31
    1df2:	bb 1f       	adc	r27, r27
    1df4:	66 1f       	adc	r22, r22
    1df6:	77 1f       	adc	r23, r23
    1df8:	88 1f       	adc	r24, r24
    1dfa:	91 50       	subi	r25, 0x01	; 1
    1dfc:	50 40       	sbci	r21, 0x00	; 0
    1dfe:	a9 f7       	brne	.-22     	; 0x1dea <__mulsf3_pse+0x64>
    1e00:	9e 3f       	cpi	r25, 0xFE	; 254
    1e02:	51 05       	cpc	r21, r1
    1e04:	80 f0       	brcs	.+32     	; 0x1e26 <__mulsf3_pse+0xa0>
    1e06:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>
    1e0a:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__fp_szero>
    1e0e:	5f 3f       	cpi	r21, 0xFF	; 255
    1e10:	e4 f3       	brlt	.-8      	; 0x1e0a <__mulsf3_pse+0x84>
    1e12:	98 3e       	cpi	r25, 0xE8	; 232
    1e14:	d4 f3       	brlt	.-12     	; 0x1e0a <__mulsf3_pse+0x84>
    1e16:	86 95       	lsr	r24
    1e18:	77 95       	ror	r23
    1e1a:	67 95       	ror	r22
    1e1c:	b7 95       	ror	r27
    1e1e:	f7 95       	ror	r31
    1e20:	e7 95       	ror	r30
    1e22:	9f 5f       	subi	r25, 0xFF	; 255
    1e24:	c1 f7       	brne	.-16     	; 0x1e16 <__mulsf3_pse+0x90>
    1e26:	fe 2b       	or	r31, r30
    1e28:	88 0f       	add	r24, r24
    1e2a:	91 1d       	adc	r25, r1
    1e2c:	96 95       	lsr	r25
    1e2e:	87 95       	ror	r24
    1e30:	97 f9       	bld	r25, 7
    1e32:	08 95       	ret

00001e34 <pow>:
    1e34:	fa 01       	movw	r30, r20
    1e36:	ee 0f       	add	r30, r30
    1e38:	ff 1f       	adc	r31, r31
    1e3a:	30 96       	adiw	r30, 0x00	; 0
    1e3c:	21 05       	cpc	r18, r1
    1e3e:	31 05       	cpc	r19, r1
    1e40:	a1 f1       	breq	.+104    	; 0x1eaa <pow+0x76>
    1e42:	61 15       	cp	r22, r1
    1e44:	71 05       	cpc	r23, r1
    1e46:	61 f4       	brne	.+24     	; 0x1e60 <pow+0x2c>
    1e48:	80 38       	cpi	r24, 0x80	; 128
    1e4a:	bf e3       	ldi	r27, 0x3F	; 63
    1e4c:	9b 07       	cpc	r25, r27
    1e4e:	49 f1       	breq	.+82     	; 0x1ea2 <pow+0x6e>
    1e50:	68 94       	set
    1e52:	90 38       	cpi	r25, 0x80	; 128
    1e54:	81 05       	cpc	r24, r1
    1e56:	61 f0       	breq	.+24     	; 0x1e70 <pow+0x3c>
    1e58:	80 38       	cpi	r24, 0x80	; 128
    1e5a:	bf ef       	ldi	r27, 0xFF	; 255
    1e5c:	9b 07       	cpc	r25, r27
    1e5e:	41 f0       	breq	.+16     	; 0x1e70 <pow+0x3c>
    1e60:	99 23       	and	r25, r25
    1e62:	4a f5       	brpl	.+82     	; 0x1eb6 <pow+0x82>
    1e64:	ff 3f       	cpi	r31, 0xFF	; 255
    1e66:	e1 05       	cpc	r30, r1
    1e68:	31 05       	cpc	r19, r1
    1e6a:	21 05       	cpc	r18, r1
    1e6c:	19 f1       	breq	.+70     	; 0x1eb4 <pow+0x80>
    1e6e:	e8 94       	clt
    1e70:	08 94       	sec
    1e72:	e7 95       	ror	r30
    1e74:	d9 01       	movw	r26, r18
    1e76:	aa 23       	and	r26, r26
    1e78:	29 f4       	brne	.+10     	; 0x1e84 <pow+0x50>
    1e7a:	ab 2f       	mov	r26, r27
    1e7c:	be 2f       	mov	r27, r30
    1e7e:	f8 5f       	subi	r31, 0xF8	; 248
    1e80:	d0 f3       	brcs	.-12     	; 0x1e76 <pow+0x42>
    1e82:	10 c0       	rjmp	.+32     	; 0x1ea4 <pow+0x70>
    1e84:	ff 5f       	subi	r31, 0xFF	; 255
    1e86:	70 f4       	brcc	.+28     	; 0x1ea4 <pow+0x70>
    1e88:	a6 95       	lsr	r26
    1e8a:	e0 f7       	brcc	.-8      	; 0x1e84 <pow+0x50>
    1e8c:	f7 39       	cpi	r31, 0x97	; 151
    1e8e:	50 f0       	brcs	.+20     	; 0x1ea4 <pow+0x70>
    1e90:	19 f0       	breq	.+6      	; 0x1e98 <pow+0x64>
    1e92:	ff 3a       	cpi	r31, 0xAF	; 175
    1e94:	38 f4       	brcc	.+14     	; 0x1ea4 <pow+0x70>
    1e96:	9f 77       	andi	r25, 0x7F	; 127
    1e98:	9f 93       	push	r25
    1e9a:	0d d0       	rcall	.+26     	; 0x1eb6 <pow+0x82>
    1e9c:	0f 90       	pop	r0
    1e9e:	07 fc       	sbrc	r0, 7
    1ea0:	90 58       	subi	r25, 0x80	; 128
    1ea2:	08 95       	ret
    1ea4:	46 f0       	brts	.+16     	; 0x1eb6 <pow+0x82>
    1ea6:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_nan>
    1eaa:	60 e0       	ldi	r22, 0x00	; 0
    1eac:	70 e0       	ldi	r23, 0x00	; 0
    1eae:	80 e8       	ldi	r24, 0x80	; 128
    1eb0:	9f e3       	ldi	r25, 0x3F	; 63
    1eb2:	08 95       	ret
    1eb4:	4f e7       	ldi	r20, 0x7F	; 127
    1eb6:	9f 77       	andi	r25, 0x7F	; 127
    1eb8:	5f 93       	push	r21
    1eba:	4f 93       	push	r20
    1ebc:	3f 93       	push	r19
    1ebe:	2f 93       	push	r18
    1ec0:	0e 94 15 10 	call	0x202a	; 0x202a <log>
    1ec4:	2f 91       	pop	r18
    1ec6:	3f 91       	pop	r19
    1ec8:	4f 91       	pop	r20
    1eca:	5f 91       	pop	r21
    1ecc:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <__mulsf3>
    1ed0:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <exp>
    1ed4:	29 f4       	brne	.+10     	; 0x1ee0 <pow+0xac>
    1ed6:	16 f0       	brts	.+4      	; 0x1edc <pow+0xa8>
    1ed8:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>
    1edc:	0c 94 a1 0e 	jmp	0x1d42	; 0x1d42 <__fp_zero>
    1ee0:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_nan>

00001ee4 <exp>:
    1ee4:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__fp_splitA>
    1ee8:	a8 f3       	brcs	.-22     	; 0x1ed4 <pow+0xa0>
    1eea:	96 38       	cpi	r25, 0x86	; 134
    1eec:	a0 f7       	brcc	.-24     	; 0x1ed6 <pow+0xa2>
    1eee:	07 f8       	bld	r0, 7
    1ef0:	0f 92       	push	r0
    1ef2:	e8 94       	clt
    1ef4:	2b e3       	ldi	r18, 0x3B	; 59
    1ef6:	3a ea       	ldi	r19, 0xAA	; 170
    1ef8:	48 eb       	ldi	r20, 0xB8	; 184
    1efa:	5f e7       	ldi	r21, 0x7F	; 127
    1efc:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <__mulsf3_pse>
    1f00:	0f 92       	push	r0
    1f02:	0f 92       	push	r0
    1f04:	0f 92       	push	r0
    1f06:	4d b7       	in	r20, 0x3d	; 61
    1f08:	5e b7       	in	r21, 0x3e	; 62
    1f0a:	0f 92       	push	r0
    1f0c:	0e 94 5d 10 	call	0x20ba	; 0x20ba <modf>
    1f10:	e8 e5       	ldi	r30, 0x58	; 88
    1f12:	f2 e0       	ldi	r31, 0x02	; 2
    1f14:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__fp_powser>
    1f18:	4f 91       	pop	r20
    1f1a:	5f 91       	pop	r21
    1f1c:	ef 91       	pop	r30
    1f1e:	ff 91       	pop	r31
    1f20:	e5 95       	asr	r30
    1f22:	ee 1f       	adc	r30, r30
    1f24:	ff 1f       	adc	r31, r31
    1f26:	49 f0       	breq	.+18     	; 0x1f3a <exp+0x56>
    1f28:	fe 57       	subi	r31, 0x7E	; 126
    1f2a:	e0 68       	ori	r30, 0x80	; 128
    1f2c:	44 27       	eor	r20, r20
    1f2e:	ee 0f       	add	r30, r30
    1f30:	44 1f       	adc	r20, r20
    1f32:	fa 95       	dec	r31
    1f34:	e1 f7       	brne	.-8      	; 0x1f2e <exp+0x4a>
    1f36:	41 95       	neg	r20
    1f38:	55 0b       	sbc	r21, r21
    1f3a:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <ldexp>
    1f3e:	0f 90       	pop	r0
    1f40:	07 fe       	sbrs	r0, 7
    1f42:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <inverse>
    1f46:	08 95       	ret

00001f48 <__fp_powser>:
    1f48:	df 93       	push	r29
    1f4a:	cf 93       	push	r28
    1f4c:	1f 93       	push	r17
    1f4e:	0f 93       	push	r16
    1f50:	ff 92       	push	r15
    1f52:	ef 92       	push	r14
    1f54:	df 92       	push	r13
    1f56:	7b 01       	movw	r14, r22
    1f58:	8c 01       	movw	r16, r24
    1f5a:	68 94       	set
    1f5c:	06 c0       	rjmp	.+12     	; 0x1f6a <__fp_powser+0x22>
    1f5e:	da 2e       	mov	r13, r26
    1f60:	ef 01       	movw	r28, r30
    1f62:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <__mulsf3x>
    1f66:	fe 01       	movw	r30, r28
    1f68:	e8 94       	clt
    1f6a:	a5 91       	lpm	r26, Z+
    1f6c:	25 91       	lpm	r18, Z+
    1f6e:	35 91       	lpm	r19, Z+
    1f70:	45 91       	lpm	r20, Z+
    1f72:	55 91       	lpm	r21, Z+
    1f74:	a6 f3       	brts	.-24     	; 0x1f5e <__fp_powser+0x16>
    1f76:	ef 01       	movw	r28, r30
    1f78:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <__addsf3x>
    1f7c:	fe 01       	movw	r30, r28
    1f7e:	97 01       	movw	r18, r14
    1f80:	a8 01       	movw	r20, r16
    1f82:	da 94       	dec	r13
    1f84:	69 f7       	brne	.-38     	; 0x1f60 <__fp_powser+0x18>
    1f86:	df 90       	pop	r13
    1f88:	ef 90       	pop	r14
    1f8a:	ff 90       	pop	r15
    1f8c:	0f 91       	pop	r16
    1f8e:	1f 91       	pop	r17
    1f90:	cf 91       	pop	r28
    1f92:	df 91       	pop	r29
    1f94:	08 95       	ret

00001f96 <inverse>:
    1f96:	9b 01       	movw	r18, r22
    1f98:	ac 01       	movw	r20, r24
    1f9a:	60 e0       	ldi	r22, 0x00	; 0
    1f9c:	70 e0       	ldi	r23, 0x00	; 0
    1f9e:	80 e8       	ldi	r24, 0x80	; 128
    1fa0:	9f e3       	ldi	r25, 0x3F	; 63
    1fa2:	0c 94 4e 0d 	jmp	0x1a9c	; 0x1a9c <__divsf3>
    1fa6:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>
    1faa:	0c 94 91 10 	jmp	0x2122	; 0x2122 <__fp_mpack>

00001fae <ldexp>:
    1fae:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__fp_splitA>
    1fb2:	d8 f3       	brcs	.-10     	; 0x1faa <inverse+0x14>
    1fb4:	99 23       	and	r25, r25
    1fb6:	c9 f3       	breq	.-14     	; 0x1faa <inverse+0x14>
    1fb8:	94 0f       	add	r25, r20
    1fba:	51 1d       	adc	r21, r1
    1fbc:	a3 f3       	brvs	.-24     	; 0x1fa6 <inverse+0x10>
    1fbe:	91 50       	subi	r25, 0x01	; 1
    1fc0:	50 40       	sbci	r21, 0x00	; 0
    1fc2:	94 f0       	brlt	.+36     	; 0x1fe8 <ldexp+0x3a>
    1fc4:	59 f0       	breq	.+22     	; 0x1fdc <ldexp+0x2e>
    1fc6:	88 23       	and	r24, r24
    1fc8:	32 f0       	brmi	.+12     	; 0x1fd6 <ldexp+0x28>
    1fca:	66 0f       	add	r22, r22
    1fcc:	77 1f       	adc	r23, r23
    1fce:	88 1f       	adc	r24, r24
    1fd0:	91 50       	subi	r25, 0x01	; 1
    1fd2:	50 40       	sbci	r21, 0x00	; 0
    1fd4:	c1 f7       	brne	.-16     	; 0x1fc6 <ldexp+0x18>
    1fd6:	9e 3f       	cpi	r25, 0xFE	; 254
    1fd8:	51 05       	cpc	r21, r1
    1fda:	2c f7       	brge	.-54     	; 0x1fa6 <inverse+0x10>
    1fdc:	88 0f       	add	r24, r24
    1fde:	91 1d       	adc	r25, r1
    1fe0:	96 95       	lsr	r25
    1fe2:	87 95       	ror	r24
    1fe4:	97 f9       	bld	r25, 7
    1fe6:	08 95       	ret
    1fe8:	5f 3f       	cpi	r21, 0xFF	; 255
    1fea:	ac f0       	brlt	.+42     	; 0x2016 <ldexp+0x68>
    1fec:	98 3e       	cpi	r25, 0xE8	; 232
    1fee:	9c f0       	brlt	.+38     	; 0x2016 <ldexp+0x68>
    1ff0:	bb 27       	eor	r27, r27
    1ff2:	86 95       	lsr	r24
    1ff4:	77 95       	ror	r23
    1ff6:	67 95       	ror	r22
    1ff8:	b7 95       	ror	r27
    1ffa:	08 f4       	brcc	.+2      	; 0x1ffe <ldexp+0x50>
    1ffc:	b1 60       	ori	r27, 0x01	; 1
    1ffe:	93 95       	inc	r25
    2000:	c1 f7       	brne	.-16     	; 0x1ff2 <ldexp+0x44>
    2002:	bb 0f       	add	r27, r27
    2004:	58 f7       	brcc	.-42     	; 0x1fdc <ldexp+0x2e>
    2006:	11 f4       	brne	.+4      	; 0x200c <ldexp+0x5e>
    2008:	60 ff       	sbrs	r22, 0
    200a:	e8 cf       	rjmp	.-48     	; 0x1fdc <ldexp+0x2e>
    200c:	6f 5f       	subi	r22, 0xFF	; 255
    200e:	7f 4f       	sbci	r23, 0xFF	; 255
    2010:	8f 4f       	sbci	r24, 0xFF	; 255
    2012:	9f 4f       	sbci	r25, 0xFF	; 255
    2014:	e3 cf       	rjmp	.-58     	; 0x1fdc <ldexp+0x2e>
    2016:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__fp_szero>
    201a:	16 f0       	brts	.+4      	; 0x2020 <ldexp+0x72>
    201c:	0c 94 91 10 	jmp	0x2122	; 0x2122 <__fp_mpack>
    2020:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_nan>
    2024:	68 94       	set
    2026:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__fp_inf>

0000202a <log>:
    202a:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__fp_splitA>
    202e:	a8 f3       	brcs	.-22     	; 0x201a <ldexp+0x6c>
    2030:	99 23       	and	r25, r25
    2032:	c1 f3       	breq	.-16     	; 0x2024 <ldexp+0x76>
    2034:	ae f3       	brts	.-22     	; 0x2020 <ldexp+0x72>
    2036:	df 93       	push	r29
    2038:	cf 93       	push	r28
    203a:	1f 93       	push	r17
    203c:	0f 93       	push	r16
    203e:	ff 92       	push	r15
    2040:	c9 2f       	mov	r28, r25
    2042:	dd 27       	eor	r29, r29
    2044:	88 23       	and	r24, r24
    2046:	2a f0       	brmi	.+10     	; 0x2052 <log+0x28>
    2048:	21 97       	sbiw	r28, 0x01	; 1
    204a:	66 0f       	add	r22, r22
    204c:	77 1f       	adc	r23, r23
    204e:	88 1f       	adc	r24, r24
    2050:	da f7       	brpl	.-10     	; 0x2048 <log+0x1e>
    2052:	20 e0       	ldi	r18, 0x00	; 0
    2054:	30 e0       	ldi	r19, 0x00	; 0
    2056:	40 e8       	ldi	r20, 0x80	; 128
    2058:	5f eb       	ldi	r21, 0xBF	; 191
    205a:	9f e3       	ldi	r25, 0x3F	; 63
    205c:	88 39       	cpi	r24, 0x98	; 152
    205e:	20 f0       	brcs	.+8      	; 0x2068 <log+0x3e>
    2060:	80 3e       	cpi	r24, 0xE0	; 224
    2062:	38 f0       	brcs	.+14     	; 0x2072 <log+0x48>
    2064:	21 96       	adiw	r28, 0x01	; 1
    2066:	8f 77       	andi	r24, 0x7F	; 127
    2068:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__addsf3>
    206c:	e0 e8       	ldi	r30, 0x80	; 128
    206e:	f2 e0       	ldi	r31, 0x02	; 2
    2070:	04 c0       	rjmp	.+8      	; 0x207a <log+0x50>
    2072:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <__addsf3>
    2076:	ed ea       	ldi	r30, 0xAD	; 173
    2078:	f2 e0       	ldi	r31, 0x02	; 2
    207a:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__fp_powser>
    207e:	8b 01       	movw	r16, r22
    2080:	be 01       	movw	r22, r28
    2082:	ec 01       	movw	r28, r24
    2084:	fb 2e       	mov	r15, r27
    2086:	6f 57       	subi	r22, 0x7F	; 127
    2088:	71 09       	sbc	r23, r1
    208a:	75 95       	asr	r23
    208c:	77 1f       	adc	r23, r23
    208e:	88 0b       	sbc	r24, r24
    2090:	99 0b       	sbc	r25, r25
    2092:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <__floatsisf>
    2096:	28 e1       	ldi	r18, 0x18	; 24
    2098:	32 e7       	ldi	r19, 0x72	; 114
    209a:	41 e3       	ldi	r20, 0x31	; 49
    209c:	5f e3       	ldi	r21, 0x3F	; 63
    209e:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <__mulsf3x>
    20a2:	af 2d       	mov	r26, r15
    20a4:	98 01       	movw	r18, r16
    20a6:	ae 01       	movw	r20, r28
    20a8:	ff 90       	pop	r15
    20aa:	0f 91       	pop	r16
    20ac:	1f 91       	pop	r17
    20ae:	cf 91       	pop	r28
    20b0:	df 91       	pop	r29
    20b2:	0e 94 f4 0c 	call	0x19e8	; 0x19e8 <__addsf3x>
    20b6:	0c 94 6e 0e 	jmp	0x1cdc	; 0x1cdc <__fp_round>

000020ba <modf>:
    20ba:	fa 01       	movw	r30, r20
    20bc:	dc 01       	movw	r26, r24
    20be:	aa 0f       	add	r26, r26
    20c0:	bb 1f       	adc	r27, r27
    20c2:	9b 01       	movw	r18, r22
    20c4:	ac 01       	movw	r20, r24
    20c6:	bf 57       	subi	r27, 0x7F	; 127
    20c8:	28 f4       	brcc	.+10     	; 0x20d4 <modf+0x1a>
    20ca:	22 27       	eor	r18, r18
    20cc:	33 27       	eor	r19, r19
    20ce:	44 27       	eor	r20, r20
    20d0:	50 78       	andi	r21, 0x80	; 128
    20d2:	20 c0       	rjmp	.+64     	; 0x2114 <modf+0x5a>
    20d4:	b7 51       	subi	r27, 0x17	; 23
    20d6:	90 f4       	brcc	.+36     	; 0x20fc <modf+0x42>
    20d8:	ab 2f       	mov	r26, r27
    20da:	00 24       	eor	r0, r0
    20dc:	46 95       	lsr	r20
    20de:	37 95       	ror	r19
    20e0:	27 95       	ror	r18
    20e2:	01 1c       	adc	r0, r1
    20e4:	a3 95       	inc	r26
    20e6:	d2 f3       	brmi	.-12     	; 0x20dc <modf+0x22>
    20e8:	00 20       	and	r0, r0
    20ea:	71 f0       	breq	.+28     	; 0x2108 <modf+0x4e>
    20ec:	22 0f       	add	r18, r18
    20ee:	33 1f       	adc	r19, r19
    20f0:	44 1f       	adc	r20, r20
    20f2:	b3 95       	inc	r27
    20f4:	da f3       	brmi	.-10     	; 0x20ec <modf+0x32>
    20f6:	0e d0       	rcall	.+28     	; 0x2114 <modf+0x5a>
    20f8:	0c 94 dc 0c 	jmp	0x19b8	; 0x19b8 <__subsf3>
    20fc:	61 30       	cpi	r22, 0x01	; 1
    20fe:	71 05       	cpc	r23, r1
    2100:	a0 e8       	ldi	r26, 0x80	; 128
    2102:	8a 07       	cpc	r24, r26
    2104:	b9 46       	sbci	r27, 0x69	; 105
    2106:	30 f4       	brcc	.+12     	; 0x2114 <modf+0x5a>
    2108:	9b 01       	movw	r18, r22
    210a:	ac 01       	movw	r20, r24
    210c:	66 27       	eor	r22, r22
    210e:	77 27       	eor	r23, r23
    2110:	88 27       	eor	r24, r24
    2112:	90 78       	andi	r25, 0x80	; 128
    2114:	30 96       	adiw	r30, 0x00	; 0
    2116:	21 f0       	breq	.+8      	; 0x2120 <modf+0x66>
    2118:	20 83       	st	Z, r18
    211a:	31 83       	std	Z+1, r19	; 0x01
    211c:	42 83       	std	Z+2, r20	; 0x02
    211e:	53 83       	std	Z+3, r21	; 0x03
    2120:	08 95       	ret

00002122 <__fp_mpack>:
    2122:	9f 3f       	cpi	r25, 0xFF	; 255
    2124:	31 f0       	breq	.+12     	; 0x2132 <__fp_mpack_finite+0xc>

00002126 <__fp_mpack_finite>:
    2126:	91 50       	subi	r25, 0x01	; 1
    2128:	20 f4       	brcc	.+8      	; 0x2132 <__fp_mpack_finite+0xc>
    212a:	87 95       	ror	r24
    212c:	77 95       	ror	r23
    212e:	67 95       	ror	r22
    2130:	b7 95       	ror	r27
    2132:	88 0f       	add	r24, r24
    2134:	91 1d       	adc	r25, r1
    2136:	96 95       	lsr	r25
    2138:	87 95       	ror	r24
    213a:	97 f9       	bld	r25, 7
    213c:	08 95       	ret

0000213e <__divmodhi4>:
    213e:	97 fb       	bst	r25, 7
    2140:	07 2e       	mov	r0, r23
    2142:	16 f4       	brtc	.+4      	; 0x2148 <__divmodhi4+0xa>
    2144:	00 94       	com	r0
    2146:	07 d0       	rcall	.+14     	; 0x2156 <__divmodhi4_neg1>
    2148:	77 fd       	sbrc	r23, 7
    214a:	09 d0       	rcall	.+18     	; 0x215e <__divmodhi4_neg2>
    214c:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <__udivmodhi4>
    2150:	07 fc       	sbrc	r0, 7
    2152:	05 d0       	rcall	.+10     	; 0x215e <__divmodhi4_neg2>
    2154:	3e f4       	brtc	.+14     	; 0x2164 <__divmodhi4_exit>

00002156 <__divmodhi4_neg1>:
    2156:	90 95       	com	r25
    2158:	81 95       	neg	r24
    215a:	9f 4f       	sbci	r25, 0xFF	; 255
    215c:	08 95       	ret

0000215e <__divmodhi4_neg2>:
    215e:	70 95       	com	r23
    2160:	61 95       	neg	r22
    2162:	7f 4f       	sbci	r23, 0xFF	; 255

00002164 <__divmodhi4_exit>:
    2164:	08 95       	ret

00002166 <__divmodsi4>:
    2166:	05 2e       	mov	r0, r21
    2168:	97 fb       	bst	r25, 7
    216a:	1e f4       	brtc	.+6      	; 0x2172 <__divmodsi4+0xc>
    216c:	00 94       	com	r0
    216e:	0e 94 ca 10 	call	0x2194	; 0x2194 <__negsi2>
    2172:	57 fd       	sbrc	r21, 7
    2174:	07 d0       	rcall	.+14     	; 0x2184 <__divmodsi4_neg2>
    2176:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <__udivmodsi4>
    217a:	07 fc       	sbrc	r0, 7
    217c:	03 d0       	rcall	.+6      	; 0x2184 <__divmodsi4_neg2>
    217e:	4e f4       	brtc	.+18     	; 0x2192 <__divmodsi4_exit>
    2180:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__negsi2>

00002184 <__divmodsi4_neg2>:
    2184:	50 95       	com	r21
    2186:	40 95       	com	r20
    2188:	30 95       	com	r19
    218a:	21 95       	neg	r18
    218c:	3f 4f       	sbci	r19, 0xFF	; 255
    218e:	4f 4f       	sbci	r20, 0xFF	; 255
    2190:	5f 4f       	sbci	r21, 0xFF	; 255

00002192 <__divmodsi4_exit>:
    2192:	08 95       	ret

00002194 <__negsi2>:
    2194:	90 95       	com	r25
    2196:	80 95       	com	r24
    2198:	70 95       	com	r23
    219a:	61 95       	neg	r22
    219c:	7f 4f       	sbci	r23, 0xFF	; 255
    219e:	8f 4f       	sbci	r24, 0xFF	; 255
    21a0:	9f 4f       	sbci	r25, 0xFF	; 255
    21a2:	08 95       	ret

000021a4 <__tablejump2__>:
    21a4:	ee 0f       	add	r30, r30
    21a6:	ff 1f       	adc	r31, r31
    21a8:	05 90       	lpm	r0, Z+
    21aa:	f4 91       	lpm	r31, Z
    21ac:	e0 2d       	mov	r30, r0
    21ae:	09 94       	ijmp

000021b0 <__udivmodhi4>:
    21b0:	aa 1b       	sub	r26, r26
    21b2:	bb 1b       	sub	r27, r27
    21b4:	51 e1       	ldi	r21, 0x11	; 17
    21b6:	07 c0       	rjmp	.+14     	; 0x21c6 <__udivmodhi4_ep>

000021b8 <__udivmodhi4_loop>:
    21b8:	aa 1f       	adc	r26, r26
    21ba:	bb 1f       	adc	r27, r27
    21bc:	a6 17       	cp	r26, r22
    21be:	b7 07       	cpc	r27, r23
    21c0:	10 f0       	brcs	.+4      	; 0x21c6 <__udivmodhi4_ep>
    21c2:	a6 1b       	sub	r26, r22
    21c4:	b7 0b       	sbc	r27, r23

000021c6 <__udivmodhi4_ep>:
    21c6:	88 1f       	adc	r24, r24
    21c8:	99 1f       	adc	r25, r25
    21ca:	5a 95       	dec	r21
    21cc:	a9 f7       	brne	.-22     	; 0x21b8 <__udivmodhi4_loop>
    21ce:	80 95       	com	r24
    21d0:	90 95       	com	r25
    21d2:	bc 01       	movw	r22, r24
    21d4:	cd 01       	movw	r24, r26
    21d6:	08 95       	ret

000021d8 <__udivmodsi4>:
    21d8:	a1 e2       	ldi	r26, 0x21	; 33
    21da:	1a 2e       	mov	r1, r26
    21dc:	aa 1b       	sub	r26, r26
    21de:	bb 1b       	sub	r27, r27
    21e0:	fd 01       	movw	r30, r26
    21e2:	0d c0       	rjmp	.+26     	; 0x21fe <__udivmodsi4_ep>

000021e4 <__udivmodsi4_loop>:
    21e4:	aa 1f       	adc	r26, r26
    21e6:	bb 1f       	adc	r27, r27
    21e8:	ee 1f       	adc	r30, r30
    21ea:	ff 1f       	adc	r31, r31
    21ec:	a2 17       	cp	r26, r18
    21ee:	b3 07       	cpc	r27, r19
    21f0:	e4 07       	cpc	r30, r20
    21f2:	f5 07       	cpc	r31, r21
    21f4:	20 f0       	brcs	.+8      	; 0x21fe <__udivmodsi4_ep>
    21f6:	a2 1b       	sub	r26, r18
    21f8:	b3 0b       	sbc	r27, r19
    21fa:	e4 0b       	sbc	r30, r20
    21fc:	f5 0b       	sbc	r31, r21

000021fe <__udivmodsi4_ep>:
    21fe:	66 1f       	adc	r22, r22
    2200:	77 1f       	adc	r23, r23
    2202:	88 1f       	adc	r24, r24
    2204:	99 1f       	adc	r25, r25
    2206:	1a 94       	dec	r1
    2208:	69 f7       	brne	.-38     	; 0x21e4 <__udivmodsi4_loop>
    220a:	60 95       	com	r22
    220c:	70 95       	com	r23
    220e:	80 95       	com	r24
    2210:	90 95       	com	r25
    2212:	9b 01       	movw	r18, r22
    2214:	ac 01       	movw	r20, r24
    2216:	bd 01       	movw	r22, r26
    2218:	cf 01       	movw	r24, r30
    221a:	08 95       	ret

0000221c <atof>:
    221c:	66 27       	eor	r22, r22
    221e:	77 27       	eor	r23, r23
    2220:	0c 94 7f 11 	jmp	0x22fe	; 0x22fe <strtod>

00002224 <atol>:
    2224:	1f 93       	push	r17
    2226:	fc 01       	movw	r30, r24
    2228:	99 27       	eor	r25, r25
    222a:	88 27       	eor	r24, r24
    222c:	bc 01       	movw	r22, r24
    222e:	e8 94       	clt
    2230:	11 91       	ld	r17, Z+
    2232:	10 32       	cpi	r17, 0x20	; 32
    2234:	e9 f3       	breq	.-6      	; 0x2230 <atol+0xc>
    2236:	19 30       	cpi	r17, 0x09	; 9
    2238:	10 f0       	brcs	.+4      	; 0x223e <atol+0x1a>
    223a:	1e 30       	cpi	r17, 0x0E	; 14
    223c:	c8 f3       	brcs	.-14     	; 0x2230 <atol+0xc>
    223e:	1b 32       	cpi	r17, 0x2B	; 43
    2240:	51 f0       	breq	.+20     	; 0x2256 <atol+0x32>
    2242:	1d 32       	cpi	r17, 0x2D	; 45
    2244:	49 f4       	brne	.+18     	; 0x2258 <atol+0x34>
    2246:	68 94       	set
    2248:	06 c0       	rjmp	.+12     	; 0x2256 <atol+0x32>
    224a:	0e 94 48 11 	call	0x2290	; 0x2290 <__mulsi_const_10>
    224e:	61 0f       	add	r22, r17
    2250:	71 1d       	adc	r23, r1
    2252:	81 1d       	adc	r24, r1
    2254:	91 1d       	adc	r25, r1
    2256:	11 91       	ld	r17, Z+
    2258:	10 53       	subi	r17, 0x30	; 48
    225a:	1a 30       	cpi	r17, 0x0A	; 10
    225c:	b0 f3       	brcs	.-20     	; 0x224a <atol+0x26>
    225e:	3e f4       	brtc	.+14     	; 0x226e <atol+0x4a>
    2260:	90 95       	com	r25
    2262:	80 95       	com	r24
    2264:	70 95       	com	r23
    2266:	61 95       	neg	r22
    2268:	7f 4f       	sbci	r23, 0xFF	; 255
    226a:	8f 4f       	sbci	r24, 0xFF	; 255
    226c:	9f 4f       	sbci	r25, 0xFF	; 255
    226e:	1f 91       	pop	r17
    2270:	08 95       	ret

00002272 <__ltoa_ncheck>:
    2272:	bb 27       	eor	r27, r27
    2274:	2a 30       	cpi	r18, 0x0A	; 10
    2276:	51 f4       	brne	.+20     	; 0x228c <__ltoa_ncheck+0x1a>
    2278:	99 23       	and	r25, r25
    227a:	42 f4       	brpl	.+16     	; 0x228c <__ltoa_ncheck+0x1a>
    227c:	bd e2       	ldi	r27, 0x2D	; 45
    227e:	90 95       	com	r25
    2280:	80 95       	com	r24
    2282:	70 95       	com	r23
    2284:	61 95       	neg	r22
    2286:	7f 4f       	sbci	r23, 0xFF	; 255
    2288:	8f 4f       	sbci	r24, 0xFF	; 255
    228a:	9f 4f       	sbci	r25, 0xFF	; 255
    228c:	0c 94 5e 11 	jmp	0x22bc	; 0x22bc <__ultoa_common>

00002290 <__mulsi_const_10>:
    2290:	59 2f       	mov	r21, r25
    2292:	48 2f       	mov	r20, r24
    2294:	37 2f       	mov	r19, r23
    2296:	26 2f       	mov	r18, r22
    2298:	66 0f       	add	r22, r22
    229a:	77 1f       	adc	r23, r23
    229c:	88 1f       	adc	r24, r24
    229e:	99 1f       	adc	r25, r25
    22a0:	66 0f       	add	r22, r22
    22a2:	77 1f       	adc	r23, r23
    22a4:	88 1f       	adc	r24, r24
    22a6:	99 1f       	adc	r25, r25
    22a8:	62 0f       	add	r22, r18
    22aa:	73 1f       	adc	r23, r19
    22ac:	84 1f       	adc	r24, r20
    22ae:	95 1f       	adc	r25, r21
    22b0:	66 0f       	add	r22, r22
    22b2:	77 1f       	adc	r23, r23
    22b4:	88 1f       	adc	r24, r24
    22b6:	99 1f       	adc	r25, r25
    22b8:	08 95       	ret

000022ba <__ultoa_ncheck>:
    22ba:	bb 27       	eor	r27, r27

000022bc <__ultoa_common>:
    22bc:	fa 01       	movw	r30, r20
    22be:	a6 2f       	mov	r26, r22
    22c0:	62 17       	cp	r22, r18
    22c2:	71 05       	cpc	r23, r1
    22c4:	81 05       	cpc	r24, r1
    22c6:	91 05       	cpc	r25, r1
    22c8:	33 0b       	sbc	r19, r19
    22ca:	30 fb       	bst	r19, 0
    22cc:	66 f0       	brts	.+24     	; 0x22e6 <__ultoa_common+0x2a>
    22ce:	aa 27       	eor	r26, r26
    22d0:	66 0f       	add	r22, r22
    22d2:	77 1f       	adc	r23, r23
    22d4:	88 1f       	adc	r24, r24
    22d6:	99 1f       	adc	r25, r25
    22d8:	aa 1f       	adc	r26, r26
    22da:	a2 17       	cp	r26, r18
    22dc:	10 f0       	brcs	.+4      	; 0x22e2 <__ultoa_common+0x26>
    22de:	a2 1b       	sub	r26, r18
    22e0:	63 95       	inc	r22
    22e2:	38 50       	subi	r19, 0x08	; 8
    22e4:	a9 f7       	brne	.-22     	; 0x22d0 <__ultoa_common+0x14>
    22e6:	a0 5d       	subi	r26, 0xD0	; 208
    22e8:	aa 33       	cpi	r26, 0x3A	; 58
    22ea:	08 f0       	brcs	.+2      	; 0x22ee <__ultoa_common+0x32>
    22ec:	a9 5d       	subi	r26, 0xD9	; 217
    22ee:	a1 93       	st	Z+, r26
    22f0:	36 f7       	brtc	.-52     	; 0x22be <__ultoa_common+0x2>
    22f2:	b1 11       	cpse	r27, r1
    22f4:	b1 93       	st	Z+, r27
    22f6:	10 82       	st	Z, r1
    22f8:	ca 01       	movw	r24, r20
    22fa:	0c 94 ee 12 	jmp	0x25dc	; 0x25dc <strrev>

000022fe <strtod>:
    22fe:	a0 e0       	ldi	r26, 0x00	; 0
    2300:	b0 e0       	ldi	r27, 0x00	; 0
    2302:	e5 e8       	ldi	r30, 0x85	; 133
    2304:	f1 e1       	ldi	r31, 0x11	; 17
    2306:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__prologue_saves__+0xc>
    230a:	ec 01       	movw	r28, r24
    230c:	6b 01       	movw	r12, r22
    230e:	61 15       	cp	r22, r1
    2310:	71 05       	cpc	r23, r1
    2312:	19 f0       	breq	.+6      	; 0x231a <strtod+0x1c>
    2314:	fb 01       	movw	r30, r22
    2316:	80 83       	st	Z, r24
    2318:	91 83       	std	Z+1, r25	; 0x01
    231a:	7e 01       	movw	r14, r28
    231c:	ff ef       	ldi	r31, 0xFF	; 255
    231e:	ef 1a       	sub	r14, r31
    2320:	ff 0a       	sbc	r15, r31
    2322:	08 81       	ld	r16, Y
    2324:	80 2f       	mov	r24, r16
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	0e 94 cd 12 	call	0x259a	; 0x259a <isspace>
    232c:	89 2b       	or	r24, r25
    232e:	11 f0       	breq	.+4      	; 0x2334 <strtod+0x36>
    2330:	e7 01       	movw	r28, r14
    2332:	f3 cf       	rjmp	.-26     	; 0x231a <strtod+0x1c>
    2334:	0d 32       	cpi	r16, 0x2D	; 45
    2336:	39 f4       	brne	.+14     	; 0x2346 <strtod+0x48>
    2338:	7e 01       	movw	r14, r28
    233a:	82 e0       	ldi	r24, 0x02	; 2
    233c:	e8 0e       	add	r14, r24
    233e:	f1 1c       	adc	r15, r1
    2340:	09 81       	ldd	r16, Y+1	; 0x01
    2342:	11 e0       	ldi	r17, 0x01	; 1
    2344:	08 c0       	rjmp	.+16     	; 0x2356 <strtod+0x58>
    2346:	0b 32       	cpi	r16, 0x2B	; 43
    2348:	29 f4       	brne	.+10     	; 0x2354 <strtod+0x56>
    234a:	7e 01       	movw	r14, r28
    234c:	92 e0       	ldi	r25, 0x02	; 2
    234e:	e9 0e       	add	r14, r25
    2350:	f1 1c       	adc	r15, r1
    2352:	09 81       	ldd	r16, Y+1	; 0x01
    2354:	10 e0       	ldi	r17, 0x00	; 0
    2356:	e7 01       	movw	r28, r14
    2358:	21 97       	sbiw	r28, 0x01	; 1
    235a:	43 e0       	ldi	r20, 0x03	; 3
    235c:	50 e0       	ldi	r21, 0x00	; 0
    235e:	62 ee       	ldi	r22, 0xE2	; 226
    2360:	72 e0       	ldi	r23, 0x02	; 2
    2362:	ce 01       	movw	r24, r28
    2364:	0e 94 d6 12 	call	0x25ac	; 0x25ac <strncasecmp_P>
    2368:	89 2b       	or	r24, r25
    236a:	c1 f4       	brne	.+48     	; 0x239c <strtod+0x9e>
    236c:	23 96       	adiw	r28, 0x03	; 3
    236e:	45 e0       	ldi	r20, 0x05	; 5
    2370:	50 e0       	ldi	r21, 0x00	; 0
    2372:	6d ed       	ldi	r22, 0xDD	; 221
    2374:	72 e0       	ldi	r23, 0x02	; 2
    2376:	ce 01       	movw	r24, r28
    2378:	0e 94 d6 12 	call	0x25ac	; 0x25ac <strncasecmp_P>
    237c:	89 2b       	or	r24, r25
    237e:	09 f4       	brne	.+2      	; 0x2382 <strtod+0x84>
    2380:	25 96       	adiw	r28, 0x05	; 5
    2382:	c1 14       	cp	r12, r1
    2384:	d1 04       	cpc	r13, r1
    2386:	19 f0       	breq	.+6      	; 0x238e <strtod+0x90>
    2388:	f6 01       	movw	r30, r12
    238a:	c0 83       	st	Z, r28
    238c:	d1 83       	std	Z+1, r29	; 0x01
    238e:	11 11       	cpse	r17, r1
    2390:	f6 c0       	rjmp	.+492    	; 0x257e <strtod+0x280>
    2392:	60 e0       	ldi	r22, 0x00	; 0
    2394:	70 e0       	ldi	r23, 0x00	; 0
    2396:	80 e8       	ldi	r24, 0x80	; 128
    2398:	9f e7       	ldi	r25, 0x7F	; 127
    239a:	fa c0       	rjmp	.+500    	; 0x2590 <strtod+0x292>
    239c:	43 e0       	ldi	r20, 0x03	; 3
    239e:	50 e0       	ldi	r21, 0x00	; 0
    23a0:	6a ed       	ldi	r22, 0xDA	; 218
    23a2:	72 e0       	ldi	r23, 0x02	; 2
    23a4:	ce 01       	movw	r24, r28
    23a6:	0e 94 d6 12 	call	0x25ac	; 0x25ac <strncasecmp_P>
    23aa:	89 2b       	or	r24, r25
    23ac:	59 f4       	brne	.+22     	; 0x23c4 <strtod+0xc6>
    23ae:	c1 14       	cp	r12, r1
    23b0:	d1 04       	cpc	r13, r1
    23b2:	09 f4       	brne	.+2      	; 0x23b6 <strtod+0xb8>
    23b4:	e9 c0       	rjmp	.+466    	; 0x2588 <strtod+0x28a>
    23b6:	f2 e0       	ldi	r31, 0x02	; 2
    23b8:	ef 0e       	add	r14, r31
    23ba:	f1 1c       	adc	r15, r1
    23bc:	f6 01       	movw	r30, r12
    23be:	e0 82       	st	Z, r14
    23c0:	f1 82       	std	Z+1, r15	; 0x01
    23c2:	e2 c0       	rjmp	.+452    	; 0x2588 <strtod+0x28a>
    23c4:	20 e0       	ldi	r18, 0x00	; 0
    23c6:	30 e0       	ldi	r19, 0x00	; 0
    23c8:	a9 01       	movw	r20, r18
    23ca:	c0 e0       	ldi	r28, 0x00	; 0
    23cc:	d0 e0       	ldi	r29, 0x00	; 0
    23ce:	f7 01       	movw	r30, r14
    23d0:	80 ed       	ldi	r24, 0xD0	; 208
    23d2:	a8 2e       	mov	r10, r24
    23d4:	a0 0e       	add	r10, r16
    23d6:	89 e0       	ldi	r24, 0x09	; 9
    23d8:	8a 15       	cp	r24, r10
    23da:	30 f1       	brcs	.+76     	; 0x2428 <strtod+0x12a>
    23dc:	91 2f       	mov	r25, r17
    23de:	92 60       	ori	r25, 0x02	; 2
    23e0:	b9 2e       	mov	r11, r25
    23e2:	81 2f       	mov	r24, r17
    23e4:	88 70       	andi	r24, 0x08	; 8
    23e6:	12 ff       	sbrs	r17, 2
    23e8:	04 c0       	rjmp	.+8      	; 0x23f2 <strtod+0xf4>
    23ea:	81 11       	cpse	r24, r1
    23ec:	24 c0       	rjmp	.+72     	; 0x2436 <strtod+0x138>
    23ee:	21 96       	adiw	r28, 0x01	; 1
    23f0:	22 c0       	rjmp	.+68     	; 0x2436 <strtod+0x138>
    23f2:	81 11       	cpse	r24, r1
    23f4:	21 97       	sbiw	r28, 0x01	; 1
    23f6:	a5 e0       	ldi	r26, 0x05	; 5
    23f8:	b0 e0       	ldi	r27, 0x00	; 0
    23fa:	0e 94 01 13 	call	0x2602	; 0x2602 <__muluhisi3>
    23fe:	dc 01       	movw	r26, r24
    2400:	cb 01       	movw	r24, r22
    2402:	88 0f       	add	r24, r24
    2404:	99 1f       	adc	r25, r25
    2406:	aa 1f       	adc	r26, r26
    2408:	bb 1f       	adc	r27, r27
    240a:	9c 01       	movw	r18, r24
    240c:	ad 01       	movw	r20, r26
    240e:	2a 0d       	add	r18, r10
    2410:	31 1d       	adc	r19, r1
    2412:	41 1d       	adc	r20, r1
    2414:	51 1d       	adc	r21, r1
    2416:	28 39       	cpi	r18, 0x98	; 152
    2418:	89 e9       	ldi	r24, 0x99	; 153
    241a:	38 07       	cpc	r19, r24
    241c:	48 07       	cpc	r20, r24
    241e:	89 e1       	ldi	r24, 0x19	; 25
    2420:	58 07       	cpc	r21, r24
    2422:	48 f0       	brcs	.+18     	; 0x2436 <strtod+0x138>
    2424:	16 60       	ori	r17, 0x06	; 6
    2426:	06 c0       	rjmp	.+12     	; 0x2434 <strtod+0x136>
    2428:	9e ef       	ldi	r25, 0xFE	; 254
    242a:	a9 12       	cpse	r10, r25
    242c:	0a c0       	rjmp	.+20     	; 0x2442 <strtod+0x144>
    242e:	13 fd       	sbrc	r17, 3
    2430:	40 c0       	rjmp	.+128    	; 0x24b2 <strtod+0x1b4>
    2432:	18 60       	ori	r17, 0x08	; 8
    2434:	b1 2e       	mov	r11, r17
    2436:	8f ef       	ldi	r24, 0xFF	; 255
    2438:	e8 1a       	sub	r14, r24
    243a:	f8 0a       	sbc	r15, r24
    243c:	00 81       	ld	r16, Z
    243e:	1b 2d       	mov	r17, r11
    2440:	c6 cf       	rjmp	.-116    	; 0x23ce <strtod+0xd0>
    2442:	80 2f       	mov	r24, r16
    2444:	8f 7d       	andi	r24, 0xDF	; 223
    2446:	85 34       	cpi	r24, 0x45	; 69
    2448:	a1 f5       	brne	.+104    	; 0x24b2 <strtod+0x1b4>
    244a:	80 81       	ld	r24, Z
    244c:	8d 32       	cpi	r24, 0x2D	; 45
    244e:	11 f4       	brne	.+4      	; 0x2454 <strtod+0x156>
    2450:	10 61       	ori	r17, 0x10	; 16
    2452:	06 c0       	rjmp	.+12     	; 0x2460 <strtod+0x162>
    2454:	8b 32       	cpi	r24, 0x2B	; 43
    2456:	21 f0       	breq	.+8      	; 0x2460 <strtod+0x162>
    2458:	31 96       	adiw	r30, 0x01	; 1
    245a:	61 e0       	ldi	r22, 0x01	; 1
    245c:	70 e0       	ldi	r23, 0x00	; 0
    245e:	04 c0       	rjmp	.+8      	; 0x2468 <strtod+0x16a>
    2460:	81 81       	ldd	r24, Z+1	; 0x01
    2462:	32 96       	adiw	r30, 0x02	; 2
    2464:	62 e0       	ldi	r22, 0x02	; 2
    2466:	70 e0       	ldi	r23, 0x00	; 0
    2468:	80 53       	subi	r24, 0x30	; 48
    246a:	8a 30       	cpi	r24, 0x0A	; 10
    246c:	18 f0       	brcs	.+6      	; 0x2474 <strtod+0x176>
    246e:	e6 1b       	sub	r30, r22
    2470:	f7 0b       	sbc	r31, r23
    2472:	1f c0       	rjmp	.+62     	; 0x24b2 <strtod+0x1b4>
    2474:	60 e0       	ldi	r22, 0x00	; 0
    2476:	70 e0       	ldi	r23, 0x00	; 0
    2478:	60 38       	cpi	r22, 0x80	; 128
    247a:	9c e0       	ldi	r25, 0x0C	; 12
    247c:	79 07       	cpc	r23, r25
    247e:	5c f4       	brge	.+22     	; 0x2496 <strtod+0x198>
    2480:	db 01       	movw	r26, r22
    2482:	aa 0f       	add	r26, r26
    2484:	bb 1f       	adc	r27, r27
    2486:	aa 0f       	add	r26, r26
    2488:	bb 1f       	adc	r27, r27
    248a:	6a 0f       	add	r22, r26
    248c:	7b 1f       	adc	r23, r27
    248e:	66 0f       	add	r22, r22
    2490:	77 1f       	adc	r23, r23
    2492:	68 0f       	add	r22, r24
    2494:	71 1d       	adc	r23, r1
    2496:	31 96       	adiw	r30, 0x01	; 1
    2498:	df 01       	movw	r26, r30
    249a:	11 97       	sbiw	r26, 0x01	; 1
    249c:	8c 91       	ld	r24, X
    249e:	80 53       	subi	r24, 0x30	; 48
    24a0:	8a 30       	cpi	r24, 0x0A	; 10
    24a2:	50 f3       	brcs	.-44     	; 0x2478 <strtod+0x17a>
    24a4:	14 ff       	sbrs	r17, 4
    24a6:	03 c0       	rjmp	.+6      	; 0x24ae <strtod+0x1b0>
    24a8:	71 95       	neg	r23
    24aa:	61 95       	neg	r22
    24ac:	71 09       	sbc	r23, r1
    24ae:	c6 0f       	add	r28, r22
    24b0:	d7 1f       	adc	r29, r23
    24b2:	11 ff       	sbrs	r17, 1
    24b4:	08 c0       	rjmp	.+16     	; 0x24c6 <strtod+0x1c8>
    24b6:	c1 14       	cp	r12, r1
    24b8:	d1 04       	cpc	r13, r1
    24ba:	29 f0       	breq	.+10     	; 0x24c6 <strtod+0x1c8>
    24bc:	cf 01       	movw	r24, r30
    24be:	01 97       	sbiw	r24, 0x01	; 1
    24c0:	f6 01       	movw	r30, r12
    24c2:	80 83       	st	Z, r24
    24c4:	91 83       	std	Z+1, r25	; 0x01
    24c6:	ca 01       	movw	r24, r20
    24c8:	b9 01       	movw	r22, r18
    24ca:	0e 94 f6 0d 	call	0x1bec	; 0x1bec <__floatunsisf>
    24ce:	21 2f       	mov	r18, r17
    24d0:	23 70       	andi	r18, 0x03	; 3
    24d2:	23 30       	cpi	r18, 0x03	; 3
    24d4:	19 f0       	breq	.+6      	; 0x24dc <strtod+0x1de>
    24d6:	4b 01       	movw	r8, r22
    24d8:	5c 01       	movw	r10, r24
    24da:	06 c0       	rjmp	.+12     	; 0x24e8 <strtod+0x1ea>
    24dc:	4b 01       	movw	r8, r22
    24de:	5c 01       	movw	r10, r24
    24e0:	b7 fa       	bst	r11, 7
    24e2:	b0 94       	com	r11
    24e4:	b7 f8       	bld	r11, 7
    24e6:	b0 94       	com	r11
    24e8:	20 e0       	ldi	r18, 0x00	; 0
    24ea:	30 e0       	ldi	r19, 0x00	; 0
    24ec:	a9 01       	movw	r20, r18
    24ee:	c5 01       	movw	r24, r10
    24f0:	b4 01       	movw	r22, r8
    24f2:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
    24f6:	88 23       	and	r24, r24
    24f8:	09 f4       	brne	.+2      	; 0x24fc <strtod+0x1fe>
    24fa:	3e c0       	rjmp	.+124    	; 0x2578 <strtod+0x27a>
    24fc:	d7 ff       	sbrs	r29, 7
    24fe:	06 c0       	rjmp	.+12     	; 0x250c <strtod+0x20e>
    2500:	d1 95       	neg	r29
    2502:	c1 95       	neg	r28
    2504:	d1 09       	sbc	r29, r1
    2506:	09 ef       	ldi	r16, 0xF9	; 249
    2508:	12 e0       	ldi	r17, 0x02	; 2
    250a:	02 c0       	rjmp	.+4      	; 0x2510 <strtod+0x212>
    250c:	01 e1       	ldi	r16, 0x11	; 17
    250e:	13 e0       	ldi	r17, 0x03	; 3
    2510:	68 01       	movw	r12, r16
    2512:	f8 e1       	ldi	r31, 0x18	; 24
    2514:	cf 1a       	sub	r12, r31
    2516:	d1 08       	sbc	r13, r1
    2518:	90 e2       	ldi	r25, 0x20	; 32
    251a:	e9 2e       	mov	r14, r25
    251c:	f1 2c       	mov	r15, r1
    251e:	ce 15       	cp	r28, r14
    2520:	df 05       	cpc	r29, r15
    2522:	74 f0       	brlt	.+28     	; 0x2540 <strtod+0x242>
    2524:	f8 01       	movw	r30, r16
    2526:	25 91       	lpm	r18, Z+
    2528:	35 91       	lpm	r19, Z+
    252a:	45 91       	lpm	r20, Z+
    252c:	54 91       	lpm	r21, Z
    252e:	c5 01       	movw	r24, r10
    2530:	b4 01       	movw	r22, r8
    2532:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <__mulsf3>
    2536:	4b 01       	movw	r8, r22
    2538:	5c 01       	movw	r10, r24
    253a:	ce 19       	sub	r28, r14
    253c:	df 09       	sbc	r29, r15
    253e:	ef cf       	rjmp	.-34     	; 0x251e <strtod+0x220>
    2540:	04 50       	subi	r16, 0x04	; 4
    2542:	11 09       	sbc	r17, r1
    2544:	f5 94       	asr	r15
    2546:	e7 94       	ror	r14
    2548:	0c 15       	cp	r16, r12
    254a:	1d 05       	cpc	r17, r13
    254c:	41 f7       	brne	.-48     	; 0x251e <strtod+0x220>
    254e:	8a 2d       	mov	r24, r10
    2550:	88 0f       	add	r24, r24
    2552:	8b 2d       	mov	r24, r11
    2554:	88 1f       	adc	r24, r24
    2556:	8f 3f       	cpi	r24, 0xFF	; 255
    2558:	49 f0       	breq	.+18     	; 0x256c <strtod+0x26e>
    255a:	20 e0       	ldi	r18, 0x00	; 0
    255c:	30 e0       	ldi	r19, 0x00	; 0
    255e:	a9 01       	movw	r20, r18
    2560:	c5 01       	movw	r24, r10
    2562:	b4 01       	movw	r22, r8
    2564:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <__cmpsf2>
    2568:	81 11       	cpse	r24, r1
    256a:	06 c0       	rjmp	.+12     	; 0x2578 <strtod+0x27a>
    256c:	82 e2       	ldi	r24, 0x22	; 34
    256e:	90 e0       	ldi	r25, 0x00	; 0
    2570:	80 93 4e 3c 	sts	0x3C4E, r24	; 0x803c4e <errno>
    2574:	90 93 4f 3c 	sts	0x3C4F, r25	; 0x803c4f <errno+0x1>
    2578:	c5 01       	movw	r24, r10
    257a:	b4 01       	movw	r22, r8
    257c:	09 c0       	rjmp	.+18     	; 0x2590 <strtod+0x292>
    257e:	60 e0       	ldi	r22, 0x00	; 0
    2580:	70 e0       	ldi	r23, 0x00	; 0
    2582:	80 e8       	ldi	r24, 0x80	; 128
    2584:	9f ef       	ldi	r25, 0xFF	; 255
    2586:	04 c0       	rjmp	.+8      	; 0x2590 <strtod+0x292>
    2588:	60 e0       	ldi	r22, 0x00	; 0
    258a:	70 e0       	ldi	r23, 0x00	; 0
    258c:	80 ec       	ldi	r24, 0xC0	; 192
    258e:	9f e7       	ldi	r25, 0x7F	; 127
    2590:	cd b7       	in	r28, 0x3d	; 61
    2592:	de b7       	in	r29, 0x3e	; 62
    2594:	ec e0       	ldi	r30, 0x0C	; 12
    2596:	0c 94 2b 13 	jmp	0x2656	; 0x2656 <__epilogue_restores__+0xc>

0000259a <isspace>:
    259a:	91 11       	cpse	r25, r1
    259c:	0c 94 fe 12 	jmp	0x25fc	; 0x25fc <__ctype_isfalse>
    25a0:	80 32       	cpi	r24, 0x20	; 32
    25a2:	19 f0       	breq	.+6      	; 0x25aa <isspace+0x10>
    25a4:	89 50       	subi	r24, 0x09	; 9
    25a6:	85 50       	subi	r24, 0x05	; 5
    25a8:	c8 f7       	brcc	.-14     	; 0x259c <isspace+0x2>
    25aa:	08 95       	ret

000025ac <strncasecmp_P>:
    25ac:	fb 01       	movw	r30, r22
    25ae:	dc 01       	movw	r26, r24
    25b0:	41 50       	subi	r20, 0x01	; 1
    25b2:	50 40       	sbci	r21, 0x00	; 0
    25b4:	88 f0       	brcs	.+34     	; 0x25d8 <strncasecmp_P+0x2c>
    25b6:	8d 91       	ld	r24, X+
    25b8:	81 34       	cpi	r24, 0x41	; 65
    25ba:	1c f0       	brlt	.+6      	; 0x25c2 <strncasecmp_P+0x16>
    25bc:	8b 35       	cpi	r24, 0x5B	; 91
    25be:	0c f4       	brge	.+2      	; 0x25c2 <strncasecmp_P+0x16>
    25c0:	80 5e       	subi	r24, 0xE0	; 224
    25c2:	65 91       	lpm	r22, Z+
    25c4:	61 34       	cpi	r22, 0x41	; 65
    25c6:	1c f0       	brlt	.+6      	; 0x25ce <strncasecmp_P+0x22>
    25c8:	6b 35       	cpi	r22, 0x5B	; 91
    25ca:	0c f4       	brge	.+2      	; 0x25ce <strncasecmp_P+0x22>
    25cc:	60 5e       	subi	r22, 0xE0	; 224
    25ce:	86 1b       	sub	r24, r22
    25d0:	61 11       	cpse	r22, r1
    25d2:	71 f3       	breq	.-36     	; 0x25b0 <strncasecmp_P+0x4>
    25d4:	99 0b       	sbc	r25, r25
    25d6:	08 95       	ret
    25d8:	88 1b       	sub	r24, r24
    25da:	fc cf       	rjmp	.-8      	; 0x25d4 <strncasecmp_P+0x28>

000025dc <strrev>:
    25dc:	dc 01       	movw	r26, r24
    25de:	fc 01       	movw	r30, r24
    25e0:	67 2f       	mov	r22, r23
    25e2:	71 91       	ld	r23, Z+
    25e4:	77 23       	and	r23, r23
    25e6:	e1 f7       	brne	.-8      	; 0x25e0 <strrev+0x4>
    25e8:	32 97       	sbiw	r30, 0x02	; 2
    25ea:	04 c0       	rjmp	.+8      	; 0x25f4 <strrev+0x18>
    25ec:	7c 91       	ld	r23, X
    25ee:	6d 93       	st	X+, r22
    25f0:	70 83       	st	Z, r23
    25f2:	62 91       	ld	r22, -Z
    25f4:	ae 17       	cp	r26, r30
    25f6:	bf 07       	cpc	r27, r31
    25f8:	c8 f3       	brcs	.-14     	; 0x25ec <strrev+0x10>
    25fa:	08 95       	ret

000025fc <__ctype_isfalse>:
    25fc:	99 27       	eor	r25, r25
    25fe:	88 27       	eor	r24, r24

00002600 <__ctype_istrue>:
    2600:	08 95       	ret

00002602 <__muluhisi3>:
    2602:	0e 94 3d 13 	call	0x267a	; 0x267a <__umulhisi3>
    2606:	a5 9f       	mul	r26, r21
    2608:	90 0d       	add	r25, r0
    260a:	b4 9f       	mul	r27, r20
    260c:	90 0d       	add	r25, r0
    260e:	a4 9f       	mul	r26, r20
    2610:	80 0d       	add	r24, r0
    2612:	91 1d       	adc	r25, r1
    2614:	11 24       	eor	r1, r1
    2616:	08 95       	ret

00002618 <__prologue_saves__>:
    2618:	2f 92       	push	r2
    261a:	3f 92       	push	r3
    261c:	4f 92       	push	r4
    261e:	5f 92       	push	r5
    2620:	6f 92       	push	r6
    2622:	7f 92       	push	r7
    2624:	8f 92       	push	r8
    2626:	9f 92       	push	r9
    2628:	af 92       	push	r10
    262a:	bf 92       	push	r11
    262c:	cf 92       	push	r12
    262e:	df 92       	push	r13
    2630:	ef 92       	push	r14
    2632:	ff 92       	push	r15
    2634:	0f 93       	push	r16
    2636:	1f 93       	push	r17
    2638:	cf 93       	push	r28
    263a:	df 93       	push	r29
    263c:	cd b7       	in	r28, 0x3d	; 61
    263e:	de b7       	in	r29, 0x3e	; 62
    2640:	ca 1b       	sub	r28, r26
    2642:	db 0b       	sbc	r29, r27
    2644:	cd bf       	out	0x3d, r28	; 61
    2646:	de bf       	out	0x3e, r29	; 62
    2648:	09 94       	ijmp

0000264a <__epilogue_restores__>:
    264a:	2a 88       	ldd	r2, Y+18	; 0x12
    264c:	39 88       	ldd	r3, Y+17	; 0x11
    264e:	48 88       	ldd	r4, Y+16	; 0x10
    2650:	5f 84       	ldd	r5, Y+15	; 0x0f
    2652:	6e 84       	ldd	r6, Y+14	; 0x0e
    2654:	7d 84       	ldd	r7, Y+13	; 0x0d
    2656:	8c 84       	ldd	r8, Y+12	; 0x0c
    2658:	9b 84       	ldd	r9, Y+11	; 0x0b
    265a:	aa 84       	ldd	r10, Y+10	; 0x0a
    265c:	b9 84       	ldd	r11, Y+9	; 0x09
    265e:	c8 84       	ldd	r12, Y+8	; 0x08
    2660:	df 80       	ldd	r13, Y+7	; 0x07
    2662:	ee 80       	ldd	r14, Y+6	; 0x06
    2664:	fd 80       	ldd	r15, Y+5	; 0x05
    2666:	0c 81       	ldd	r16, Y+4	; 0x04
    2668:	1b 81       	ldd	r17, Y+3	; 0x03
    266a:	aa 81       	ldd	r26, Y+2	; 0x02
    266c:	b9 81       	ldd	r27, Y+1	; 0x01
    266e:	ce 0f       	add	r28, r30
    2670:	d1 1d       	adc	r29, r1
    2672:	cd bf       	out	0x3d, r28	; 61
    2674:	de bf       	out	0x3e, r29	; 62
    2676:	ed 01       	movw	r28, r26
    2678:	08 95       	ret

0000267a <__umulhisi3>:
    267a:	a2 9f       	mul	r26, r18
    267c:	b0 01       	movw	r22, r0
    267e:	b3 9f       	mul	r27, r19
    2680:	c0 01       	movw	r24, r0
    2682:	a3 9f       	mul	r26, r19
    2684:	70 0d       	add	r23, r0
    2686:	81 1d       	adc	r24, r1
    2688:	11 24       	eor	r1, r1
    268a:	91 1d       	adc	r25, r1
    268c:	b2 9f       	mul	r27, r18
    268e:	70 0d       	add	r23, r0
    2690:	81 1d       	adc	r24, r1
    2692:	11 24       	eor	r1, r1
    2694:	91 1d       	adc	r25, r1
    2696:	08 95       	ret

00002698 <_exit>:
    2698:	f8 94       	cli

0000269a <__stop_program>:
    269a:	ff cf       	rjmp	.-2      	; 0x269a <__stop_program>
